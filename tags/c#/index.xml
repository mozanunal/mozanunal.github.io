<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C# on M.Ozan Unal</title><link>https://mozanunal.com/tags/c%23/</link><description>Recent content in C# on M.Ozan Unal</description><generator>Hugo</generator><language>en</language><copyright>Copyright © 2014–2024</copyright><lastBuildDate>Thu, 09 Jun 2016 04:45:00 +0000</lastBuildDate><atom:link href="https://mozanunal.com/tags/c%23/index.xml" rel="self" type="application/rss+xml"/><item><title>[TR] WPF ile Ev Otomasyonu Arayüzü</title><link>https://mozanunal.com/2016/06/wpf-ile-ev-otomasyonu-arayuzu/</link><pubDate>Thu, 09 Jun 2016 04:45:00 +0000</pubDate><guid>https://mozanunal.com/2016/06/wpf-ile-ev-otomasyonu-arayuzu/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar,&lt;/strong>&lt;br>
Bu yazımda .NET platformunun bir teknolojisi olan WPF kullanarak ev otomasyonu kontrol paneli yapmayı anlatacağım. Yaptığım bu projenin başlıca işlevi şudur; 5 farklı sensörden bulunulan ortamın sıcaklığı, nemi, zehirli gaz durumu, ortamda canlı olup olmadığı, ortamda yağış olup olmadığı Arduino yardımıyla alınır ve bu sensor dataları C# arayüzünde gösterilir. Eğer onay kutusu işaretlenirse istenmeyen bir durumda (gaz sızıntısı, eve hırsız girmesi, yağmur için kurulabilir.) program uyarı olarak girilen adrese bir adet mail gönderir.&lt;a href="https://drive.google.com/file/d/0B5j__Lyt9ozbVTRIOVFVcVVWX3c/view?usp=sharing">Projenin Arduino ve C# kaynak kodunu buradan indirebilirsiniz.&lt;/a>&lt;/p></description></item><item><title>[TR] Arduino Due Osiloskop</title><link>https://mozanunal.com/2015/05/arduino-due-osiloskop/</link><pubDate>Sat, 02 May 2015 01:38:00 +0000</pubDate><guid>https://mozanunal.com/2015/05/arduino-due-osiloskop/</guid><description>&lt;p>&lt;strong>Merhaba Arkadaşlar,&lt;/strong>&lt;/p>
&lt;p>Bugün size Arduino Due ile yaptığım osiloskop bahsedeceğim. Arduino Dueyi seçmemin bir kaç nedeni var tabi. Arduino Duede standart Arduinoların 8 bitlik Atmega işlemcilerinden farklı olarak 32 bitlik Arm Cortex M3 var. Bu işlemcinin 84 Mhzlik saat hızı bu proje için elverişli kılıyor.&lt;/p>
&lt;p>Osiloskop projesine başlarken amacım Due ile mümkün olan en yüksek örnekleme hızlı osiloskobu yapmaktı. İlk olarak arduinonun standart AnalogRead() fonksiyonunu denedim. Bir örnek alma süresi 40 uS kadar sürdü. Daha sonra &lt;a href="https://frenki.net/2013/10/fast-analogread-with-arduino-due/">bu bağlantıyı&lt;/a> buldum ve oradaki ayarları Duenin ADCsine uyguladım. Osiloskobun son kodu aşağıdaki gibidir. Bu kod sayesinde ADClere direk registerlar.&lt;/p></description></item><item><title>[TR] Serial Port Grapher</title><link>https://mozanunal.com/2014/12/serial-port-grapher/</link><pubDate>Tue, 23 Dec 2014 02:59:00 +0000</pubDate><guid>https://mozanunal.com/2014/12/serial-port-grapher/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar,&lt;/strong>&lt;br>
İlk yazılarımdan birinde seri port üzerinden grafik çizen bir programın C#&amp;rsquo;ta nasıl yazılabileceğini anlatmıştım(&lt;a href="https://mozanunal.com/2014/05/c-gercek-zamanl-grafik-cizme-program/">Buradan ulaşabilirsiniz&lt;/a>.) Bu yazımda ise programın derlenmiş ve setup haline getirilmiş halini paylaşıyorum. Fark ettim ki bir sürü insan böyle bir programa ihtiyaç duyuyormuş. Bu program sayesinde Arduinonuzdan(başka işlemciler veya boardlar da olabilir.) veya herhangi bir serial port cihazından gönderdiğiniz &amp;ldquo;string&amp;rdquo; formattındaki verilerin gerçek zamanlı  olarak grafiğini çizdirebilirsiniz. Tek dikkat etmeniz gereken gelen verinin&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>$,data1,data2,data3, 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>şeklinde olmasıdır aksi takdirde program gelen veriyi dikkate almaz. Programla alakalı iyi, kötü görüşlerinizi veya sorunları, bugları bana yollayabilirsiniz.&lt;br>
&lt;a href="https://drive.google.com/file/d/0B5j__Lyt9ozbU3JELTV3MWpqWFk/view?usp=sharing">Programı buradan indirebiliriniz&lt;/a>&lt;/p></description></item><item><title>[TR] Kamera ile Araç Sayısı Takibi</title><link>https://mozanunal.com/2014/11/kamera-ile-arac-says-takibi/</link><pubDate>Fri, 21 Nov 2014 03:41:00 +0000</pubDate><guid>https://mozanunal.com/2014/11/kamera-ile-arac-says-takibi/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar!&lt;/strong>&lt;/p>
&lt;p>Bugün size uzun süredir üzerinden uğraştığım bir projeden bahsetmek istiyorum. Projenin amacı kamera ile bir yoldan geçen araç sayını saymak. Ben de bunu okulumun önündeki caddeden çektiğim videoda gerçekleştirdim. İleriki aşamalarda insan sayma uygulaması da geliştirmek istiyorum. Araç uygulaması da hız belirleyecek şekilde veya araç büyüklüğüne, markasına göre sınıflandırma yapacak şekilde geliştirilebilir. Proje Emgucv kütüphanesinin Video Survilance modulü kullanılarak yapılmıştır. Tekrar görüşmek dileğiyle&amp;hellip;&lt;/p>


 
 &lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube-nocookie.com/embed/N8HpOoq8yYk?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
 >&lt;/iframe>
 &lt;/div></description></item><item><title>[TR] Bilgisayardan Gimbal Kontrolü</title><link>https://mozanunal.com/2014/10/bilgisayardan-gimbal-kontrolu/</link><pubDate>Tue, 21 Oct 2014 02:47:00 +0000</pubDate><guid>https://mozanunal.com/2014/10/bilgisayardan-gimbal-kontrolu/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar!&lt;/strong>&lt;br>
Bugün size bilgisayardan gimbal kontrolü projemden bahsedeceğim. Bu projedeki amacım C# ile yazdığım bir arayüzde gimbali kontrol etmek. Gimbal ve bilgisayar arasında haberleşmeyi sağlaması ve servoları kontrol etmesi için bir arduino yerleştirdim. C# arayüzünün görevi, tıkladığım butonlara göre arduinoya &amp;ldquo;serial port&amp;rdquo; üzerinden gönderilecek karakteri değiştirmesidir.&lt;br>
Arduino da serial porttan aldığı karaktere göre servoları yönetir.&lt;/p>
&lt;p>Bilgisayardan Gimbal Kontrolü&lt;/p>


 
 &lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube-nocookie.com/embed/Z61XZI12bS0?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
 >&lt;/iframe>
 &lt;/div>

&lt;p>Arayüz programını C# kodlarının bu proje için örnek kısımlar aşağıdaki gibidir.&lt;/p></description></item><item><title>[TR] Yüz Tanıma ile Güvenlik (Passface)</title><link>https://mozanunal.com/2014/10/yuz-tanma-ile-guvenlik-passface/</link><pubDate>Tue, 14 Oct 2014 17:39:00 +0000</pubDate><guid>https://mozanunal.com/2014/10/yuz-tanma-ile-guvenlik-passface/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar!&lt;/strong>&lt;br>
Bugünkü yazımda kendi ürettiğim bir güvenlik yazılımından bahsetmek istiyorum. Projenin amacı bir yüzü kilit olarak tanımlamak daha sonra güvenlik gerektiren yerlere sadece bu yüz algılandığında izin vermektir. Üretilen programın ismi Passface&amp;rsquo;dir(pass-word) kelimesinden esinlenilerek yapılmıştır( kelimeyle değil yüzle şifrele!). Proje yine bir görüntü işleme projesidir, şifreleyecek yüzün tespitini otomatik yapar ve daha sonra tanımlanan yüzü aramaya başlar. İlk baştaki yüz tespitini yapmak için Haar Cascade algortması kullanılmıştır. Daha sonraki eşleştirme için ise &amp;ldquo;SURF Feature Detector&amp;rdquo; algoritması kullanılmıştır. Projenin tanıtım videosu aşağıdadır. Tekrar görüşmek üzere&amp;hellip;&lt;/p></description></item><item><title>[TR] Kamera ile Fare Kontrolü</title><link>https://mozanunal.com/2014/10/kamera-ile-fare-kontrolu/</link><pubDate>Fri, 10 Oct 2014 01:24:00 +0000</pubDate><guid>https://mozanunal.com/2014/10/kamera-ile-fare-kontrolu/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar!&lt;/strong>&lt;/p>
&lt;p>Bu yazımda Kamera ile Fare Kontrolü projemden bahsetmek istiyorum. Bu proje aslında bir görüntü işleme projesidir. Eli filtrelerle tespit edip fare gibi kullanmak amaçlanmıştır. El açılınca tıklama sağlanır, tıklama olayı çok hassas değil maalesef arka arkaya çok tıklama yapabiliyor. Biraz daha uzaktan kontrol edilirse gezinme olayı da daha hassas olabilir.&lt;/p>
&lt;p>Program C# dilinde Emgucv kütüphanesiyle yazılmıştır. Algoritmasına gelecek olursak, Hsv ve Ycbcr renk uzaylarında &amp;ldquo;skin detection&amp;rdquo; algoritmaları uygulanmıştır. Bu sayede el &amp;ldquo;counter&amp;rdquo; olarak tespit edilmiştir. Merkezi kullanılarak farenin gitmesi&lt;br>
gereken koordinantlar belirlenmiştir. &amp;ldquo;convexity defects&amp;rdquo; methodu kullanılarak da parmak sayısı belirlenmiştir. 5. parmakta pek hassas olarak çalışamamasına rağmen diğer parmakları rahat bir şekilde sayılmasını sağlamaktadır.&lt;/p></description></item><item><title>[TR] Gerçek Zamanlı Obje Takibi(EmguCv ile)</title><link>https://mozanunal.com/2014/09/gercek-zamanl-obje-takibiemgucv-ile/</link><pubDate>Mon, 29 Sep 2014 15:54:00 +0000</pubDate><guid>https://mozanunal.com/2014/09/gercek-zamanl-obje-takibiemgucv-ile/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar!&lt;/strong>&lt;/p>
&lt;p>Bu yazımda sizlere EmguCv kütüphanesi ile yazdığım görüntü işleme uygulaması hakkında bilgi vermek istiyorum. Uygulamada ortamdan farklı bir renkte olan nesneyi rengine göre filtre edip onu gerçek zamanlı olarak takip etme amaçlanmıştır. Geliştirme ortamı olarak Microsoft Visual Studio, dil olarak C# programlama
dili kullanılmıştır.&lt;br>
Programın genel algoritmasına gelirsek, şöyle özetleyebiliriz;&lt;/p>
&lt;ol>
&lt;li>Görüntü kameradan RGB formatında alınıp başka bir renkli resim görüntüleme yöntemi olan HSV formatına dönüştürülmüştür.&lt;/li>
&lt;li>HSV filtresi için uygun değerler test edilip bulunmuştur ve renk filtesi uygunlanmıştır.&lt;/li>
&lt;li>Renk filtresinden kalan gürültüler erode ve dilate morfolojik operatörleriyle azaltılmıştır.&lt;/li>
&lt;li>Counter Analysis ile görüntü &amp;ldquo;counter&amp;quot;lara ayrılmıştır. Sadece &amp;ldquo;counter&amp;rdquo; alanı belli bir değerden büyük olan &amp;ldquo;counter&amp;quot;lar dikkat alınmıştır. Bu sayede son kalan gürültüler de engelenmiştir.&lt;/li>
&lt;/ol>
&lt;p>Projemin tanıtım videosuna aşağıdan ulaşabilirsiniz. Kodlar videoda gösterilmektedir. Tekrar görüşmek üzere&amp;hellip;&lt;/p></description></item><item><title>[TR] C# Gerçek Zamanlı Grafik Çizme Programı</title><link>https://mozanunal.com/2014/05/c-gercek-zamanl-grafik-cizme-program/</link><pubDate>Tue, 27 May 2014 05:17:00 +0000</pubDate><guid>https://mozanunal.com/2014/05/c-gercek-zamanl-grafik-cizme-program/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar!&lt;/strong>&lt;br>
&lt;a href="https://github.com/mozanunal/serialPortGrapher">Programın kaynak koduna buradan ulaşabilirsiniz.&lt;/a>&lt;br>
İkinci yazımda C# ile gerçek zamanlı grafik çizdirme uygulamasından bahsedeceğim. Bu uygulamada C# programlama dili ve Microsoft Visual Studio 2010 kullanılmıştır. C# ile grafik çizmemize olanak sağlayan zed graph kütüphanesinden yararlanılmıştır.&lt;a href="https://zedgraph.sourceforge.net/index.html">Bu kütüphaneyi buradan indirebilirsiniz&lt;/a>. Sistemin genel algoritmasına bakarsak şöyle çalışır; seri porttan veri okunur, veri aralardaki virgüllere göre parse edilip labellera aktarılır, Eklenen &amp;ldquo;Timer&amp;rdquo; öğesi ile timerın her periyodunda zaman belirten labela geçen zaman kadar eklenir böylece kaçıncı saniye olduğu tutulur, aynı zamanda timerın her bir periyodunda x değerleri zaman, y değerleri data noktaları olmak üzere grafiğe bir nokta eklenir. Şimdi çalışma şeklini daha ayrıntılı bir şekilde inceleyelim.&lt;/p></description></item><item><title>[TR] İlk Yayın</title><link>https://mozanunal.com/2014/05/ilk-yayn/</link><pubDate>Sun, 25 May 2014 03:44:00 +0000</pubDate><guid>https://mozanunal.com/2014/05/ilk-yayn/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar!&lt;/strong>&lt;br>
    Yaptığım projeleri arşivleyebilmek ve bunlardan herkesin yararlanabilmesi için blog açmaya karar verdim. Blogumda size C# üzerinden arayüz yapımı, bilgisayar mikroişlemci iletişimi, arduino uygulamaları, pic uygulamaları ve basit sensörlü elektronik alanında projeleri fotoğraflarıyla ve işin teorisini de anlatarak paylaşmayı planlıyorum. Aynı zamanda az da olsa Android programlamadan(robotik uygulamalar için gerekli olan kısımdan) ve hobi olarak yaptığım oyunları da buradan sizinle paylaşmayı planlıyorum. Elektroniğe merak salmış arkadaşlarımın elimden geldiğince(ben de yolun çok başındayım) en iyi şekilde bilgilendirmek dileğim :).  Daha önce üniversitemde uzun mesafe takip sistemleri üzerine çalışmalar yaptım. Gps, IMU, ve daha bir sürü sensörden aldığımız verileri, yer istasyonuna iletmek ve arayüz programıyla bunların görsellenmesiydi görevim. Şimdi ise insansız hava araçları ve görüntü işleme üzerine çalışmaktayım. Aynı zamanda hobi olarak pic ve arduino devreleri, çeşitli devreler üretmeye, yapmaya devam ediyorum. Tekrar görüşmek üzere&amp;hellip;&lt;/p></description></item></channel></rss>