<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>EmguCV on Mehmet Ozan Ünal</title><link>https://mozanunal.com/tags/emgucv/</link><description>Recent content in EmguCV on Mehmet Ozan Ünal</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2014–2023</copyright><lastBuildDate>Sat, 04 Jun 2016 19:50:00 +0000</lastBuildDate><atom:link href="https://mozanunal.com/tags/emgucv/index.xml" rel="self" type="application/rss+xml"/><item><title>PassFace: Face Recognition Using OpenCV</title><link>https://mozanunal.com/2016/06/passface-face-recognition-using-opencv/</link><pubDate>Sat, 04 Jun 2016 19:50:00 +0000</pubDate><guid>https://mozanunal.com/2016/06/passface-face-recognition-using-opencv/</guid><description>Hi,
PassFace is a face recognizing program develop using EmguCV (OpenCV wrapper). It is possible to use 4 different algorithm and 3 different source(Camera, Video, Image) in this program. Most of the tryings have been made using LFW data set which have 13000 pictures of 1500 different people.Details of project can be reached below:
Source Code: https://github.com/mozanunal/PassFace
{% youtube d6LI42NEZZY? %}
1. Introduction Definition of the Problem In this project, a program is going to develop to recognize the faces and compare them the faces it learned and give the identity of the person.</description></item><item><title>[TR] Kamera ile Araç Sayısı Takibi</title><link>https://mozanunal.com/2014/11/kamera-ile-arac-says-takibi/</link><pubDate>Fri, 21 Nov 2014 03:41:00 +0000</pubDate><guid>https://mozanunal.com/2014/11/kamera-ile-arac-says-takibi/</guid><description>Herkese Merhabalar!
Bugün size uzun süredir üzerinden uğraştığım bir projeden bahsetmek istiyorum. Projenin amacı kamera ile bir yoldan geçen araç sayını saymak. Ben de bunu okulumun önündeki caddeden çektiğim videoda gerçekleştirdim. İleriki aşamalarda insan sayma uygulaması da geliştirmek istiyorum. Araç uygulaması da hız belirleyecek şekilde veya araç büyüklüğüne, markasına göre sınıflandırma yapacak şekilde geliştirilebilir. Proje Emgucv kütüphanesinin Video Survilance modulü kullanılarak yapılmıştır. Tekrar görüşmek dileğiyle&amp;hellip;</description></item><item><title>[TR] Kamera ile Fare Kontrolü</title><link>https://mozanunal.com/2014/10/kamera-ile-fare-kontrolu/</link><pubDate>Fri, 10 Oct 2014 01:24:00 +0000</pubDate><guid>https://mozanunal.com/2014/10/kamera-ile-fare-kontrolu/</guid><description>Herkese Merhabalar!
Bu yazımda Kamera ile Fare Kontrolü projemden bahsetmek istiyorum. Bu proje aslında bir görüntü işleme projesidir. Eli filtrelerle tespit edip fare gibi kullanmak amaçlanmıştır. El açılınca tıklama sağlanır, tıklama olayı çok hassas değil maalesef arka arkaya çok tıklama yapabiliyor. Biraz daha uzaktan kontrol edilirse gezinme olayı da daha hassas olabilir.
Program C# dilinde Emgucv kütüphanesiyle yazılmıştır. Algoritmasına gelecek olursak, Hsv ve Ycbcr renk uzaylarında &amp;ldquo;skin detection&amp;rdquo; algoritmaları uygulanmıştır. Bu sayede el &amp;ldquo;counter&amp;rdquo; olarak tespit edilmiştir.</description></item><item><title>[TR] Gerçek Zamanlı Obje Takibi(EmguCv ile)</title><link>https://mozanunal.com/2014/09/gercek-zamanl-obje-takibiemgucv-ile/</link><pubDate>Mon, 29 Sep 2014 15:54:00 +0000</pubDate><guid>https://mozanunal.com/2014/09/gercek-zamanl-obje-takibiemgucv-ile/</guid><description>Herkese Merhabalar!
Bu yazımda sizlere EmguCv kütüphanesi ile yazdığım görüntü işleme uygulaması hakkında bilgi vermek istiyorum. Uygulamada ortamdan farklı bir renkte olan nesneyi rengine göre filtre edip onu gerçek zamanlı olarak takip etme amaçlanmıştır. Geliştirme ortamı olarak Microsoft Visual Studio, dil olarak C# programlama dili kullanılmıştır.
Programın genel algoritmasına gelirsek, şöyle özetleyebiliriz;
Görüntü kameradan RGB formatında alınıp başka bir renkli resim görüntüleme yöntemi olan HSV formatına dönüştürülmüştür. HSV filtresi için uygun değerler test edilip bulunmuştur ve renk filtesi uygunlanmıştır.</description></item></channel></rss>