{"meta":{"title":"Mehmet Ozan Ünal","subtitle":"Data, ML and Coding","description":"This is my blog where I share blog posts on topics that interest me while learning about electronics and coding.","author":"Mehmet Ozan Ünal","url":"https://mozanunal.com"},"pages":[{"title":"categories","date":"2023-01-18T11:16:34.261Z","updated":"2023-01-18T11:16:34.261Z","comments":true,"path":"categories/index.html","permalink":"https://mozanunal.com/categories/index.html","excerpt":"","text":"","raw":null,"content":null},{"title":"About","date":"2019-08-12T08:29:30.000Z","updated":"2023-01-18T11:16:34.261Z","comments":true,"path":"about/index.html","permalink":"https://mozanunal.com/about/index.html","excerpt":"","text":"Hello Everyone! I decided to open a blog (2013) so that I could archive my projects and make them available to everyone. In my blog, you can reach various kind of contents which are usually about Drones, Electronics, FPGA, IOT, Microcontrollers, Programming and Signal Processing. Hope to see you again… Education 2018 - 2021 M.Sc. Istanbul Technical University. Biomedical Engineering 2012 - 2017 B.Sc. Istanbul Technical University. Electronics and Communication Engineering 2008 - 2012 High School. Bornova Anatolian High School Github Repos For details Projects and Achievements 2017 Digilent Design Contest (Cluj, Romania), It is a competition about Xilinx fpga based systems. The project for this competition was the detection of sound direction using the microphone arrays. 2017 NASA Space Apps Challenge (Istanbul, Turkey), It is a international hackathon organized by NASA. 1st place is taken by a project to assist people about their own UV exposure using Internet of Things systems. 2014 - 2016 ITUNOM Unmanned Air Vehicle Team. It is a team about unmanned air vehicle in Istanbul Technical University. This team participated AUVSI Student Unmanned Air Systems Competition 2015 and 2016 (Maryland,USA). In 2016, ITUNOM was 13th in total and 1st between multicopter participants. My task in this project electronic team leader. I work about image processing (Opencv) , networking, flight control systems. 2016 Siemens Hackathon Industry 4.0 (Istanbul, Turkey), 3rd place 2016 Google HashCode, 347th in total 1st in Istanbul. 2015 Nasa Space Apps Challenge (Istanbul, Turkey), People’s Choice Award. 2013 Intercollegiate Rocket Engineering Competition (Utah, USA), ITU Iskandil Team, is a team that is involved in rocket-engineering. In June - 2013, this competition was attended. I was on the avionics team of this group. Arduino and PIC microprocessors to be programmed in accordance with their competition duties. Providing communication with the ground station tracking interface and long distance radio modules required for real time tracking of the rocket. 2013 - Present My Blog. I have published some of my project from 2013. I have published 70 projects until this day. My project usually about image processing, air vehicles, Android programming, embedded programming (Arduino, Stm32, Raspberry Pi ) and Augmented Reality. https://mozanunal.com/ Publications M.O. Unal, M. Ertas, I. Yildirim. An Unsupervised Reconstruction Method For Low-Dose CT Using Deep Generative Regularization Prior. arxiv.org, 2020. M.O. Unal, M. Ertas, I. Yildirim. Self-Supervised Training For Low Dose CT Reconstruction. International Symposium on Biomedical Imaging, 2020.","raw":null,"content":null},{"title":"Projects","date":"2017-09-20T08:29:30.000Z","updated":"2023-01-18T11:16:34.484Z","comments":true,"path":"projects/index.html","permalink":"https://mozanunal.com/projects/index.html","excerpt":"","text":"Github ReposProjects and Achievements 2017 Digilent Design Contest (Cluj, Romania), It is a competition about Xilinx fpga based systems. The project for this competition was the detection of sound direction using the microphone arrays. 2017 NASA Space Apps Challenge (Istanbul, Turkey), It is a international hackathon organized by NASA. 1st place is taken by a project to assist people about their own UV exposure using Internet of Things systems. 2014 - 2016 ITUNOM Unmanned Air Vehicle Team. It is a team about unmanned air vehicle in Istanbul Technical University. This team participated AUVSI Student Unmanned Air Systems Competition 2015 and 2016 (Maryland,USA). In 2016, ITUNOM was 13th in total and 1st between multicopter participants. My task in this project electronic team leader. I work about image processing (Opencv) , networking, flight control systems. 2016 Siemens Hackathon Industry 4.0 (Istanbul, Turkey), 3rd place 2016 Google HashCode, 347th in total 1st in Istanbul. 2015 Nasa Space Apps Challenge (Istanbul, Turkey), People’s Choice Award. 2013 Intercollegiate Rocket Engineering Competition (Utah, USA), ITU Iskandil Team, is a team that is involved in rocket-engineering. In June - 2013, this competition was attended. I was on the avionics team of this group. Arduino and PIC microprocessors to be programmed in accordance with their competition duties. Providing communication with the ground station tracking interface and long distance radio modules required for real time tracking of the rocket. 2013 - Present My Blog. I have published some of my project from 2013. I have published 70 projects until this day. My project usually about image processing, air vehicles, Android programming, embedded programming (Arduino, Stm32, Raspberry Pi ) and Augmented Reality. https://mozanunal.com/ Publications","raw":null,"content":null},{"title":"search","date":"2023-01-18T11:16:34.484Z","updated":"2023-01-18T11:16:34.484Z","comments":true,"path":"search/index.html","permalink":"https://mozanunal.com/search/index.html","excerpt":"","text":"","raw":null,"content":null}],"posts":[{"title":"Wallpaper Automation Tool: WPCTL","slug":"wpctl-1","date":"2021-10-12T05:14:07.000Z","updated":"2023-01-18T11:16:34.260Z","comments":true,"path":"2021/10/wpctl-1/","link":"","permalink":"https://mozanunal.com/2021/10/wpctl-1/","excerpt":"","text":"Hey, Today I will come up with a very minimalistic wallpaper automation tool WPCTL. I spend most of my time on the computer. There are not too many options to have fun with while working on the computer. Interesting and colorful photos are one of the favorite entertainment sources for my daily routine. Therefore, I really like auto wallpaper changer programs which surprises me with different photos. I decided to use one of these programs. However, none of them is fulfiled my requirements. I want a wallpaper changer which should be like: It must have beautifull image sources It should be configured easily It should be lightweight and has minimal dependency It should work with multi-monitor and different resolution optionsIn a nutshell, I decided to develop a wallpaper changer script according to my requirements. I started with the image source for my script. There is a website called Unsplash which is a photo sharing website. However, it has a unique feature which differ it from similar apps. It has a very nice and license free API. To keep application similar and with minimum dependency I have written it as a bash scripts. Basically, wpctl script, get image source as argument, read the monitor resolutions and contruct Unsplash url according to them. It download the images from the constructed url and set it as wallpaper using Gnome wallpaper controller. This script also can be add as crontab script. By this, your wallpaper can be changed at the frequency you want. For source there are also 4 options. Details are from readme of Github repository. See you! wpctlWallpaper Control is a minimalist wallpaaper automation tool for linux based on Unsplash Getting StartedIt is working with Unsplash Api Minimalist 100 lines of code zero dependency Auto resolution detection Multi monitor handling Tested on Ubuntu 18.04 with GNOME Desktop Prerequisities1sudo apt-get install wget notify-send Installing123sudo wget --quiet https://github.com/mozanunal/wpctl/releases/download/0.1.0/wpctl \\ -O /usr/local/bin/wpctl &amp;&amp; \\ sudo chmod +x /usr/local/bin/wpctl Try the application123456789101112user@user:$ wpctlPlease provide a valid wallpaper sourceUsage:wpctl &lt;SOURCE&gt; random daily collection topic1,topic2user@user:$ wpctl random--&gt; Random is selected as source.https://source.unsplash.com/random/1920x1080--&gt; From source 'random' wallpaper set. 1920 x 1080 Wallpapers can automatically updated using crontab. Write following command and add line according to your favorite configuration1crontab -e Every hours pick a random wallpaper10 * * * * /usr/local/bin/wpctl random Every day get daily photo as wallpaper10 10 * * * /usr/local/bin/wpctl daily Every 15 mins pick a cat image as your wallpaper1*/15 * * * * /usr/local/bin/wpctl cat Every 3 hours pick a blue image as your wallpaper10 */3 * * * /usr/local/bin/wpctl blue UninstallingRemove binaries1sudo rm /usr/local/bin/wpctl Remove picture1rm -rf $HOME/wpctl Authors Mehmet Ozan Ünal License MIT Acknowledgments Unsplash","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://mozanunal.com/tags/linux/"},{"name":"yazilim","slug":"yazilim","permalink":"https://mozanunal.com/tags/yazilim/"},{"name":"bash script","slug":"bash-script","permalink":"https://mozanunal.com/tags/bash-script/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://mozanunal.com/tags/ubuntu/"},{"name":"wallpaper","slug":"wallpaper","permalink":"https://mozanunal.com/tags/wallpaper/"},{"name":"unsplash","slug":"unsplash","permalink":"https://mozanunal.com/tags/unsplash/"}]},{"title":"Harmonica Note Converter","slug":"harmonica-note-conv","date":"2020-05-07T20:44:00.000Z","updated":"2023-01-18T11:16:34.255Z","comments":true,"path":"2020/05/harmonica-note-conv/","link":"","permalink":"https://mozanunal.com/2020/05/harmonica-note-conv/","excerpt":"","text":"Harmonica Note Converter aims to create a python library to convert notes or tabs for different kind of harmonicas.It is based on musthe. https://github.com/mozanunal/harmonica-note-converter StorySome of you know that I am an ameteur harmonica player and I love harmonicas. I usually play diatonic harmonicas but last time I have bought a chromatic harmonica, which has quite different tone and it is hard to find music notes for it. I am not the best at playing instruments. However, I am good at coding and music theory. That’s why I decide to develop a tool to convert music notes for any instrument to notes for my harmonicas. I also create an modular structure to define new instruments. Getting StartedInstallingFirst, The source code of the project should be cloned to your PC. 1git clone https://github.com/mozanunal/harmonica-note-converter DemoTo test this project in your computer, you should run following commands. 123cd harmonica-note-converterpython3 test.py#python test.py It is a video to demonstrate the tone shift feature of my code. It is quite easy to use. I suggest you to have a look in this link and test the script with following code. See you! Use It For Your Instruments and NotesDefining InstrumentsExample code of C tone diatonic harmonica. You should add your instrument to harmonica folder and add to init file. 123456789101112131415161718192021222324252627282930313233343536373839404142diatonic_C = &#123; \"1\": \"C2\", \"1*\": \"C#2\", \"-1\": \"D2\", \"-1*\": \"D#2\", \"2\": \"E3\", \"2*\": \"E#3\", \"-2\": \"G2\", \"-2*\": \"G#2\", \"3\": \"G2\", \"3*\": \"G#2\", \"-3\": \"B2\", \"-3*\": \"B#2\", \"4\": \"C3\", \"4*\": \"C#3\", \"-4\": \"D3\", \"-4*\": \"D#3\", \"5\": \"E3\", \"5*\": \"E#3\", \"-5\": \"F3\", \"-5*\": \"F#3\", \"6\": \"G3\", \"6*\": \"G#3\", \"-6\": \"A3\", \"-6*\": \"A#3\", \"7\": \"C4\", \"7*\": \"C#4\", \"-7\": \"B3\", \"-7*\": \"B#3\", \"8\": \"E4\", \"8*\": \"E#4\", \"-8\": \"D4\", \"-8*\": \"D#4\", \"9\": \"G4\", \"9*\": \"G#4\", \"-9\": \"F4\", \"-9*\": \"F#4\", \"10\": \"A4\", \"10*\": \"A#4\", \"-10\": \"C5\", \"-10*\": \"C#5\"&#125; Converting Tab Between InstrumentsFollowing script is written to convert Game of Thrones theme song tabsfor diatonic C harmonica to chromatic harmonica tabs. In the first part, the tab string is converted to a song object. Then song exported for swan1040 harmonica. Above this part, you have already learned to implement your instrument. Now, you can export these notes as tab for your instrument. 1234567891011121314151617from harmonica import swan1040, diatonic_Cfrom song import SonggotTheme = Song(\"GoT Theme\")gotTheme.getFromTabs( diatonic_C,\"\"\"-6 -4 -5 +6 -6 -4 -5 +6 +5+6 +4 +5 -5 +6 +4 -5 +5 -4-6 -4 -5 +6 -6 -4 -5 +6 +5+6 +4 +5 -5 +5 +4 -4-8 +7 -4 -6 -3* -5 +6 -6-8 +7 +6 -6 -3* -5 +5 -4\"\"\".replace(\"\\t\",\" \").replace(\"+\",\"\"))gotTheme.exportTabs(swan1040) Script output: 123456789GoT Theme---------------7 -5 -6 7 -7 -5 -6 7 67 5 6 -6 7 5 -6 6 -5-7 -5 -6 7 -7 -5 -6 7 67 5 6 -6 6 5 -5-9 -8* -5 -7 5 -6 7 -7-9 -8* 7 -7 5 -6 6 -5-------------- Shifting the ToneThe other feature which I implemented is tone shifting. It is possible to shift the tone of the song which you give to the system. Probably, it is quite easy task for real musicians, but it is always a challenge for me. It is quite easy to implememted it with code. In that why, I can easily change the tone of the songs which I want to play with my harmonica. Test script: 1234567891011121314151617181920212223from harmonica import swan1040, diatonic_Cfrom song import SonggotTheme = Song(\"GoT Theme\")gotTheme.getFromTabs( diatonic_C,\"\"\"-6 -4 -5 +6 -6 -4 -5 +6 +5+6 +4 +5 -5 +6 +4 -5 +5 -4-6 -4 -5 +6 -6 -4 -5 +6 +5+6 +4 +5 -5 +5 +4 -4-8 +7 -4 -6 -3* -5 +6 -6-8 +7 +6 -6 -3* -5 +5 -4\"\"\".replace(\"\\t\",\" \").replace(\"+\",\"\"))gotTheme.exportTabs(swan1040)gotTheme.shift(-12)gotTheme.exportTabs(swan1040)gotTheme.shift(+14) Output is like: 1234567891011121314151617181920212223242526272829GoT Theme---------------7 -5 -6 7 -7 -5 -6 7 67 5 6 -6 7 5 -6 6 -5-7 -5 -6 7 -7 -5 -6 7 67 5 6 -6 6 5 -5-9 -8* -5 -7 5 -6 7 -7-9 -8* 7 -7 5 -6 6 -5----------------------------GoT Theme-3 -1 -2 3 -3 -1 -2 3 23 1 2 -2 3 1 -2 2 -1-3 -1 -2 3 -3 -1 -2 3 23 1 2 -2 2 1 -1-5 5 -1 -3 1 -2 3 -3-5 5 3 -3 1 -2 2 -1----------------------------GoT Theme-8 6 7 -7 -8 6 7 -7 -6* -7 -5 -6* 7 -7 -5 7 -6* 6 -8 6 7 -7 -8 6 7 -7 -6*-7 -5 -6* 7 -6* -5 69 -9 6 -8 -5 7 -7 -89 -9 -7 -8 -5 7 -6* 6 -------------- Built With Python Python &lt;3 musthe Music Theory Implementation ContributingPlease feel yourself free to add new instruments or new tricks to this mini script. LicenseThis project is licensed under the MIT License - see the LICENSE.md file for details","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"harmonica, note conventer, music theory","slug":"harmonica-note-conventer-music-theory","permalink":"https://mozanunal.com/tags/harmonica-note-conventer-music-theory/"}]},{"title":"Medical Imaging Planes","slug":"imaging-axis","date":"2020-04-29T23:12:00.000Z","updated":"2023-04-09T20:59:45.238Z","comments":true,"path":"2020/04/imaging-axis/","link":"","permalink":"https://mozanunal.com/2020/04/imaging-axis/","excerpt":"","text":"Medical Imaging Planes Axial (Transverse) Plane Coronal Plane Sagittal Plane","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"}],"tags":[{"name":"sagital, coronal, axial, biomedical imaging planes","slug":"sagital-coronal-axial-biomedical-imaging-planes","permalink":"https://mozanunal.com/tags/sagital-coronal-axial-biomedical-imaging-planes/"}]},{"title":"[TR] Manyetik Rezonans Görüntüleme","slug":"mrg","date":"2020-04-26T00:44:00.000Z","updated":"2023-04-09T20:56:36.973Z","comments":true,"path":"2020/04/mrg/","link":"","permalink":"https://mozanunal.com/2020/04/mrg/","excerpt":"","text":"Manyetik Rezonans Görüntüleme1.GirişNormalde vücudumuz RF enerjisine duyarsızdır. Önce veri kaynağımız olan protonların RF enerjisi ile uyarılır hale getirilmesi gerekir. Bunun için hasta çok güçlü bir manyetik alan içerisine yerleştirilir. Bu manyetik etkiyle protonlar manyetik alana uygun şekilde dizilir ve uyarılmaya hazır hale gelirler. Kesit alınacak bölgeye RF enerjisi gönderilir. Protonlar bu enerjiyi alır ve enerjinin miktarına göre konumlarından saparlar. RF enerjisi kesilir. Protonlar eski konumlarına dönerler. Bu dönüş sürecinde aldıkları enerjiyi bir sinyal şeklinde yayarlar. Bu sinyal kayıt edilerek seçilen alanın Hidrojen yoğunluğuyla alakalı bilgi edinilmiş olur. TarihiManyetik Rezonans görüntüleme klasik görüntüleme yöntemleri arasında en son icat edilendir. Eş zamanlı olarak 2 fizikçi tarafından 1947 yılında keşfedilmiştir( Felix Bloch - Edward Mills Purcell). İlk resim 1973 yılında Paul Lauterbur tarafından yapılmıştır. İlk klinik görüntülemeler 1977 yılında yapılmıştır. 2010 yılı itibariyle dünyada toplam 4000 MR Tarayıcı kullanılmaktadır [1]. Şekil 1: İlk MR makinesi prototipleri Şekil 2: İlk Tüm vücut MR prototibi dizaynı 2. Atomik Partiküller ve MagnetizmaRadyo Frekans: Osilasyon frekansı 3kHz- 300GHz olan elektromanyetik dalgalara radyo frekans adı verilir. Manyetik Alan: Hidrojen atomu, çekirdeğinin tek protondan ibaret olması nedeniyle güçlü manyetik alana sahiptir. İnsan vücudunda bol miktarda bulunan bu çekirdek sinyal kaynağı olarak Idealdir. Spin : Atomik ve subatomik partiküllerin açısal momentumu. MRG Hidrojen atomunun manyetik özelliklerini kullanarak çalışır. Hidrojen atomunda bulunan proton normal şartlarda rastgele spinde döner. Fakat yüksek manyetik alan altında bütün Hidrojen atomlarının spinleri aynı yöne getirilir. Devinim (Presesyon), manyetik alan altında sabit manyetik alan altında açısal momentuma sahip anatomik parçacıkların yaptığı harekete denir. Bu yapılan hareketin frekansı manyetik alana ve taneciğin gyromagnetic oranına bağlıdır. Şekil 3: Devinim hareketinin gösterimi Şekil 4: Farklı elementler için gyromagnetic oranlar Şekil 5: Negatif gyrometrik sabiti olan parçacıkların spin yönü ile manyetik moment yönü birbirine zıttır. [2] Protonların presesyonlarının frekansı, manyetik alanın gücü ile doğru orantılıdır. Presesyon, manyetik rezonans olayının temelidir. Protonları etkileyebilmek için önce onları manyetik alan içerisine koyarak presesyon yaptırmak gerekir. Ancak bu durumdaki protonlar dışarıdan gönderilecek presesyon frekansındaki bir radyo dalgasıyla (RF) rezonansa girebilirler [3]. Bu rezonans frekansına Larmor frekansı denir ve gyrometric oran ile manyatik alanın çarpımıyla hesaplanır. Şekil 6: Farklı elemenletlerin MR görüntülemede oluşturdukları duyarlılık oranları [4] Şekil 7: Larmor frekenası formulü Rezonans durumdaki Hidrojenler uyarıldıktan sonra geri eski durumlarına dönerlerken bir manyetik alanlarındaki değişimden dolayı bir sinyal yayarlar. Bu duruma relaksasyon denir. Bu uyarılma ve devamındaki zayıflarma esnasında sırasıyla aşağıdaki olaylar olur [2]. Devinim durumundaki hidrojen atomları toplam manyeyik alan B0 manyetik alanı yönünde olacak şekilde hizalanmışlardır. Toplam net manyetik alan longitutunal (Z) düzlemde yukarı doğrudur. Transverse (X-Y) düzlemde ise toplam net manyetik alan sıfırdır. Sistem B0 manyetik alanın dik olacak bir B1 manyetik alanına sahip olan RF palslar ile uyarılır. Uyarılan sistemde net manyetik alan longitutunal düzlem sıfır olmuştur. Bu arada hidrojen atomları infaz durumuna geçer ve Z ekseni etrafında aynı fazda dönmeye başlarlar. Bu da transverse ekseninde sürekli dönen bir net manyetizasyon oluşturur. Uyarmayı yapan B1 manyetik alanı kaldırılır. Sistem eski haline dönmeye başlar. Bu olaya Free Induction Decay adı verilir. Sistemin relaksasyonu sırasında longitutional manyetik alanın eski halin gönmesine T1 relaksasyonu, transverse düzlemdeki dönmekte olan net manyetizasyonun tekrar sıfır olmasına ise T2 relaksasyonu denir. MR görüntüleme de bu iki relaksasyonun süreleri arasında yorumlar yaparak dokular hakkında bilgi edinilmeye çalışılır. Şekil 8: Relaksasyon sırasında toplam manyatik alanın zamana göre değişimi, Free Inductıon Decay 3. Faraday Indüksiyon Akımı Sinyal KaydıFaraday kanununa göre bir devrede indüklenen emk, devreden geçen manyetik akının zamana göre türevi ile doğru orantılıdır. Bu ifade şöyle yazılabilir [5]: ε: İndüklenen emk (Volt) Φ: Manyetik akı (Weber) t: Zaman (saniye) N sarımlı bir bobinde oluşan emk Telin Doğrusal Hareketi B manyetik alanına dik yönde v hızıyla hareket eden, l uzunluğundaki telin uçları arasında indüklenen emk Telin Dairesel Hareketi B manyetik alanına dik yönde w açısal hızıyla hareket eden, l uzunluğundaki telin uçları arasında indüklenen emk Manyetik rezonans görüntülemede faraday yasasından yola çıkararak çeşitli dizaynlar yapılmaktadır. Gradyan magnetlerden manyetik alan elektrik ile değişken olarak indüklenmesi ve vücuttan yapılan radyo dalgaları ışımalarınının rf sargılar ile alınması da bu prensibe dayanarak tasarlanır. 4. MRG Enstrümanyasyon Şekil 9:MR Enstrümantasyonu genel bakış [6] Sistem temel olarak aşağıdaki kompenentlerden oluşur. Birincil Magnetler: Birincil magnetler güçlü manyetik alanı üretmekten sorumludur. Statik güçte bir manyetik alan üretirler. Seviyeleri 1 Tesladan 3 Teslaya kadar değişebilmektedir. Bu kadar güçlü manyetik alana ulaşabilmek için genelde süper iletken kullanılır. Sürekli açık durumda bırakılırlar sadece bakım olacağı zaman bu magnetler manyetik alan üretmeyi bıraktırılır. 2000lerin başından bu yana 1.5 Teslalık magnetlerin yerini 3 Teslalık magnetler aldı [6]. Şekil 10: Birincil magnetin oluşturduğu manyetik alanın formulü Yukarıdaki eşitlikte görüldüğü gibi elde edilen magnetik güç akımın karesi ve direncin çarpımı ile orantılıdır. Isı kaybını önlemek için tellerin dirençleri mümkün olduğunca düşük tutulur. Bu süperiletken kullanmayı zorunlu hale getiren etkendir. Bilinen bazı materyaller çok düşük sıcaklıklarda neredeyse 0 dirence kadar düşerler. MRG’de bu teller bir kaç yüz amperi taşıyabilir durumda olmalıdırlar. Niobium ve aluminyom alaşımı bir madde ile bu sağlanabilir. Manyetik alanın homojenliği bu magnet için çok önemlidir. MR makinlerine yıllık yapılan bakımda süperiletkenliği sağlamak için kullanılan soğuk gaz yıllık olarak yenilenir. Magnetlerin dışına yerleştirilen magnetik alan önleyiciler ile bu manyetik alanın dışarıya etkisi sıfırlanmaya çalışılır. Bu kalkan olarak çelik karbon tabanlı pasif zayıflatıcılar ya da tes yönde manyetik alan üreten aktif zayıflatıcılar kullanılır. Şekil 11: MR makinesinin 2D kesitinde birincil magnetlerin yeri [1] Gradyan Magnetler: Üç düzlemde yerleştirilmiş bu bobinler sayesinde hastanın pozisyonu değiştirilmeden her üç düzlemde de kesit alınabilir. MR sırasında çıkan yüksek sesten bu bobinler sorumludur. Z ekseninde kullanılan sarglarda 2 ayrı sargı manyetik alanı z eksenin lineer olarak değiştirilebilecek şekilde yerleştirilmiştir. X ve Y ekseninde ise (saddle coin) belirtilen eksenlere dik yönde sarım yapılacak şekide sarımlar sisteme eklenmiştir. Şekil 12: X,Y ve Z ekseninde gradyan magnetler Manyetik alan gradienti manyetik alan değişiminin uzaklık değişimine oranı olarak tanımlanır. Şekil 13: Gradyanın Formulü [7] Gradyan Sargılar güçlü PWM kuvvetlendiriciler ile sürülürler. Anlık olarak 2500 V ve 1000 A gibi değeler görebilirler. Böyle durumlarda iç sıcaklıkları 55 - 60 dereceye kadar ulaşabilir. Bu nedenle gradyan sargıları soğutabilmek için MR cihazlarında gerekli üniteler bulunur. Şekil 14: Gradyan sargılar soğutma sistemleri [7] Radyo Frekans Bobinleri: İki temel görevi vardır. Birincisi manyetik alan altındaki Hidrojen atomlarını uyararak spinlerini değiştirmlerini sağlamak ikinci olarak RF salınımı yaptığında salınan RF enerjisini toplamak için anten görevi görerek görüntünün oluşturulmasını sağlamak. Pulse sekansı oluşturarak belli bir bölgenin aktifleştirilip ölçülmesini sağlar. Genelde bir dizi radya frekans bobinleri bir arada kullanılır. Bu sayede pozisyonun alıcıya etkisindeki farklılıklar kompanze edilmeye çalışılır. Şekil 15: RF sargı giriş devresi örneği Çevre gürültülerden etkilenmemesi için ve o frekans kanalına kilitlemek için rf sargısının çıkışında aynı frekansta referans clock üretilmelidir. Bunu yapabilmek için kapasitans ve endüktans tabanlı devreler kullanılabilir. Fres frekansında sinyal üretmek için gerekli kapasite ve endüktans değeleri aşağıdaki formüle göre hesaplanabilir. Aşağıda ise örnek bir devre şeması eklenmiştir. Verimli bir RF sargı devresi için bahsedilen frekanstaki hassasiyet yüksek ve devrenen giriş çıkış verimleri yüksek olmalıdır. Bunu sağlamak için empadans uydurma devreleri gereklidir. Bu devreler sayesinde alınan ya da yollanan sinyal koaksiyel kablonun girişinde 50 Ohm direncine getirilmelidir. Devredeki sanal komponentlerin birbirini yok etmesi de sağlanarak bu aşamada yaşanan hassasiyet kaybı en aza indirilir. Şekil 16: RF sargıların elektromanteik koruyucularla kaplanması(shielding) RF sargılara gürültü oluşturabilecek bir diğer etken de sistem içerisindeki komponentlerdir. MRG makineleri içerisinde yüksek akımların geçtiği bir çok komponent içerir bu manyetik alan ve rf tarafında kirliğe sebep olur bu gürültülerin azaltıması için sistemdeki farklı komponentler sistemden elektriksel olarak yalıtılmış durumdadır. Simetrik bir dizayn izlenerek bu gürültülerin mümkün olduğunca birbirini yok etkesi de yardımcı olabiliecek yöntemlerdendir [1]. Rf sargıların hem alıcı hem verici olarak kullanılabilmesi için aşağıdaki gibi bir devreye dönüştürümelidir. DC sinya uygulanarak diyotlar aracılığıyla sargıların çalışma yönü seçilir. Diyot olarak genelde PIN diyotlar kullanılır [7]. Şekil 17: Örnek pals sekansı. Bilgisayar sistemi hepsini senkron olarak çalışmasından sorumludur. [8] Bilgisayar Sistemi: Alınan sinyal yukarıdaki gibi demodule edllir. Demodolasyon sırasında alınan sinyal 90 derece fazı kaydırılmış hali ile çarpılır çıkan sinyalde iki tane belirgin komponent olacaktır. Birincisi sinyalin base banda indilimiş hali ikinci olarak da f0 sinyalinin tam iki katındaki komponent. Sadece basebandaki sinyal istendiği için diğer sinyal alçak geçiren filtre ile gücü azaltılır. Devrenin devamında analog dijital çeviricilerle ile sinyal dijital ortama aktarılır. Genelde örnekleme frekansı 80 MHz örnekleme çözünürlüğü ise 14 bittir [8]. Alınan sinyallerin toplanıp çeşitli veri işleme ve 3 boyutlu tahmin yöntemleriyle insanın anlayabileceği görüntüler haline çevirildiği yerdir. Kaynakça[1] N. &amp; W. A. Smith, Introduction to Medical Imaging: Physics, Engineering and Clinical Applications, Cambridge: Cambridge University Press, 2010.[2] P. E. P. R. Bloembergen N, «Relaxation effects in nuclear magnetic resonance absorption,» Phys Rev 1948, pp. 73:679-712, 1948.[3] O. Konez, Manyetik Rezonans Görüntüleme, İstanbul: Nobel Tıp Kitabevleri, 1995.[4] D. Moratal, «Medical Imaging: Principles, Detectors, and Electronics [Book Reviews],» %1 içinde Pulse, IEEE, 2011, p. 227.[5] M. E. Davison, «A Simple Proof that the Lorentz Force, Law Implied Faradays Law of Induction, when B is Time Independent, cilt 41, no. 713, p. American Journal of Physics, 1973.[6] P. Joseph P. Hornak, The Basics of MRI, Cornell, 1996-2018.[7] M. F. Allen D. Elster, «the Questions and Answers in MRI,» [Çevrimiçi]. Available: http://mriquestions.com/index.html. [Erişildi: 5 1 2019]. |[8] Y. Wang, «MRI Instrumentation and Pulse Sequences,» %1 içinde Medical Imaging I, New York.[9] K. Inievski, Medical İmaging Priniples,Detetors and Electronics, Canada: John Wiley Sons, Inc., Hoboken, New Jersey, 2009.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"}],"tags":[{"name":"Manyetik Rezondans Görüntüleme, MRG, MRI","slug":"Manyetik-Rezondans-Goruntuleme-MRG-MRI","permalink":"https://mozanunal.com/tags/Manyetik-Rezondans-Goruntuleme-MRG-MRI/"}]},{"title":"Hash Code 2020","slug":"hash-code-2020","date":"2020-03-31T20:00:12.000Z","updated":"2023-01-18T11:16:34.255Z","comments":true,"path":"2020/03/hash-code-2020/","link":"","permalink":"https://mozanunal.com/2020/03/hash-code-2020/","excerpt":"","text":"Hello Everyone, I want to share our solution for Google Hash Code 2020. It is the code repo of team titanium-white for Google Hash Code 2020 Online Qualification Round. We have writen our code in Python. Code can be reached from here CodeBasically, the problem class is the backbone of the system. It handles the inputs and outputs with functions __init__ and dump. It read the input files and creates objects according to that. I think the one of the thing we did well is this __init__ function.It create all the objects like books, libraries even if book2score dictionary. It also handles the solving opeartion. It iterate trough the days and get max predicted score from every library available. When the libraries calculating the max pred scores, they get the current state as input. Therefore their predictionsa are more accurate. After the library is selected the state is updated such as day, already scanned books and state of the selected library. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384# main.pyfrom library import Library, Bookimport numpy as npclass Problem(object): def __init__(self, filename): print('file--', filename) f = open(filename) l = f.readline().split(' ') self.filename = filename self.nBooks, self.nLibs, self.nDays = int(l[0]), int(l[1]), int(l[2]) self.books = [ Book(i,int(score)) for i, score in enumerate(f.readline().split(' '))] sumb = 0 for b in self.books: sumb += b.score print( sumb/1000000 ) self.book2Score = &#123;book.id: int(book.score) for book in self.books&#125; self.libs = [] for libId in range(self.nLibs): l = [int(i) for i in f.readline().split(' ')] nBooks, nSign, nScan = l[0], l[1], l[2] books = [ Book(int(i), int(self.book2Score[int(i)])) for i in f.readline().split(' ') ] lib = Library(libId, nBooks, nSign, nScan, books) self.libs.append(lib) self.pri() def solve(self): t = 0 solution = [] readBookSet = set() while t &lt; self.nDays: print('-----', t) scoreList = [] readBookList = [] for lib in self.libs: if lib.registered == False: score, curBookList = lib.predMaxScore(self.nDays - t, readBookSet) scoreList.append( score ) readBookList.append( curBookList ) else: scoreList.append(0) readBookList.append( [ ] ) if len(scoreList) == 0: break if max(scoreList) == 0: break libIndex = scoreList.index(max(scoreList)) self.libs[libIndex].registeredDay = t self.libs[libIndex].registered = True self.libs[libIndex].solBooks = readBookList[libIndex] readBookSet = readBookSet.union(readBookList[libIndex]) solution.append(self.libs[libIndex]) t += self.libs[libIndex].nSign print([(lib.id, lib.nSign, lib.registeredDay) for lib in solution]) return solution def dump(self, solution): f = open(self.filename.replace('data/', 'out/'), 'w+') f.write('&#123;&#125;\\n'.format(len(solution))) for lib in solution: books = lib.solBooks f.write('&#123;&#125; &#123;&#125;\\n'.format( lib.id, len(books) )) s = \"\" for book in books: s+= str(book) + ' ' s+='\\n' f.write(s) f.close() def pri(self): print('------') print(self.nBooks, self.nLibs, self.nDays) #print(self.libs) print('------')if __name__ == \"__main__\": p = Problem('data/a.txt') solution = p.solve() p.dump(solution) The Second critical class is Library class. The vital function in our implementation is predMaxScore. We are doing calculating this withtotal book score / (sign day*sign day). Because, during our experiments, we saw that the sign days length is quite important especially for some datasets. Total book score is simply if in that day the library is chosen, how much of the books can be scanned until the end of total days. Of course these books are selecting according to their scores and they should be not scanned before. 1234567891011121314151617181920212223242526272829303132333435363738394041424344# library.pyimport operatorclass Library(object): def __init__(self, idx, nBook, nSign, nScan, books): self.id = idx self.nBook = nBook self.nSign = nSign self.nScan = nScan self.books = list(reversed(sorted(books, key=operator.attrgetter('score')) )) self.tempBooks = self.books[:] self.registered = False self.registeredDay = None self.solBooks = [] def predMaxScore(self, nDays, readBookSet): restDays = nDays - self.nSign if restDays &lt; 0: return 0, [] unReadBooks = set([book.id for book in self.tempBooks]) - readBookSet newBooks = [] for book in self.tempBooks: if book.id in unReadBooks: newBooks.append(book) self.tempBooks = newBooks sumScore = 0 bookCap = restDays*self.nScan readBooks= self.tempBooks[:bookCap] readBooksId=[book.id for book in self.tempBooks[:bookCap]] for book in readBooks: sumScore += book.score return float(sumScore)/(float(self.nSign)**2), readBooksId def __repr__(self): return \"Lib[&#123;&#125;:&#123;&#125;:&#123;&#125;--&#123;&#125;]\".format(self.nBook, self.nSign, self.nScan, self.books)class Book(object): def __init__(self, id, score, scanned=False): self.id = id self.score = score def __repr__(self): return \"Book[&#123;&#125;:&#123;&#125;]\".format(self.id, self.score) ResultsWith these scores, we were 231th in the World and 7th in Turkey. You can check out my posts about Hash Code 2017 and Hash Code 2018: https://mozanunal.com/2017/07/Google-Hash-Code-2017/https://mozanunal.com/2018/04/hash-code-2018/ Hopefully, see you again. Thank you!","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"Hash Code","slug":"Hash-Code","permalink":"https://mozanunal.com/tags/Hash-Code/"},{"name":"Hash Code 2020","slug":"Hash-Code-2020","permalink":"https://mozanunal.com/tags/Hash-Code-2020/"},{"name":"Google Hash Code","slug":"Google-Hash-Code","permalink":"https://mozanunal.com/tags/Google-Hash-Code/"}]},{"title":"Coolest C Trick","slug":"coolest-c-trick","date":"2020-03-30T20:45:00.000Z","updated":"2023-01-18T11:16:34.252Z","comments":true,"path":"2020/03/coolest-c-trick/","link":"","permalink":"https://mozanunal.com/2020/03/coolest-c-trick/","excerpt":"","text":"Hello Everyone, Just a quick post here… Today I have seen a code snippet which makes me quite happy. 123456789#include &lt;stdio.h&gt;int main()&#123; int x = 10; while (x --&gt; 0) // x goes to 0 &#123; printf(\"%d \", x); &#125;&#125; The the output of this is:19 8 7 6 5 4 3 2 1 0 It was a little suprising for me at first sight.I thought that what the hell is --&gt; operator.After then I understand that it is actually x-- and &gt;. X compared with 0 (cheked if it is bigger than 0) and then it is decremented by 1.Therefore, this loop can be decoded to this:12345while (x &gt; 0) // x goes to 0&#123; x = x - 1; printf(\"%d \", x);&#125; After the mistery solved, I still like this approach. I am planning to use it in my code. Hope to see you soon, again.","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"Programming","slug":"Programming","permalink":"https://mozanunal.com/tags/Programming/"},{"name":"C-iterator","slug":"C-iterator","permalink":"https://mozanunal.com/tags/C-iterator/"},{"name":"--> operator","slug":"operator","permalink":"https://mozanunal.com/tags/operator/"}]},{"title":"Micropython Mqtt Streamer","slug":"micropython-mqtt-stream","date":"2020-02-26T19:36:00.000Z","updated":"2023-04-09T21:02:57.233Z","comments":true,"path":"2020/02/micropython-mqtt-stream/","link":"","permalink":"https://mozanunal.com/2020/02/micropython-mqtt-stream/","excerpt":"","text":"Micropython Mqtt StreamerHello everyone,I have developed a micropython code to stream accelerometer data over mqtt. Also I have created a tool to visualize the data which is transferred from remote MQTT device which is executing micropython code. Demo DevelopmentThe first thing which I tried with micropython is connecting ESP8266 to a WiFi. I have tried the following script which I found from the official documentation of the micropython. 1234import networkwlan = network.WLAN(network.STA_IF)wlan.active(True)wlan.connect('ssid', 'password') The wifi ip of the module can be examined with wlan.ifconfig() command. I should say that scripting with a microcontoller is quite fun. ESP8266 was connected over usb over Uart line to my computer and I can scripting using micropython shell. For example: I have used upip module to install umqtt.simple upython module to my ESP8266. After installing the umqtt module, I have tested its basic examples and they worked without any problem. 1234&gt;&gt;&gt; import upip&gt;&gt;&gt; dir(upip)['__class__', '__name__', 'errno', 'gc', 'help', 'json', 'os', 'sys', 'usocket', 'ussl', 'uzlib', 'main', 'debug', 'tarfile', 'install_path', 'cleanup_files', 'gzdict_sz', 'file_buf', 'NotFoundError', 'op_split', 'op_basename', '_makedirs', 'save_file', 'install_tar', 'expandhome', 'warn_ussl', 'url_open', 'get_pkg_metadata', 'fatal', 'install_pkg', 'install', 'get_install_path', 'cleanup']&gt;&gt;&gt; upip.install(\"umqtt.simple\") Next phase is reading data from accelerometer. I have used MPU6050 as the IMU sensor. It consists a gyro and an accelerometer sensor. I have used i2c scanner example code to detect the i2c address of the device. The address of my MPU6050 is 0x68. 123456789&gt;&gt;&gt; i2c.scan() # scan for slaves on the bus, # returning a list of valid addresses&gt;&gt;&gt; for device in devices:... print(\"Decimal address: \",device,\" | Hexa address: \",hex(device)).........Decimal address: 104 | Hexa address: 0x68 The following class is developed to read sensor values directly from MPU6050.1234567891011121314151617181920212223242526272829303132333435363738394041424344454647import machineclass accel(): def __init__(self, i2c, addr=0x68): self.iic = i2c self.addr = addr self.iic.start() self.iic.writeto(self.addr, bytearray([107, 0])) self.iic.stop() def get_raw_values(self): self.iic.start() a = self.iic.readfrom_mem(self.addr, 0x3B, 14) self.iic.stop() return a def get_ints(self): b = self.get_raw_values() c = [] for i in b: c.append(i) return c def bytes_toint(self, firstbyte, secondbyte): if not firstbyte &amp; 0x80: return firstbyte &lt;&lt; 8 | secondbyte return - (((firstbyte ^ 255) &lt;&lt; 8) | (secondbyte ^ 255) + 1) def get_values(self): raw_ints = self.get_raw_values() vals = &#123;&#125; vals[\"AcX\"] = self.bytes_toint(raw_ints[0], raw_ints[1]) vals[\"AcY\"] = self.bytes_toint(raw_ints[2], raw_ints[3]) vals[\"AcZ\"] = self.bytes_toint(raw_ints[4], raw_ints[5]) vals[\"Tmp\"] = self.bytes_toint(raw_ints[6], raw_ints[7]) / 340.00 + 36.53 vals[\"GyX\"] = self.bytes_toint(raw_ints[8], raw_ints[9]) vals[\"GyY\"] = self.bytes_toint(raw_ints[10], raw_ints[11]) vals[\"GyZ\"] = self.bytes_toint(raw_ints[12], raw_ints[13]) return vals # returned in range of Int16 # -32768 to 32767 def val_test(self): # ONLY FOR TESTING! Also, fast reading sometimes crashes IIC from time import sleep while 1: print(self.get_values()) sleep(0.05) Main loop is also quite strait-forward. It read samples from acc and send these over mqtt protocol directly to the server. 123456789101112131415from machine import I2C, Pinimport mpu6050from umqtt.simple import MQTTClientimport time, jsoni2c = I2C(scl=Pin(5), sda=Pin(4))accelerometer = mpu6050.accel(i2c)c = MQTTClient(\"umqtt_client\", \"iot.eclipse.org\")c.connect()def run(): while True: c.publish( b\"micropython/test/mpu6050\", json.dumps(accelerometer.get_values()) ) time.sleep_ms(45)run() The code can be reached from this github repo. References https://randomnerdtutorials.com/micropython-mqtt-esp32-esp8266/ https://github.com/adamjezek98/MPU6050-ESP8266-MicroPython mpu6050.py https://docs.micropython.org/en/latest/library/network.WLAN.html https://learn.adafruit.com/micropython-basics-esp8266-webrepl/access-webrepl","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"IoT","slug":"Electronics/IoT","permalink":"https://mozanunal.com/categories/Electronics/IoT/"}],"tags":[{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"MPU6050","slug":"MPU6050","permalink":"https://mozanunal.com/tags/MPU6050/"},{"name":"Mqtt","slug":"Mqtt","permalink":"https://mozanunal.com/tags/Mqtt/"},{"name":"IoT","slug":"IoT","permalink":"https://mozanunal.com/tags/IoT/"}]},{"title":"Digital Filtering of an ECG Signal","slug":"ecg-signal","date":"2019-11-16T23:36:00.000Z","updated":"2023-04-09T20:59:33.149Z","comments":true,"path":"2019/11/ecg-signal/","link":"","permalink":"https://mozanunal.com/2019/11/ecg-signal/","excerpt":"","text":"Hello everyone,Today, I will show how can you filter out the noise from the raw ECG signal. Let’s start! What is ECG?Electrocardiography (ECG) is the measurement of the bioelectrical activity during the contraction and relaxation stages of the atria and ventricles of the heart, the stimulation of the heart and the conduction of the stimulus. ECG signal has some specific waves which correspond to particular conditions. Part of the ECG Signal ECG CircuitDuring this process, a 9V battery was used as a source to prevent leakage current through the person to whom the electrodes were connected and the sockets to which the oscilloscopes were connected were checked. Also, in case of any leakage, the person was allowed to separate his feet from the floor with the help of the plastic chair he was sitting during the experiment and not to be in physical contact with any person. The electrode attached to the right leg is connected to the low-potential end (ground) of the battery as shown in the figure above. The remaining two electrode terminals were connected to the negative and positive input terminals on pins 2 and 3 of the INA118. A quite simple circuit is created. It is shown in the next image. It basically consists of 3 components: 2 x 9V battery, instrumentation amplifier INA118 with proper connection and a gain resistor, and electrode connections. The circuit is not the main focus of this post. For further information please send me an email. In this post, I will focus on digital filters that can be used to filter out the noise from the ECG signal. ECG Circuit Schematic Cleaning NoiseScope image of the output signal of the ECG circuit The output of the circuit sampled using a digital oscilloscope and then it is exported as CSV file. The file consists of 8000 samples for 2 seconds time window which means 4 kHz sampling frequency. The raw oscilloscope output can be examined from the next figure. Raw ECG Data First, the frequency domain components of the ECG data are examined. FFT transform is applied to data and its frequency components are plotted in the next figure. Since the Nyquist theorem says that maximum frequency can be measured is half of the sampling frequency, the max frequency component is 2 kHz. 0 - 2 kHz Frequency Spectrum In the next figure, the plot is zoomed to frequency components between 0 - 200 Hz. As you can see from the plot, there is a big noise component at 50 Hz frequency because of the mains electricity. It should be filtered for a cleaner ECG signal. 0 - 200 Hz Frequency Spectrum A digital IIR filter is designed to filter out a 50 Hz frequency component. It is a Chebyshev Type 2 filter with 16 filter coefficients. It provides -60 dB gain between 47 - 53 Hz. 50 Hz Band Stop Filter After the filtering, the frequency domain components are examined again. The noise component at 50 Hz is removed from the signal. Frequency Domain Result The time-domain result of the filter can be examined in the next figure. As you can see from this figure, the time domain components of the ECG is cleaner. Time Domain Result The next filter is designed to remove high-frequency noise from the signal. For this purpose, a 0-200 Hz low pass filter is designed. 0 - 200 Hz Low Pass Filter Time Domain Result Finally, A simple moving average filter is applied to the signal. The next figure is the final result of our ECG project. After the filtering operations, most of the ECG components are cleaner and now it is easier to extract ECG components from the signal. 100 Point Simple Moving Average Filtered Signal Test it yourselfClick here to download the code and the ECG signal example","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"}],"tags":[{"name":"ECG","slug":"ECG","permalink":"https://mozanunal.com/tags/ECG/"},{"name":"Digital filtering for ECG","slug":"Digital-filtering-for-ECG","permalink":"https://mozanunal.com/tags/Digital-filtering-for-ECG/"},{"name":"50 Hz filtering from ECG","slug":"50-Hz-filtering-from-ECG","permalink":"https://mozanunal.com/tags/50-Hz-filtering-from-ECG/"}]},{"title":"Show Images Directly on Terminal: img2sh","slug":"img2sh","date":"2019-11-03T07:48:19.000Z","updated":"2023-01-18T11:16:34.256Z","comments":true,"path":"2019/11/img2sh/","link":"","permalink":"https://mozanunal.com/2019/11/img2sh/","excerpt":"","text":"Img2shHello there, In this post, I want to tell a brief story of how I have created a tool named img2sh. It is also my first python package which is published over PyPI. In this very post, I will try to answer questions like:How is it developed?What are the challenges?How should a package created and deployed over PyPI?Let’s continue! Img2sh is a tool to show images directly on the terminal. For colored images, 256 xterm color support is required. This script basically resizes the image with anti-aliasing and quantized its colors to xterm color pallette. Github repository of the project can be reached from here DemoTesting the package is super easy. Install using pip and run. 12pip install img2sh --userimg2sh demo.jpeg Result: Interactive mode 12345img2sh demo.jpeg -w 80 -iq: quit z: zoom+ x: zoom- c: reset arrow keys for navigation cmd: q For detailed usage arguments: 1234567891011121314$ python img2sh/cli.py --helpusage: cli.py [-h] [-w WIDTH] [-i] ImageShow images directly on terminal.positional arguments: Image the directory of the image which will be openedoptional arguments: -h, --help show this help message and exit -w WIDTH, --width WIDTH image width on the terminal -i, --interactive open image in interactive mode StoryAs it can be understood from its name, img2sh is a python app to show images directly in the terminal. I think it could be helpful when connected over ssh to a server with no desktop environment. The images can be examined quickly on the terminal screen.While the tool was developed, the followings are the challenges I have encountered. ImagesIn the digital world, images are made of pixels. Pixel is the smallest part of the image which can contain only one color. Color changes with the pixel intensity values. To keep it simple, I added a grayscale image to illustrate the pixel concept. It is a quite low resolution, grayscale image. Pixel values are shown in the following image. Pixel intensity values are changing with how far the pixel value close to black or white. Colored images basically work with the same concept. The difference is colored images are usually indicated with 3 different pixel values which are red, blue and green. By this method, the proportion of these color intensity is changed to show different colors on screen. Colors in terminalHow the coloring mechanism works in the terminal should be figured out to implement this app. I understood clearly how colors are handling in an image using the following link. After that, I have found colored python module which provides support for colored terminal output from python apps. I implement the colors using this library. http://jafrog.com/2013/11/23/colors-in-terminal.html Parsing command-line argumentsHow should the command line arguments be parsed? Actually it is quite easy with python. Let’s examine the next code block: 1234567891011121314151617import argparseparser = argparse.ArgumentParser( description='Show images directly on terminal.')parser.add_argument(\"Image\", help=\"the directory of the image which will be opened\")parser.add_argument( \"-w\", \"--width\", help=\"image width on the terminal\", type=int)parser.add_argument( \"-i\", \"--interactive\", default=False, action='store_true', help=\"open image in interactive mode\",)args = parser.parse_args() After the initialization, arguments can be used with commands like args.width. The arguments can be configured as mandatory or optional and the type of argument also be specified. This package is a pretty useful and standard package that is widely used most of the python projects. Image formatsFor further improvement in the project, it should be solved how different image formats can handle. Fortunately, Pillow package can handle various kinds of image formats such as jpeg, png, tiff. This packet can provide pixel values for different image types using the same get_pixel method interface. However, the problem is the dimension of the color values are representing. At standard jpeg a pixel value is represented with 24 bits which are 3 bytes. Each byte value represents a different color channels Red, Blue, and Green. Png differs from the alpha channel. At PNG images, colors are created with 4 bytes. Red, Blue, Green, and Alpha. Alpha is the transparency channel of the image. So the dimension of the pixel is different. But this problem is easily solved in findNearestColor function. In these functions, the dimension of the pixel is handled. Setup.pyIn this section, I will try to answer the question that how to create a setup.py file which supports also entry point and can be executed without python shell. Setup.py file is used to define the python package metadata and its installation instructions. 123456789101112131415161718192021222324252627282930313233343536373839404142from setuptools import setup, find_packageswith open('requirements.txt') as f: requirements = f.read().splitlines()setup( name='img2sh', version=__import__('img2sh').__version__, install_requires=requirements, description=( 'Show images directly on terminal using Xterm colors.' ), long_description=open('README.md').read(), long_description_content_type='text/markdown', author=\"Mehmet Ozan Unal\", author_email='mehmetozanunal@gmail.com', maintainer=\"Mehmet Ozan Unal\", maintainer_email='mehmetozanunal@gmail.com', license=\"MIT\", packages=find_packages(), platforms=[\"all\"], url='https://github.com/mozanunal/img2sh', classifiers=[ 'Development Status :: 4 - Beta', 'Operating System :: OS Independent', 'Intended Audience :: Developers', 'License :: OSI Approved :: BSD License', 'Programming Language :: Python', 'Programming Language :: Python :: Implementation', 'Programming Language :: Python :: 2', 'Programming Language :: Python :: 2.7', 'Programming Language :: Python :: 3', 'Programming Language :: Python :: 3.4', 'Programming Language :: Python :: 3.5', 'Programming Language :: Python :: 3.6', 'Programming Language :: Python :: 3.7', 'Topic :: Software Development :: Libraries' ], entry_points=&#123; 'console_scripts': ['img2sh=img2sh.cli:main'], &#125;,) The entry points of the module can be specified with specifying entry_points property of the object. It is defined as console script and first, the name of the executable should be written. It should be mapped to the executable python function. In my case, it is img2sh:cli:main. There are useful tricks in the code block also. For example, you do not have to write a whole long description of this file. It can be read from different files like README.md. It is the same for your requirements. It still can be read from requirements.txt but with one condition. These files should be specified in the MANIFEST.in file. MANIFEST.in 123include README.mdinclude requirements.txtinclude LICENCE The following link great resource to create a setup.py file. I learned from here. You should check it out.https://python-packaging.readthedocs.io/en/latest/everything.html Uploading python packageAs you may already know, python packages are usually distributed using PyPI servers. When we use the pip package manager in default, packages are downloaded from this server. In this project, I want that my package can be installed over PyPI. So I created a PyPI account and upload my package there.to Uploading the PyPI package actually quite simple. The following commands are required to create a package from a module and to upload it to PyPI servers.12python setup.py sdist bdist_wheeltwine upload --repository-url https://upload.pypi.org/legacy/ dist/* Optimizing performanceHow can be the performance of the tool optimized?In the first prototype, the code is written with simple logic. This causes too much processing time because of the for loops inside it. The following code part is written to find the nearest color inside a palette. The function loops in pallette and tries to find the smallest distance. In version 2, I implement it using numpy package. The operation executes in vectorial form and its execution time decreased exponentially.v1 12345678910111213141516def findNearestColor(color, pallette): distances = [] if len(color) == 3: (colorr, colorg, colorb) = color elif len(color) == 4: (colorr, colorg, colorb, alpha) = color if alpha == 0: return None # pallette.index((255,255,255)) for c in pallette: (cr, cg, cb) = c distances.append( (colorr-cr)**2 + (colorg-cg)**2 + (colorb-cb)**2 ) return distances.index(min(distances)) v2 123456789101112def findNearestColor(color, pallette): distances = [] if len(color) == 3: (colorr, colorg, colorb) = color elif len(color) == 4: (colorr, colorg, colorb, alpha) = color if alpha == 0: return None # pallette.index((255,255,255)) c = (colorr, colorg, colorb) diff = pallette - c diffSum = np.sum( np.square(diff), axis=1) return np.argmin(diffSum) # for v1 real 0m2,618s user 0m2,519s sys 0m0,080s # for v2 real 0m1,690s user 0m1,892s sys 0m0,417s Thank you for your interest. See you later… AcknowledgesThis package is developed using: Pillow colored","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://mozanunal.com/tags/linux/"},{"name":"yazilim","slug":"yazilim","permalink":"https://mozanunal.com/tags/yazilim/"},{"name":"bash script","slug":"bash-script","permalink":"https://mozanunal.com/tags/bash-script/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://mozanunal.com/tags/ubuntu/"}]},{"title":"Yolo on Google Colab","slug":"yoloColabDemo","date":"2019-08-12T21:09:50.000Z","updated":"2023-01-18T11:16:34.260Z","comments":true,"path":"2019/08/yoloColabDemo/","link":"","permalink":"https://mozanunal.com/2019/08/yoloColabDemo/","excerpt":"","text":"Run YOLO V3 on Colab for images/videosHello there,Today, we will be discussing how we can use the Darknet project on Google Colab platform. For those who are not familiar with these terms: The Darknet project is an open-source project written in C, which is a framework to develop deep neural networks. Yolo V3 is an object detection algorithm. It is one of the state of the art solution when accuracy/processing power needed metric is considered. Google Cola is a cloud-based data science workspace similar to the jupyter notebook. Each Collabrotary session is equipped with a virtual machine running 13 GB of ram and either a CPU, GPU, or TPU processor. In most case, all the required packages are already installed on these machines and you can quite easily start development using Google Collaboratory. It saves us from installing process and it provides us easy to accessible GPU’s which is also free under some constraints. Have a look Ted Talk by Joseph Redmon the developer of the darknet project. The talk is about Darknet and YOLO projects which titled as “How computers learn to recognize objects instantly” . Darknet project aims to create a new neural network framework which is completely focused on simplicity and performance. The thing which I like about is its clarity and performance. All the code is written in C, to define a deep learning network you should only create a config file which defines the layers. By this way, it does not lose its performance capabilities also it provides us easy to use interface for development with this library. Since I love both YOLO project and Google Colab, I decided to create a tutorial to use them together. I create a GitHub repository and a Collaboratory notebook for this purpose Colab Notebook mozanunal/yoloOnGoogleColab Please check YOLO website Darknet website YOLOV3 Paper InstallGo to the directory, clear and install everthing Clone the project Change make file configurations and make OPENCV and GPU enable Install opencv library 1234import cv2, osimport matplotlib.pyplot as plt%matplotlib inline 1234567891011!ls!cd /content!rm -fr darknet!git clone https://github.com/AlexeyAB/darknet/% cd darknet!sed -i 's/OPENCV=0/OPENCV=1/g' Makefile!sed -i 's/GPU=0/GPU=1/g' Makefile!sed -i 's/CUDNN=0/CUDNN=1/g' Makefile!apt update!apt-get install libopencv-dev darknet sample_data Cloning into &apos;darknet&apos;... remote: Enumerating objects: 10732, done.\u001b[K remote: Total 10732 (delta 0), reused 0 (delta 0), pack-reused 10732\u001b[K Receiving objects: 100% (10732/10732), 10.30 MiB | 19.94 MiB/s, done. Resolving deltas: 100% (7254/7254), done. /content/darknet Hit:1 https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/ InRelease Ign:2 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 InRelease Get:3 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB] Hit:4 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic InRelease Ign:5 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 InRelease Hit:6 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 Release Hit:7 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 Release Hit:8 http://archive.ubuntu.com/ubuntu bionic InRelease Get:9 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB] Hit:10 http://ppa.launchpad.net/marutter/c2d4u3.5/ubuntu bionic InRelease Get:12 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB] Fetched 252 kB in 2s (143 kB/s) Reading package lists... Done Building dependency tree Reading state information... Done 47 packages can be upgraded. Run &apos;apt list --upgradable&apos; to see them. Reading package lists... Done Building dependency tree Reading state information... Done libopencv-dev is already the newest version (3.2.0+dfsg-4ubuntu0.1). The following package was automatically installed and is no longer required: libnvidia-common-410 Use &apos;apt autoremove&apos; to remove it. 0 upgraded, 0 newly installed, 0 to remove and 47 not upgraded. Compile and Configure Compile YOLO Download YOLO weights 1!make &amp;&gt; compile.log 1!wget https://pjreddie.com/media/files/yolov3.weights --2019-08-11 23:58:44-- https://pjreddie.com/media/files/yolov3.weights Resolving pjreddie.com (pjreddie.com)... 128.208.4.108 Connecting to pjreddie.com (pjreddie.com)|128.208.4.108|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 248007048 (237M) [application/octet-stream] Saving to: ‘yolov3.weights’ yolov3.weights 100%[===================&gt;] 236.52M 62.1MB/s in 4.1s 2019-08-11 23:58:48 (57.7 MB/s) - ‘yolov3.weights’ saved [248007048/248007048] Test An Image123456789101112def predictImage(imageDir): os.system(\"cd /content/darknet &amp;&amp; ./darknet detect cfg/yolov3.cfg yolov3.weights &#123;&#125;\".format(imageDir)) image = cv2.imread(\"/content/darknet/predictions.jpg\") height, width = image.shape[:2] resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC) fig = plt.gcf() fig.set_size_inches(18, 10) plt.axis(\"off\") #plt.rcParams['figure.figsize'] = [10, 5] plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB)) plt.show() 12!wget https://github.com/mozanunal/yoloOnGoogleColab/raw/master/test/test.jpg!ls --2019-08-11 23:58:49-- https://github.com/mozanunal/yoloOnGoogleColab/raw/master/test/test.jpg Resolving github.com (github.com)... 192.30.253.113 Connecting to github.com (github.com)|192.30.253.113|:443... connected. HTTP request sent, awaiting response... 302 Found Location: https://raw.githubusercontent.com/mozanunal/yoloOnGoogleColab/master/test/test.jpg [following] --2019-08-11 23:58:50-- https://raw.githubusercontent.com/mozanunal/yoloOnGoogleColab/master/test/test.jpg Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ... Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 68535 (67K) [image/jpeg] Saving to: ‘test.jpg’ test.jpg 100%[===================&gt;] 66.93K --.-KB/s in 0.05s 2019-08-11 23:58:50 (1.32 MB/s) - ‘test.jpg’ saved [68535/68535] 3rdparty CMakeLists.txt image_yolov3.sh results appveyor.yml compile.log include scripts backup darknet json_mjpeg_streams.sh src build DarknetConfig.cmake.in LICENSE test.jpg build.ps1 darknet.py Makefile video_v2.sh build.sh darknet_video.py net_cam_v3.sh video_yolov3.sh cfg data obj yolov3.weights cmake image_yolov2.sh README.md 1predictImage(\"test.jpg\") Test with Video1234def predictVideo(videoDir): os.system(\"\"\" cd /content/darknet &amp;&amp; ./darknet detector demo cfg/coco.data cfg/yolov3.cfg yolov3.weights \\ -dont_show &#123;&#125; -i 0 -out_filename res.avi \"\"\".format(videoDir)) 12!wget https://github.com/mozanunal/yoloOnGoogleColab/raw/master/test/test.avi!ls --2019-08-11 23:59:01-- https://github.com/mozanunal/yoloOnGoogleColab/raw/master/test/test.avi Resolving github.com (github.com)... 192.30.253.113 Connecting to github.com (github.com)|192.30.253.113|:443... connected. HTTP request sent, awaiting response... 302 Found Location: https://raw.githubusercontent.com/mozanunal/yoloOnGoogleColab/master/test/test.avi [following] --2019-08-11 23:59:02-- https://raw.githubusercontent.com/mozanunal/yoloOnGoogleColab/master/test/test.avi Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ... Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 15897530 (15M) [application/octet-stream] Saving to: ‘test.avi’ test.avi 100%[===================&gt;] 15.16M 50.0MB/s in 0.3s 2019-08-11 23:59:02 (50.0 MB/s) - ‘test.avi’ saved [15897530/15897530] 3rdparty compile.log json_mjpeg_streams.sh src appveyor.yml darknet LICENSE test.avi backup DarknetConfig.cmake.in Makefile test.jpg build darknet.py net_cam_v3.sh video_v2.sh build.ps1 darknet_video.py obj video_yolov3.sh build.sh data predictions.jpg yolov3.weights cfg image_yolov2.sh README.md cmake image_yolov3.sh results CMakeLists.txt include scripts 1predictVideo(\"test.avi\") 1!du -h res.avi 93M res.avi 123from google.colab import filesfiles.download('/content/darknet/res.avi') See you later!","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"google colab","slug":"google-colab","permalink":"https://mozanunal.com/tags/google-colab/"},{"name":"deeplearning","slug":"deeplearning","permalink":"https://mozanunal.com/tags/deeplearning/"},{"name":"yolov3","slug":"yolov3","permalink":"https://mozanunal.com/tags/yolov3/"},{"name":"collabrotary","slug":"collabrotary","permalink":"https://mozanunal.com/tags/collabrotary/"}]},{"title":"Playing DOTA on Raspberry Pi using Steam Link","slug":"steam-link-on-rpi","date":"2019-01-31T21:45:01.000Z","updated":"2023-01-18T11:16:34.259Z","comments":true,"path":"2019/02/steam-link-on-rpi/","link":"","permalink":"https://mozanunal.com/2019/02/steam-link-on-rpi/","excerpt":"","text":"Hello,Steam Link is software which provides support to Steam to stream screen view of the games to devices which is on same local area network. In this setup, there are 2 devices. First one is the device to run the Steam and the games which act as a server. The second one is the one which runs Steam Link and acts as a client to this server. By using this technology you can play games directly on a device which is connected to the same router. The connection is also 2 way. Thus, control devices such as keyboard, mouse and game controllers can be connected directly to the client device. On 3rd of December, Steam announced that the Steam Link can work on Raspberry Pi now. After I saw that, I decided to give it a try. I have tried it with my favorite game, Dota 2. Dota 2 can be played on a Raspberry Pi using Steam Link. It basically uses your computer as a game server. Actually, the PC is run the Dota 2 however it casts its screen view to another computer, which in this case is a Raspberry Pi. You can install it to your Raspberry Pi with only 2 shell commands. In this post, installing and running the Steam Link will be discussed. Steam Link is a software which is developed to play high processing power intensive games on low processing power devices. Actually, you should already have enough system requirements for the game and this computer also should be the same local area network. InstallationThe following link is from Steam Community website. They announced that Steam Link is officially available for Raspberry Pi. The installation process is quite easy but the basic Linux shell knowledge still is a requirement.https://steamcommunity.com/app/353380/discussions/0/1743353164093954254/ The first step, using curl download the required Debian installation package. 12pi@rpi-:~ $ curl -#Of http://media.steampowered.com/steamlink/rpi/steamlink_1.0.7_armhf.deb######################################################################## 100.0% After downloading the package, process continues with following one line script. It is installing Steam Link Package to your Raspberry Pi. 1234567891011pi@rpi-:~ $ sudo dpkg -i steamlink_1.0.7_armhf.debSelecting previously unselected package steamlink.(Reading database ... 129787 files and directories currently installed.)Preparing to unpack steamlink_1.0.7_armhf.deb ...Unpacking steamlink (1.0.7) ...Setting up steamlink (1.0.7) ...Processing triggers for gnome-menus (3.13.3-9) ...Processing triggers for desktop-file-utils (0.23-1) ...Processing triggers for mime-support (3.60) ...Processing triggers for hicolor-icon-theme (0.15-1) ...Processing triggers for man-db (2.7.6.1-2) ... Game Play DemoSome configurations are also should be done to start playing through your Raspberry Pi. However, these steps are quite easy to follow and no prior shell knowledge is required. By the way, ping is around 6 ms with ethernet connection to your router. The ping is heavily depends on your router performance and connection quality. I could not get sufficient results with WiFi connection to Raspberry Pi. Therefore I connect it to external router in order to keep the connection latency as minimum as possible.","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"Steam Link","slug":"Steam-Link","permalink":"https://mozanunal.com/tags/Steam-Link/"},{"name":"Raspberry Pi","slug":"Raspberry-Pi","permalink":"https://mozanunal.com/tags/Raspberry-Pi/"}]},{"title":"SimpleDSP: IIR Filter Feature Added","slug":"simpledsp-iir-feature","date":"2019-01-23T20:45:00.000Z","updated":"2023-01-18T11:16:34.259Z","comments":true,"path":"2019/01/simpledsp-iir-feature/","link":"","permalink":"https://mozanunal.com/2019/01/simpledsp-iir-feature/","excerpt":"","text":"SimpleDSPSimpleDSP is a basic DSP library which is for Arduino and most of the microcontrollers which can be programmed in C/C++ Performance: Here is some examples for its performance. Actually it is not optimized for performance. Its main focuses are portability and education. Arduino Nano FFT 16 points: 2 ms FFT 32 points: 6 ms FFT 64 points: 16 ms fir filter 10 coefficients: 190 us fir filter 23 coefficients: 453 us fir filter 46 coefficients: 900 us 10 coefficients FIR filter can be run at 5khz max frequency on an Arduino Nano. Arduino Due FFT 64 points: 2 ms FFT 128 points: 6 ms FFT 256 points: 10 ms Fast Fourier Transform (FFT) and Inverse Fast Fourier Transform (IFFT)detailed info Arduino ExampleFFT and IFFT functions require 2 arguments.datadata lengthDo not forget to add #include &quot;simpleDSP_FFT.h&quot; Full example for FFT and IFFT please refer here FFT spectrum example 12345FFT(data,DATA_LEN);IFFT(data,DATA_LEN);calcTime = millis()-startTime;Serial.print(\"Total calculation time: \");Serial.println(calcTime); FIR FilterTheorydetailed info Arduino ExampleFIR is filter structure which keep delays and coefficients of filter. There are 2 public functions. firInit initializes the structure according to parameters and makes required memory allocations. Coefficients and its length are given as parameter to this functionDo not forget to add #include &quot;simpleDSP_fir.h&quot;12void firInit(FIR *fir, int coefBLen, float *coefsB);float firFilt(FIR *fir, int input); FIR Full example123456789101112Serial.begin(9600);firInit(&amp;fir1, 46, coef);Serial.println(\"FIR filter initiliaze finished\");float a;startTime = micros();for (int i = 0; i &lt; 255; i++)&#123; a = firFilt(&amp;fir1, input[i]);&#125;calcTime = micros() - startTime;Serial.print(\"Total calculation time: \");Serial.println(calcTime); IIR FilterTheorydetailed info Arduino ExampleIIR is filter structure which keep delays and coefficient of filter. There are 2 functions to implement IIR filter using SimpleDSP library. initIIR function is the constructor function for the filter. Filter coefficients for a and b should be given as arguments to this function. After init, filtIIR must be used as filtering function. This function requires 2 arguments. Object instance and data. It returns the filtered output. 12void iirInit(IIR *iir, int coefBLen, float *coefsB, int coefALen, float *coefsA);float iirFilt(IIR *iir, int input); Do not forget to add #include &quot;simpleDSP_iir.h&quot; to your code. IIR Full example 123456789101112Serial.begin(9600);iirInit(&amp;iir1, 4, coefB, 4, coefA);Serial.println(\"IIR filter initiliaze finished\");float a;startTime = micros();for (int i = 0; i &lt; 255; i++)&#123; a = iirFilt(&amp;iir1, input[i]);&#125;calcTime = micros() - startTime;Serial.print(\"Total calculation time: \");Serial.println(calcTime); Octave Test CodeThis code create sample data and plot the signal and its FFT. The octave code only needed for testing of function.Create sample signal which is at 10 kHz sample rate and it is the combination of 3.2 kHz and 800 Hz sine waves. 12345678N=255;f1=800;f2=3200;fo=10000;for i=1:1:Nx(i)=1000*cos(2*pi*f1*i/fo)+1000*cos(2*pi*f2*i/fo);printf(&quot;%d\\n&quot;,x(i));end Calculate and plot x and FFT of x. For fft x axis values are calculated using kor=(1:N)*fo/N;12345plot(x);X=abs(FFT(x));figure;kor=(1:N)*fo/N;plot(kor,X); Output from octave Graph of Raw Signal Graph of FFT Signal you can use octave from here Filter Design Using Octaveoutput of fir functions can be used as filter coefficients Resource for FIR Examples: 123freqz (fir1 (40, 0.3));freqz (fir1 (15, [0.2, 0.5], &quot;stop&quot;)); # note the zero-crossing at 0.1freqz (fir1 (15, [0.2, 0.5], &quot;stop&quot;, &quot;noscale&quot;)); 1234figureb= fir1 (20, 0.3, &quot;low&quot;);y = filter(b,1,x);plot(y) filter frequency response Resource for IIR 1234figure[b, a] = butter(3, 0.3, &quot;low&quot;);y = filter(b,a,x);plot(y) 12345678octave:&gt; bb = 0.049533 0.1486 0.1486 0.049533octave:&gt; aa = 1.00000 -1.16192 0.69594 -0.13776 Outputs after filtering Time Domain Signal FFT of Output Signal","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"DSP","slug":"Signal-Processing/DSP","permalink":"https://mozanunal.com/categories/Signal-Processing/DSP/"}],"tags":[{"name":"Arduino DSP","slug":"Arduino-DSP","permalink":"https://mozanunal.com/tags/Arduino-DSP/"},{"name":"DSP","slug":"DSP","permalink":"https://mozanunal.com/tags/DSP/"},{"name":"Arduino IIR","slug":"Arduino-IIR","permalink":"https://mozanunal.com/tags/Arduino-IIR/"},{"name":"IIR filter","slug":"IIR-filter","permalink":"https://mozanunal.com/tags/IIR-filter/"},{"name":"IIR filter design","slug":"IIR-filter-design","permalink":"https://mozanunal.com/tags/IIR-filter-design/"},{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/tags/Signal-Processing/"}]},{"title":"[TR] Orange Pi Zero Üzerinde Dump1090 Çalıştırmak","slug":"opizero-dump1090","date":"2018-08-20T12:14:07.000Z","updated":"2023-01-18T11:16:34.257Z","comments":true,"path":"2018/08/opizero-dump1090/","link":"","permalink":"https://mozanunal.com/2018/08/opizero-dump1090/","excerpt":"","text":"Herkese merhabalar,Bugünkü yazımda dump1090 programını nasıl bir orange pi zero üzerinde çalıştırabiliriz ondan bahsedeceğim. Bildiğiniz gibi dump1090 sdr kullanarak uçakların adsb yayınlarını çözmeye yarayan bir kod parçası. Bu projeyi gerçekleştirdiğim mini pc olarak orange pi zero seçmemin sebebi ise maliyeti ve kompaklığı. 5-10 dolara satın alınabiliniyor ve boyutları gerçekten küçük. Rtlsdr Sürücüsünün KurulmasıBen orange pi zeroyu armbian işletim sistemi ve mainline kernel ile kullanıyorum. Sistemde uname -a çalıştırdığımda aldığım çıktı aşağıdaki gibi:1Linux orangepizero 3.4.113-sun8i #16 SMP PREEMPT Tue Jun 13 14:15:57 CEST 2017 armv7l armv7l armv7l GNU/Linux İlk olarak rtlsdr orange pi ile sorunsuz çalıştırmalıyız bunun için gerekli kütüphaneleri kuruyoruz. 12sudo apt install librtlsdr-devsudo apt install rtl-sdr Sonra linux kernerlındaki generic dvb sürücülerini reaktifleştirmemiz gerekli. Aşağıdaki komut ile değişiklik yapacağımız dosyayı açıyoruz.1nano /etc/modprobe.d/rtl-sdr-blacklist.conf Aşağıdaki satırları açtığımız dosyaya ekleyelim. Burada yapığımız şey aslında şu. Normalde bu cihazlar bilgisayardan tv izlemek için kullanılıyor. Bu driver da linux kernelında zaten var. Eklediğimiz satırlar driverı etkisiz hale getiriyor. Driver olarak cihazı, rtlsdr olarak kullanmak için yazılmış driverı aktif olarak kullanabilmemizi sağlıyor. 123456blacklist dvb_usbblacklist dvb_coreblacklist dvb_usb_rtl2832ublacklist dvb_usb_rtl28xxublacklist e4000blacklist rtl2832 Rtlsdr çalışıp çalışmadığını rtl_test komutu ile test edebiliriz. Dump1090 kurulumu ve kullanımDump1090 kurmak çok basit. Bir adet paket gerekli devamında git üzerinden çekip make ile derliyoruz. 1234sudo apt install pkg-configgit clone https://github.com/antirez/dump1090cd dump1090make Çalıştırmak için genelde aşağıdaki satırı kullanıyorum. 1./dump1090 --net --interactive --aggressive Bu komut ile web arayüzünü aktifleştirmiş oluyoruz ve interaktif bir terminal çıktımız oluyor. “aggressive” ile de daha düşük isabet ile tespit etse de arayüzlerde çıktı vermesini istemiş oluyoruz.Orange pi ipsini bulmak için ifconfig komutu kullanılabilir. Web arayüzüne de üzerinden opizeroip:8080 üzerinden ulaşabiliriz. Rtlsdr ile gelen anteni $lambda/4$ uzunlukta keserek daha verimli sonuçlar elde edebilirsiniz. 1090 Mhz için anten boyu 69mm olmalıdır. Ben açık alanda yaklaşık 250 km uzaklıktan veri almayı başardım. Böyle küçük bir kurulum ile bu kadar büyük bir uzaklıktan veri alabilmek gerçekten oldukça keyifliydi. Tekrar görüşmek üzere…","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"DSP","slug":"Signal-Processing/DSP","permalink":"https://mozanunal.com/categories/Signal-Processing/DSP/"}],"tags":[{"name":"Software Defined Radio","slug":"Software-Defined-Radio","permalink":"https://mozanunal.com/tags/Software-Defined-Radio/"},{"name":"sdr","slug":"sdr","permalink":"https://mozanunal.com/tags/sdr/"},{"name":"dump1090","slug":"dump1090","permalink":"https://mozanunal.com/tags/dump1090/"},{"name":"orangepizero","slug":"orangepizero","permalink":"https://mozanunal.com/tags/orangepizero/"}]},{"title":"[TR] Android Terminal Emülatörü: Termux","slug":"termux","date":"2018-07-30T17:04:35.000Z","updated":"2023-01-18T11:16:34.260Z","comments":true,"path":"2018/07/termux/","link":"","permalink":"https://mozanunal.com/2018/07/termux/","excerpt":"","text":"Herkese Merhabalar, Benim gibi sıklıkla linuxla uğraşan bir insansanız işinize çok fazla yarıyabilecek bir araçtan bahsedeceğim. Bu Androidte çalışan terminal emülatörü Termux. Termux linux kullanmaya alışık olduğumuz araçları androidde de kullanabilmemizi sağlayan bir android app aslında. Direk play store üzerinden bu link üzerinden yükleyebilirsiniz. Termux aynı zamanda açık kaynaklı bir proje github hesabına buradan ulaşabilirsiniz. Burada android app ve bütün paketlerin kaynak kodu mevcut. Özelliklerine gelecek olursak kendi paket yöneticilerini geliştirmişler. İsmi pkg bir sürü popüler paketi kurabilmeniz mümkün. Programa girdiğinizde direk bir bash terminal karşılıyor bizi. Burada standart bash komutlarının çoğu çalışıyor. Örneğin ls, pwd, cat, echo… 1pkg list-all komutu ile kurulabilecek bütün paketleri görüyoruz. Ben de aklıma gelen bir kaç paketi yükleyip testler yaptım. Şu and en çok ssh için kullanıyorum fakat yüklediğim diğer araçlar ise şöyle:1pkg list-installed Apt kullanır gibi direk paketleri kurabiliyorsunuz. Örneğin şu şekilde htop paketini yükledim. Htop çalışır durumdaki hali de aşağıdaki gibi. Sanki bir linux terminaliymiş gibi bütün özellikleri kullanılabiliniyor. Ayrıca telefonunuza python, nodejs, go gibi programlama dili araçlarını kurup sanki bir mini bilgisayardaymış gibi kolaylıkla programlama yapabilirsiniz. Git, svn gibi versiyon yönetimi araçları da çalışıyor. Hatta c/c++ için gerekli derleme ve debug araçları da sorunsuz çalışır durumda (gcc, make, cmake). Denemedim ama telefon üzerinde geliştirme yapmayı bile mümkün kılacak kadar geniş kapsamı. Telefonda bu kadar güzel bir terminal görmek çok hoşuma gitti. Ayrıca arayüz olarak da dokunmatik ekran için özenle dizayn edilmiş. Klavyenin üzerinden çıkan yardımcı tuş takımı oldukça kullanışlı. Ctrl içeren tuş kombinasyonlarını kolayca yapabiliyorsunuz. Ya da olmazsa olmaz tab ile otomatik tamamlama özelliğini kolayca kullanabiliyorsunuz. Siz de Termux ilk defa görüyorsanız ilk kullanım yorumlarınızı, daha önceden kullanıyorsanız ne için kullandığınızı yorumlarda paylaşırsanız çok mutlu olurum.Özet olarak termux telefonunuza kurup mobil işlerimiz için kullanabileceğimiz güzel bir terminal emülatörü. Denemenizi tavsiye ederim.","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://mozanunal.com/tags/Android/"},{"name":"Termux","slug":"Termux","permalink":"https://mozanunal.com/tags/Termux/"}]},{"title":"[TR] Veriloga Giriş","slug":"veriloga-giris","date":"2018-06-02T08:07:45.000Z","updated":"2023-01-18T11:16:34.260Z","comments":true,"path":"2018/06/veriloga-giris/","link":"","permalink":"https://mozanunal.com/2018/06/veriloga-giris/","excerpt":"","text":"Herkes Merhabalar,Bugün bir “hardware description language” olan verilog diline giriş yapmak istiyorum. Verilog sayısal dizaynda( ASIC ve FPGA ) kullanılan bir tanımlama dilidir. Verilog dilini Fpga programlamak için bir çok projede kullandım fakat ASIC dizayn konusunda bir tecrübem yok. Fpga programlarken öğrendiğim şeyleri farklı yazılarda paylaşmıştım. Bu yazı da o yazılardan biri diyebiliriz. Verilog ile alakalı daha ileri düzey şeylerden bahsedeceğim yazılar da gelecektir diye düşünüyorum. Temel Kullanımlarİlk olarak basit mantık fonksiyonlarının verilog modüllerinin oluşturulmasıyla başlamak istiyorum. Bu fonksiyonları oluşturmak için bir kaç farklı seçeneğimiz var. Ben kısaca hepsinin üzerinden geçmek istiyorum. Bu yöntemlerin hepsine aşina olmak şu açıdan önemlidir: Her projede farklı zorluklar karşımıza çıkabilir. Bu zorluklardan en çok ortaya çıkanlardan biri kaynak yetersizliğidir. Kaynak yetersizliği farklı açılardan ortaya çıkabilir. Zamanlamanın yetersiz olması Fpgadeki mantık kapılarının yeterli olmaması Performansın yeterli olmamasıBu 3 farklı dar boğaza göre farklı imlemantasyon yöntemini tercih etmeniz gerekebilir. Aritmetik Operatör KullanarakAşağıdaki modül OR alan bir modül olarak tasarlanmıştır. Direk OR aritmetik oparatörü kullanarak aşağıdaki gibi oluşturulabilir. Burda dikkat çekmek istediğim ikinci şey bir modülün nasıl tanımlandığıdır. İlk olarak giriş ve çıkışlar tanımlanır. Bu modülde hepsi 1 bit olmak üzere 2 giriş 1 çıkış gereklidir. “assign” ile gerekli bağlantı yapılır. Hiç “clock” kullanılmadığı için kombinasyonel (combinational) bir modüldür. 123456789module OR( input I1, input I2, output O );trueassign O = I1 | I2;endmodule LUT KullanarakLUT, “look up table” teriminin kısaltmasıdır. FPGA bildiğiniz gibi verilog diliyle tasarladığımız ve zaman-kaynak sınırlamalarını aşmayan her türlü devrenin gerçeklenebildiği çip türüdür. Bu esnekliği uygulanabilir kılan FPGA yapısının en küçük birimlerindeki LUT’lardır. Yani nasıl yazarsak yazalım kodu en son LUT dönüştürülüp devre üzerine öyle aktarılır. Verilog diliyle direk olarak LUT tanımlayarak da istediğimiz mantık fonksiyonunu gerçekleyebiliriz. Aşağıda EXNOR fonksiyonu LUT kullanılarak gerçeklenmiştir. 1234567891011module EXNOR( input I1, input I2, output O );LUT2 #(.INIT(4'b1001)true) LUT2_inst(true.O(O), .I0(I1), .I1(I2)true);endmodule Always KullanarakAlways yapısı sadece belli durumlarda çalışan mantık devreleri yazmak için kullanıyoruz. Örneğin “if” için burada bir “always” yapısına ihtiyacımız oluyor. 12345678910111213141516171819202122232425262728293031323334353637383940module NAND( input I1, input I2, output reg O );true truealways @( I1 or I2 )truetruebegintruetruetrueif( I1==1 &amp;&amp; I2==1)truetruetruetruebegintruetruetruetruetrueO &lt;= 1'b0;truetruetruetrueendtruetruetrueelsetruetruetruetruebegintruetruetruetruetrueO &lt;= 1'b1;truetruetruetrueendtruetrueendendmodulemodule NOR( input I1, input I2, output reg O );truealways @( I1 or I2 )truetruebegintruetruetrueif( I1==0 &amp;&amp; I2==0)truetruetruetruebegintruetruetruetruetrueO &lt;= 1'b1;truetruetruetrueendtruetruetrueelsetruetruetruetruebegintruetruetruetruetrueO &lt;= 1'b0;truetruetruetrueendtruetrueendendmodule Case KullanarakCase yapısı kullanarak aşağıdaki decoder kolayca gerçeklenebilir. Case kullanımı için de always yapısı gereklidir. 12345678910111213141516171819202122232425262728module DECODER(true input[3:0] IN,true output reg [15:0] OUT );truealways @(*)begin truecase(IN) true4'b0000: OUT&lt;=16'b0000000000000000;true4'b0001: OUT&lt;=16'b0000000000000010;true4'b0010: OUT&lt;=16'b0000000000000100;true4'b0011: OUT&lt;=16'b0000000000001000;true4'b0100: OUT&lt;=16'b0000000000010000;true4'b0101: OUT&lt;=16'b0000000000100000;true4'b0110: OUT&lt;=16'b0000000001000000;true4'b0111: OUT&lt;=16'b0000000010000000;true4'b1000: OUT&lt;=16'b0000000100000000;true4'b1001: OUT&lt;=16'b0000001000000000;true4'b1010: OUT&lt;=16'b0000010000000000;true4'b1011: OUT&lt;=16'b0000100000000000;true4'b1100: OUT&lt;=16'b0001000000000000;true4'b1101: OUT&lt;=16'b0010000000000000;true4'b1110: OUT&lt;=16'b0100000000000000;true4'b1111: OUT&lt;=16'b1000000000000000;trueendcaseendendmodule Modul HiyerarşisiÖnemli kullanımlardan biri de hiyerarşik modul yapısıdır. Modüller diğer modelleri alt modül olarak çağırabilir bu sayede işlevler birbirinden ayrıştırılır. Örneğin decoder oluşturulduğunda projenin kalanından ayrı olarak test edilir. Çalıştığından emin olunan bir alt parça sağlanmış olur.Diger modulleri aşadaki gibi bir yazım kurallarıyla alt modul olarak çağırabilirsiniz. Modülün giriş ve çıkışlarını üst modüldeki kablolara bağlanmanız gerekir.123456789101112131415module topmodule(trueinput [7:0]sw,trueinput [3:0]btn,trueoutput [7:0]led,trueoutput [6:0]seg,trueoutput dp,trueoutput [3:0]an );DEMUX demux1 ( .D(sw[0]), .S(btn[1:0]), .O(led[3:0]) );assign an = 4'b1110;endmodule Aynı alt modülden farklı isimler vererek birden fazla oluşturabilirsiniz. Bu örnekte demux bir veya daha fazla kez oluşturulmuş başka alt modüller kullnarak yapılmıştır. Sonrasında da bu modül başka bir üst modülün parçası olabilir. Bu şekilde hiyerarşik bir yapı vardır. 12345678910111213141516171819202122232425262728`timescale 1ns / 1psmodule DEMUX(true input D,true input [1:0] S,true output [3:0] O );wire W[5:0];NOT not1(.O(W[0]),.I(S[0]));NOT not2(.O(W[1]),.I(S[1]));AND and1(.O(W[2]),.I1(W[0]),.I2(W[1]));AND and2(.O(W[3]),.I1(S[0]),.I2(W[1]));AND and3(.O(W[4]),.I1(W[0]),.I2(S[1]));AND and4(.O(W[5]),.I1(S[0]),.I2(S[1]));TRI tri00(.O(O[0]),.I(W[2]),.E(D));TRI tri01(.O(O[1]),.I(W[3]),.E(D));TRI tri10(.O(O[2]),.I(W[4]),.E(D));TRI tri11(.O(O[3]),.I(W[5]),.E(D));endmodule Sıralı (Sequential) Mantık DevreleriSayısal devrelerin olmazsa olmazlarından biri “clock” sinyalidir. Peki neden böyle bir şeye ihtiyaç duyulur ? Devrelerde gerçeklenmek istenen işlevler genellikle belli durumların olduğu ve zamana bağlı olarak ard arda belli durumların birbini takip etmesiyle çalışan sistemlerdir. Çoğu durum tek bir kombinasyonel devre olarak gerçeklenemez. Bir çok gerçeklenebilecek durumda da yine de sıralı devreler tercih edilir. Çünkü çok daha az kaynak kullanarak daha stabil şekilde gerçeklemeye uygun devreler bu yöntem ile elde edilebilir.12345678910111213141516171819module register(input [7:0] SW,input BTN,input CLEAR,output reg [7:0] LEDtrue);truetruealways @(posedge BTN , posedge CLEAR) begintruecase (CLEAR)true1'b1: LED &lt;= 8'b00000000;truedefault: LED &lt;=SW;trueendcaseendtrueendmodule Art-arda 4 tane 1 veya 4 tane 0 gelmesi durumunu tespit eden devrenin verilog kodu aşağıdaki gibidir. Bu devre tipi sıralı mantık devrelerine giriş niteliğinde bir örnektir. Bu devrenin kodu yazılırken ilkönce kağıt üzerinde yapılması gereken işlemler vardır. İlk olarak devrenin durumları çıkarılır. Mealy-Moore diagramı çizilerek durumlar arasındaki geçişler belirlenir ve eğer yapılabiliyorsa gerekli indirgemeler yapılır. Bu işlemlerin sonucuna göre aşağıdaki kod yazılabilir. always @(posedge clk or posedge reset) bu satır sayesinde her “clock” yükselen kenarında girişlerin değerlerine göre sistem sonraki duruma geçirilir.12345678910111213141516171819202122232425262728293031323334353637383940`timescale 1ns / 1psmodule FSM1( input x,true input reset,true input clk, output reg z );reg q0,q1,q2;wire Q0,Q1,Q2,z_new;assign Q2 = x &amp; q2 | x &amp; q1 &amp; q0; assign Q1 = (q1 &amp; (~q0)) | ((~q2) &amp; (~q1) &amp; q0) | (x &amp; (~q2) &amp; (~q1)); assign Q0 = (x &amp; (~q1)) | (x &amp; (~q0) | (~q2)) &amp; ((~q1) &amp; (~q0));assign z_new = ((~x) &amp; q1 &amp; (~q0)) | (x &amp; q2 &amp; q0);always @(posedge clk or posedge reset) truebegintruetrueif (reset)truetruebegintruetruetrueq0 &lt;= 0;truetruetrueq1 &lt;= 0;truetruetrueq2 &lt;= 0;truetruetrue truetrueendtruetrueelsetruetruebegintruetruetrueq0 &lt;= Q0;truetruetrueq1 &lt;= Q1;truetruetrueq2 &lt;= Q2;truetruetruez= z_new;truetrueendtrueendendmodule","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"FPGA","slug":"Electronics/FPGA","permalink":"https://mozanunal.com/categories/Electronics/FPGA/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"verilog","slug":"verilog","permalink":"https://mozanunal.com/tags/verilog/"},{"name":"FPGA","slug":"FPGA","permalink":"https://mozanunal.com/tags/FPGA/"}]},{"title":"[TR] En Basit IOT Bulut Sistemi: Google Forms","slug":"google-docs-data-collection","date":"2018-04-17T18:24:57.000Z","updated":"2023-04-09T21:02:57.235Z","comments":true,"path":"2018/04/google-docs-data-collection/","link":"","permalink":"https://mozanunal.com/2018/04/google-docs-data-collection/","excerpt":"","text":"Herkese Merhabalar, Bugün basit, ilginç ve kullanışlı bir proje ile karşınızdayım. Bulut tabanlı programlar oldukça populer oldu son zamanlarda. Ben bütün ofis programı ihtiyaçlarımı google’in çevrimiçi programlarıyla karşılıyorum. Google form da anket yapmanızı sağlayan bu araçlardan biri. Bu aracın olağan kullanımı anket yapmaktır. Bu projede bambaşka bir şey için kullanacağız: IOT sistemler için basit bulut sistemi. Şöyle ki normalde anket için yapılmış bu form sistemini IOT cihazımızdan buluta veri göndermek için kullanacağız. Bu sistem sayesinde çok fazla uğraş vermeden cihazımızı uzaktan takip edebiliyor ve verilerini izleyebiliyor olacağız.Hatta direk olarak excel sistemine aktarılacağı için direk oradan analiz bile edebiliriz. Birden fazla cihazlı sistemler bile kurmak mümkün görünüyor. Online olarak takip etmek istediğimiz şeyler olduğunda kullanılabilir gibi gözüküyor. Bunu yapmamız için biraz olağan dışı işler yapmamız gerekli birazcık. Yapacağımız şeyi özetlemek istersem: Forma tarayıcı üzerinden yaptığımız işlemi IOT bir cihazdan ve “curl” kullanarak yapacağız. İlkönce yeni bir form oluşturuyoruz. Burada cihazımızdan kaç parametre alacaksak onları giriyoruz formun içine. Ben burada cihazın idsi ve wifi rssi verisini göremek istiyorum onları giriyorum sadece. Aşağıdaki gibi form linki alıp linke gidiyoruz. Chrome dev console açıp id ve rssi kutucuklarına rastgele şeyler girip kaydede basıyoruz. Bildiğiniz gibi bizim kaydede basmamız aslında bir “web request” o google serverına gidip yanıt olarak veri tabanlarına kaydediliyor. Chrome dev console üzerinden yaptığımız “web requesti” bulup curl olarak kopyalıyoruz. Bununla tüm gerekli header parametreleriyle forma girdi yapabileceğimiz bir curl komutu oluşturmuş oluyoruz. Mesela sürekli bulut sistemine göndermek istediğimiz bir veri var. Onu bu şekilde bulut sistemine yollayabiliriz artık. Tek yapmamız gereken basit bir “sprintf” yapmak. Aldığımız değerleri bu karışık “curl request “ içinde buluyoruz ve yerine uygun string format aracını koyuyoruz(“%d”,”%s”,”%f”). Gördüğünüz gibi curl komutu oldukça karmaşık. Kodun karıştırmaması için ben bir kısmını sildim yerine 3 nokta koydum. Aşağıdaki gibi formatlayarak o stringi bulut sistemine aktaracak fonksiyonu oluşturabiliriz. Bu fonksiyonu bir döngünün içine alarak 2 dakikada bir CPU sıcaklığını bulut sistemimize aktaran bir kod yazabiliriz.123456789101112131415161718import os, timedef sendData(): val = os.popen(\"\"\"cat /sys/class/thermal/thermal_zone*/temp\"\"\").read() cmd= \"\"\" curl 'https://docs.google.com/forms/d/e/1FAIp... ' -H 'u729917=&#123;&#125;&amp;entry.676449722=&#123;&#125;&amp;fvv=' --compressed &gt; /dev/null \"\"\".format(\"moz-rpi\",val) os.system(cmd)while True: try: sendData() time.sleep(120) except: time.sleep(120) Yukarıdaki kodun çıktısı da aşağıdaki ekran alıntısındaki gibi olacaktır. Tüm verilerimiz oluşturduğumuz formun yanıtlar dökümanına aşağıdaki gibi bir formatta düşecektir. Bu noktadan sonra istediğimiz graifiği de çizdirebiliriz ya da filtreler ile verimizi işleyebiliriz. Hatta tahminler bile oluşturabiliriz. Excel oldukça zengin seçenekler sunuyor. Bu yazımım da sonuna geldik. Tekrar görüşmek üzere.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"IoT","slug":"Electronics/IoT","permalink":"https://mozanunal.com/categories/Electronics/IoT/"}],"tags":[{"name":"google docs","slug":"google-docs","permalink":"https://mozanunal.com/tags/google-docs/"},{"name":"cloud","slug":"cloud","permalink":"https://mozanunal.com/tags/cloud/"},{"name":"IoT","slug":"IoT","permalink":"https://mozanunal.com/tags/IoT/"}]},{"title":"[TR] Hackhathon Getir 2018","slug":"getir-hackhathon","date":"2018-04-16T15:10:04.000Z","updated":"2023-01-18T11:16:34.255Z","comments":true,"path":"2018/04/getir-hackhathon/","link":"","permalink":"https://mozanunal.com/2018/04/getir-hackhathon/","excerpt":"","text":"It is a project developed for BiTaksi Getir Hackathon 2018. Detailed information can be found from below. Team Paketci! Check our app from here which is deployed using heroku. Check github repo of app from here Getir Hackhathon 2018Team Members:Sertan Sezgin KutluErtuğrul ÇınarMehmet Ozan Ünal Paketci AppIts a work on pack collection and delivery for courier and observer. Features:By Backend:1.Assign routes for couries by relate most efficent path.2.Update states of packets.3.Update states of couriers. By Frontend1.Courier see waypoints and pack to collect.2.Observers see all couriers and pack states.3.Adding new packs Used Libraries and API in frontend1.Android Libraries2.Java3.Volley4.Google Maps Directions API5.Google Maps Javascript API6.AngularJS Compleated Part of FrontendApplication is designed for used by cariers. It gave users to see which way courier should go and where to take packs. In order to make it more stable, decions of disturbution made at backend in order to keep system stable for all users, this app communacte with backend by using asyncrounous http requests. For async HTTPS requess, it been used Volley library in JSON Object and String responsed GET and POST requests. App takes missions from backend and by communicating with Google Direcitons API, get caluclations of every shorth path waypoints which collect and carry pointed packs in missions and drawing them on a Map View. In angular web app we see all packs and couriers with their missions and routes. Its allows users to add new packs to environment. BackendData structure and Crud OutputsSample JSON files, it can be enchance according to packet number and courier number /api/courier123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566[ &#123; \"_id\": 0, \"initLocation\": &#123; \"lat\": 40.73726833204571, \"long\": -111.86816435821093 &#125;, \"curLocation\": &#123; \"lat\": 40.73726833204571, \"long\": -111.86816435821093 &#125;, \"weightCapacity\": 20, \"remainingWeightCapacity\": 18.2923904630732, \"pieceCapacity\": 8, \"remainingPieceCapacity\": 7, \"routes\": [ &#123; \"_id\": 1, \"routeFromGoogle\": \"\", \"distance\": 0.02248501759660298, \"startLoc\": &#123; \"lat\": 40.73726833204571, \"long\": -111.86816435821093 &#125;, \"endLoc\": &#123; \"lat\": 40.73287234594392, \"long\": -111.84611325115227 &#125;, \"nearPacketsDistance\": [ -1 ], \"state\": 1 &#125;, &#123; \"_id\": 3, \"routeFromGoogle\": \"\", \"distance\": 0.01372524844602735, \"startLoc\": &#123; \"lat\": 40.73287234594392, \"long\": -111.84611325115227 &#125;, \"endLoc\": &#123; \"lat\": 40.745843583374935, \"long\": -111.84162666621344 &#125;, \"nearPacketsDistance\": [ -1 ], \"state\": 1 &#125; ], \"packets\": [ &#123; \"_id\": 0, \"initLocation\": &#123; \"lat\": 40.73287234594392, \"long\": -111.84611325115227 &#125;, \"destLocation\": &#123; \"lat\": 40.745843583374935, \"long\": -111.84162666621344 &#125;, \"weight\": 1.707609536926801, \"state\": 1, \"courier\": &#123;&#125; &#125; ] &#125; ] /api/packet12345678910111213141516[ &#123; \"_id\": 0, \"initLocation\": &#123; \"lat\": 40.73287234594392, \"long\": -111.84611325115227 &#125;, \"destLocation\": &#123; \"lat\": 40.745843583374935, \"long\": -111.84162666621344 &#125;, \"weight\": 1.707609536926801, \"state\": 1, \"courier\": &#123;&#125; &#125;] /api/route12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061[ &#123; \"_id\": 0, \"routeFromGoogle\": \"\", \"distance\": 0.027888779677731172, \"startLoc\": &#123; \"lat\": 40.73726833204571, \"long\": -111.86816435821093 &#125;, \"endLoc\": &#123; \"lat\": 40.745843583374935, \"long\": -111.84162666621344 &#125;, \"nearPacketsDistance\": [ -1 ], \"state\": 0 &#125;, &#123; \"_id\": 1, \"routeFromGoogle\": \"\", \"distance\": 0.02248501759660298, \"startLoc\": &#123; \"lat\": 40.73726833204571, \"long\": -111.86816435821093 &#125;, \"endLoc\": &#123; \"lat\": 40.73287234594392, \"long\": -111.84611325115227 &#125;, \"nearPacketsDistance\": [ -1 ], \"state\": 1 &#125;, &#123; \"_id\": 2, \"routeFromGoogle\": \"\", \"distance\": 0, \"startLoc\": &#123; \"lat\": 40.73287234594392, \"long\": -111.84611325115227 &#125;, \"endLoc\": &#123; \"lat\": 40.73287234594392, \"long\": -111.84611325115227 &#125;, \"nearPacketsDistance\": [ -1 ], \"state\": 0 &#125;, &#123; \"_id\": 3, \"routeFromGoogle\": \"\", \"distance\": 0.01372524844602735, \"startLoc\": &#123; \"lat\": 40.73287234594392, \"long\": -111.84611325115227 &#125;, \"endLoc\": &#123; \"lat\": 40.745843583374935, \"long\": -111.84162666621344 &#125;, \"nearPacketsDistance\": [ -1 ], \"state\": 1 &#125; ] Route OptimizationFirstly, every courier has a route to common destination point. Then most efficient package route change apply. It’s calculated with change of route distance according to package location. It will iterate until no package will left. But according to courier capacities, some of package can be over couriers’ capacities; so you need to go second round. 1234567891011\"dependencies\": &#123; \"body-parser\": \"~1.18.2\", \"cookie-parser\": \"~1.4.3\", \"debug\": \"~2.6.9\", \"express\": \"~4.15.5\", \"mathjs\": \"^3.20.2\", \"point-line-distance\": \"^1.0.0\", \"google_directions\": \"^0.6.0\", \"polyline\": \"^0.2.0\", \"request\": \"^2.83.0\" &#125;","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"hackhathon","slug":"hackhathon","permalink":"https://mozanunal.com/tags/hackhathon/"},{"name":"getir","slug":"getir","permalink":"https://mozanunal.com/tags/getir/"},{"name":"angularjs","slug":"angularjs","permalink":"https://mozanunal.com/tags/angularjs/"},{"name":"nodejs","slug":"nodejs","permalink":"https://mozanunal.com/tags/nodejs/"},{"name":"route","slug":"route","permalink":"https://mozanunal.com/tags/route/"},{"name":"google map api","slug":"google-map-api","permalink":"https://mozanunal.com/tags/google-map-api/"}]},{"title":"[TR] Hash Code 2018","slug":"hash-code-2018","date":"2018-04-07T21:45:01.000Z","updated":"2023-01-18T11:16:34.255Z","comments":true,"path":"2018/04/hash-code-2018/","link":"","permalink":"https://mozanunal.com/2018/04/hash-code-2018/","excerpt":"","text":"Herkese Merhabalar,Hash Code Google tarafından dünya çapında düzenlenen bir algoritma yarışmasıdır. Bu yıl itibariyle son 3 tanesine ben de katılmış bulunuyorum. Hatta geçen sene yarışma hakkında bir yazı da yazmıştım. Bu geleneği bu yıl da devam ettirmeye karar verdım. Bu seneki yarışmada çok başarılı olamadık derece anlamında. Ama yarışmada çalışan, puan alabilen bir çözüm sunmak bile baya zor. O nedenle ben de çözümüzü birazcık açıklamak istiyorum. Aşağıdan direk github reposunu inceleyebilirsiniz.Github Repo Yarışmada şunu yapmamız istendi: Belli bir zamanda bir yerden bir yere gitmesi gereken yolcular var. Elimizde yolcuları taşımak üzere arabalar var. Hangi araba ne zaman nerede olacak hangi yolcuları alacak bunu optimize etmemiz isteniyor. Aşağıdaki dosyada point ve map classı tanımlanmış. Bir de mesefa hesaplayan bir fonksiyon eklenmiş durumda.1234567891011121314def calcStep(a,b): return abs(a.x - b.x ) + abs(a.y - b.y)class Point(object): def __init__(self,x,y): self.x = x self.y = yclass Map(object): def __init__(self,R,C): self.R = R self.C = C Burada “Ride” objesi tanımlanmış durumda. “Ride” için gerekli argumanlar başlangıç-bitiş noktaları ve zamanları. Bu girdilere göre bir kaç tane de daha özellik init fonksiyonunda oluşturuluyor.12345678910111213141516171819202122from mapH import *class Ride(object): def __init__(self, ride_id, start_intersection, finish_intersection, earliest_start, latest_finish): self.id = ride_id self.start_intersection = start_intersection self.finish_intersection = finish_intersection self.earliest_start = earliest_start self.latest_finish = latest_finish self.stepSize = calcStep(start_intersection,finish_intersection) self.earliest_finish = self.earliest_start + self.stepSize self.latest_start = self.latest_finish - self.stepSize self.status = 0 def printRide(self): print \"-----Ride id: \", self.id print \"-start \", self.start_intersection.x, self.start_intersection.y print \"-finish: \", self.finish_intersection.x, self.finish_intersection.y print \"-start steps: \", self.earliest_start, self.latest_start print \"-distance: \", self.stepSize print \"-finish steps: \", self.earliest_finish, self.latest_finish Aşağıdaki dosya temel işlemlerimizin yapıldığı araba objesi. Buradaki en kritik fonksiyon “findRide” fonksiyonu. Biz çözümümüzü şu şekilde tasarladık: Simulasyon benzeri bir şey çalıştırıyoruz t = 0 anından başlanarak tüm arabalara ilk konumlarına ve “Ride” durumuna göre iş atanıyor. Sonra simulasyon t = 1 anına geçiyor. Eğer boşa çıkmış araba varsa tekrar ona iş atayım sonraki t anına geçiş yapıyor. Bu şekilde zamanı simüle etmiş oluyoruz ve boşa çıkan arabaya hemen iş atanıyor.12345678910111213141516171819202122232425262728293031323334353637383940import numpy as npfrom mapH import *class Car(object): def __init__(self,id): self.id = id self.currentPos = Point(0,0) self.rides = [] self.willBeIdleTime = 0 def printCar(self): print \"-----Car id: \", self.id print \"-pos \", self.currentPos.x, self.currentPos.y print \"-status: \", self.status print \"-rides\", self.rides def findRide(self, Rides, stepNow): costs = [] costs_rides = [] for ride in Rides: if ride.status is 0: stepCost = calcStep(self.currentPos, ride.start_intersection) if ( stepNow+(stepCost+ride.stepSize) ) &lt; ride.latest_finish: if (stepNow+stepCost) &gt; ride.earliest_start: # direk al git costs.append(stepCost) costs_rides.append(ride) else: # beklemeli cost costs.append(ride.earliest_start-stepNow) costs_rides.append(ride) if len(costs) &gt; 0: darr = np.array(costs) selected_ride = costs_rides[darr.argmin()] self.rides.append(selected_ride.id) Rides[selected_ride.id].status = 1 self.willBeIdleTime = stepNow+(stepCost+ride.stepSize) else: self.willBeIdleTime = 1000000 Son olarak ana giriş dosyamız. Bu kod ile gerekli veri verilen dataset dosyalarından okunuyor ve kurguladığımız sisteme uygun hale getirilip objeler oluşturuluyor. Daha sonrasında önceden bahsettiğim simülasyon kısmı çalıştırılıyor ve çıktıları çıkış dosyasına yazılıyor yarışma tarafından verilen formatta. Evet bu yazı için benden bu kadar. Eğer anlamadığınız merak ettiğiniz yerler var ise kodla alakalı sorabilirsiniz. Son sözlerim olarak bu yarışmayı herkese tavsiye ediyorum. Gerçekten zorlayıcı ve geliştirici bir yarışma. Süreniz 4 saat oluyor ve stres altında doğru düşünme yeteneğinizi geliştirmeniz için sizi itekliyor. Bir diğer önemli unsur da beraber çalışma. Takımınızla doğru görev paylaşımını yapmanız gerek. Bireysel çalışarak iyi sonuçlar alınabilecek bir yarışma olduğunu düşünmüyorum. Tekrar görüşmek üzere…1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071from ride import *from car import *from mapH import *#\"data/c_no_hurry.in\"#\"data/b_should_be_easy.in\"#\"data/a_example.in\"#\"data/d_metropolis.in\"FILENAME = \"data/d_metropolis.in\"Rides = []Cars = []file = open(FILENAME)line1 = file.readline()# R number of rows of the grid# C number of columns of the grid# F number of vehicles in the fleet# N number of rides# B per-ride bonus for starting the ride on time# T number of steps in the simulationvalues = line1.split(\" \")number_of_rows, number_of_columns, number_of_vehicles, number_of_rides, per_ride_bonus, number_of_steps = [int(v) for v in values]print 'number_of_rows', 'number_of_columns', 'number_of_vehicles', 'number_of_rides', 'per_ride_bonus', 'number_of_steps'print number_of_rows, number_of_columns, number_of_vehicles, number_of_rides, per_ride_bonus, number_of_stepsid = 0for line in file.readlines(): x1, y1, x2, y2, start, end = [int(i) for i in line.split(\" \")] startPoint = Point(x1, y1) endPoint = Point(x2, y2) curRide = Ride(id, startPoint, endPoint, start, end) #curRide.printRide() Rides.append( curRide ) id = id+1for i in range(number_of_vehicles): Cars.append( Car(i) )def solve(): for i in range(number_of_steps): stepNow = i if i % 1000 is 0: print \"Sim step\", stepNow for car in Cars: if car.willBeIdleTime &lt;= stepNow: car.findRide(Rides,stepNow)def printResult(): print \"RESULT_________\" result=\"\" for car in Cars: line = str(len(car.rides)) for i in car.rides: line+=\" \"+str(i) line+=\"\\n\" result+=line print result file = open(FILENAME+ \".out\",\"w+\") file.write(result) file.close() print \"done\"solve()printResult()","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"hackhathon","slug":"hackhathon","permalink":"https://mozanunal.com/tags/hackhathon/"},{"name":"hashcode2018","slug":"hashcode2018","permalink":"https://mozanunal.com/tags/hashcode2018/"}]},{"title":"[TR] GNU Radio Giriş","slug":"gnu-radio-giris","date":"2018-03-19T16:04:39.000Z","updated":"2023-01-18T11:16:34.255Z","comments":true,"path":"2018/03/gnu-radio-giris/","link":"","permalink":"https://mozanunal.com/2018/03/gnu-radio-giris/","excerpt":"","text":"Herkese Merhabalar,Gnu Radio son zamanlarda keşfetmekten en çok keyif aldığım program olabilir. İlk defa duyanlar için özetlemem gerekirse içerisinde sinyal işleme ve sayısal haberleşme araçları toplanmış görsel programlama editörü. Sinyal dosyadan veya daha önce bahsettiğim SDR isimli cihazlardan alınabiliyor. Alınan sinyaller sayısız çeşitlilikte araçlar ile işlenebiliyor. Coding, modulasyon, demodulasyon gibi haberleşme işlemlerini sürükle bıraklarla kolayca uygulamak mümkün. Programı kurduktan sonra bizi ilk olarak aşağıdaki gibi bir ekran karşılıyor. Sağ tarafta program içerisindeki araçları görebilirsiniz. Hepsi aslında belli işlevi olan bir kutu. Sürükleyerek yapmak istediğimiz operasyonu gerçekliyoruz. Paketlere bir göz atmak isterseniz; üst başlıkları aşağıdaki resimdeki gibi sıralanmış. Gördüğünüz gibi çeşitlilik inanılmaz geniş. Qt veya wx ile görselleme pencereleri de tasarlamak mümkün. Filter dizayn araçlarını da program içinde bulunduruyor. Yazının devamında çok basit bir şeyler yaparak nasıl çalıştığını göstermek istiyorum. Basit Sinyal İncelemeAşağıdaki örnekte sinyal kaynağından 1 khz cosünüs dalga ürettim çıkışını da direk olarak zaman domaini analiz için kullanılan qt görselleştirme aracına bağladım. Bu programı çalıştırdığımızda aşağıdaki gibi bir çıktı alıyoruz. İki Sinyali ToplamaBu sefer çok basit olarak 2 farklı sinyal toplandı ve çıkış çoklanarak zaman ve frekans domaininde analiz edildi. Örnekleme frekansını değiştirdiğim için sinyaldeki kırılmaları zaman domaini grafiğinde görebilirsiniz. Beklediğimiz üzere 1khz ve 1.8 khz frekanslarında tepeleri görebilirsiniz. Elimizdeki sinyali kolayca inceleyebiliyoruz. Gürültü eklemeSon olarak sinyalimize biraz da gürültü ekledim. Giriş frekanslarımızdaki tepeler biraz daha gürüştünün içinde kayboldu ama yine de filtrelenebilecek durumda. Filtreleri de bu yazıda anlatmak isterdim ama onlara da girersem GNU Radio giriş yazısı biraz konu dışına çıkmış olacağımı düşünüyorum. Bu program üzerinde bir şeyler geliştirip bu yazı serisini devam ettirmek istiyorum. Görüşmek üzere…","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"DSP","slug":"Signal-Processing/DSP","permalink":"https://mozanunal.com/categories/Signal-Processing/DSP/"}],"tags":[{"name":"gnu-radio","slug":"gnu-radio","permalink":"https://mozanunal.com/tags/gnu-radio/"},{"name":"gnu-radio-giris","slug":"gnu-radio-giris","permalink":"https://mozanunal.com/tags/gnu-radio-giris/"},{"name":"sinyal-isleme","slug":"sinyal-isleme","permalink":"https://mozanunal.com/tags/sinyal-isleme/"}]},{"title":"[TR] Micropython Nedir?","slug":"micropython-1516117222475","date":"2018-03-14T18:29:02.000Z","updated":"2023-04-09T21:02:57.227Z","comments":true,"path":"2018/03/micropython-1516117222475/","link":"","permalink":"https://mozanunal.com/2018/03/micropython-1516117222475/","excerpt":"","text":"Herkese Merhabalar, Bildiğiniz üzere gömülü sistemlerde programlama C ile yapılır. Bunun sebebi makine diline en yakın dil olması bu nedenle sistem kaynaklarını az kullanarak programlar geliştirilebilmesi ve gömülü sistemdeki donanımları kolay programlanabilmesidir. Fakat buna rağmen işlemcilerin de güçlenmesiyle ve ihtiyaçların da değişmesiyle farklı diller ile programlama yapabilmek için farklı denemeler yapılmaktadır. Daha önce ESP8266 için scripting dili kullanma denemeleri olmuştu. Bir ara Lua dili ile programlanabiliyordu. Hatta bir ara beklediğimden çok daha popüler hale gelmişti. Lua dili bilmediğim için o firmware test etme şansım olmadı. Fakat yakın zamanda benzer bir projenin favori programlama dilim olan python ile de yapıldığını gördüm. ESP8266’nın python ile programlanabildiğini görünce dayanamadım. Bu projenin ismi micropython ve denediğimde micropython firmware oldukça hoşuma gitti o yüzden hakkında bir şeyler yazmak istedim.Micropython bir kickstarter projesi olarak çıkmış ortaya. İlk olarak Stm32f4 boardları için yapılmış. Amacı mikroişlemciler üzerinde python çalıştırmak ve python shell mantığıyla prototipleme yapabilmek. Bildiğiniz üzere python en büyük eksilerinden biri yüksek ram harcaması. Bu sorunu çözmek için bütün standart python kütüphanleri micropython diye yeni bir yapıya portlanmış ve flashda ve ramda kapladığı alan sorunları çözülmeye çalışılınmış. Daha sonrasında işlemcilerin donanımla ile alakalı fonksiyonlarına ve çevre birimlerine(peripheral) ulaşabilmek için işlemcilerin C SDK’leri kullanılarak micropython driverları yazılmış. Yani timer, adc, gpio, i2c, spi, uart gibi temel donanımları kullanabiliyorsunuz. Yazılan bu driverların üzerine bir de sensör veya lcd, led driver gibi bileşenler için de driverlar yazılmış. Ortaya geliştirme kartlarını kolayca yönetebileceğimiz sistemler çıkmış. Benim micropytohon’ı direk satılan Pyboardlarda deneme şansım olmadı. Onun yerine elimde bulunan ESP8266 üzerine yükledim. ESP8266 bildiğiniz üzere bir wifi çipi. Network fonksiyonları da micropythonda bulunuyor. O yüzden ESP8266 kullanmak için biçilmiş kaftan. https://docs.micropython.org/en/v1.9.2/esp8266/esp8266/tutorial/intro.htmlBoarda firmware yüklemek için esptool gereklidir. Aşağıdaki komut ile esptool yükleyebilirsiniz:1pip install esptool İlk yüklemede flashın tamamen temizlenmesi tavsiye edilir. Com numarasını değiştirmeyi unutmayın.Daha sonrasında buradan indirilen elinizdeki ESP ile uyumlu firmware boarda devamındaki komut ile yüklenir. 123esptool --port COM3 erase_flashesptool --port COM3 --baud 460800 write_flash --flash_size=detect 0 esp8266-20170108-v1.8.7.bin Kurulumu tamamladıktan sonra putty ile aynı serial porta bağlanıyoruz. Karşımıza python terminali çıkıyor.https://docs.micropython.org/en/v1.9.2/esp8266/esp8266/tutorial/index.html örnek olarak:12345## File operasyonları&gt;&gt;&gt; f = open('data.txt', 'w')&gt;&gt;&gt; f.write('some data')9&gt;&gt;&gt; f.close() upython standart kütüphanesini için buradan inceleyebilirsiniz. cihaza özel kütüphaneler Web repl kullanarak wifi üzerinden geliştirmenizi yapabilirsiniz. Web repl aktifleştirmek ile alakalı ayrıntılı bilgi için Referanslar:https://docs.micropython.org/en/latest/esp8266/esp8266/quickref.htmlhttps://github.com/espressif/esptoolhttps://docs.micropython.org/en/latest/esp8266/library/esp.html","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"IoT","slug":"Electronics/IoT","permalink":"https://mozanunal.com/categories/Electronics/IoT/"}],"tags":[{"name":"esp8266","slug":"esp8266","permalink":"https://mozanunal.com/tags/esp8266/"},{"name":"micropython","slug":"micropython","permalink":"https://mozanunal.com/tags/micropython/"}]},{"title":"[TR] Altera Cyclone IV ile FPGA Dünyasına Giriş","slug":"altera-cyclone-4-fpga","date":"2018-03-05T18:48:22.000Z","updated":"2023-01-18T11:16:34.251Z","comments":true,"path":"2018/03/altera-cyclone-4-fpga/","link":"","permalink":"https://mozanunal.com/2018/03/altera-cyclone-4-fpga/","excerpt":"","text":"Herkese Merhabalar,Son yıllarda hobi elektroniği inanılmaz bir hızla gelişti. Şüphesiz bu hızlı gelişmenin mimarı Arduino. Atmelin 8 bitlik işlemcilerini temel alarak tasarlanan bu kart ve programala dili sayesinde insanlar kolayca projeler geliştirmeye ve hobi uygulamaları yapmaya başladılar. Ama Arduinonun ve hatta daha iyi bir mikroişlemcinin de yeterli olmadığı projeler var. Böyle bir ihtiyaç doğduğunda seçenekler kendini geliştirmek isteyenler için çok sıkıntılı hale geliyor. Önceki yazılarımdan birinde STM32 öğrenmeye nasıl başlanır ve proje nasıl oluşturulur onu anlatmıştım. Bu sefer mikroişlemcinin yanı sıra bir fpga üzerine gitmek istiyorum. Mesela yüksek hesaplama gücü ve paralel işlem gerektiren proje yapmak istiyorsunuz ve fgpa öğrenmek istiyorsunuz. Nasıl başlayabilirsiniz onu anlatmak istiyorum. Geliştirme Kartı Seçimiİlkönce geliştirme kartımızdan bahsedeyim. Ben üzerinde Cyclone IV bulunan Altera(Artık Intel oldu) marka bir kart seçtim. İlk nedenim maliyet. Usb blasterıyla birlikte oldukça uygun fiyatlara( 22$) alabiliyorsunuz. Fpgaler mikroişlemciler göre oldukça pahalı malzemeler o yüzden böyle bir başlangıç yapmak istedim. Diğer bir avantajı da bence geliştirme ortamının(Quartus) daha hafif olması ve lite sürümünde lisans prolemi yaşamadan kullanabilinmesidır. Xillinx fpgaleri hem ISEde hem VIVADOda kullandım. Geliştirme ortamları oldukça ağır ve ayarlama süreçleri daha sancılı geldi bana. Tabi bu konu malesef çok tecrübeli olduğum bir konu değil. Mesela büyük ve karmaşık projelerde daha büyük kolaylıklar sağlıyor olabilir. Bir diğer dezavantaj da geliştirme kartının üzerinde 2 buton ve 1 ledden başka direk kullanabileceğimiz ekipmanlar yok. Fakat elimizde bir sürü gpio var, her türlü sensörü biraz uğraşarak bağlamamız mümkün o yüzden bu durumu büyük bir problem olarak görmüyorum. Fpga Kartı Usb Blaster BağlantılarFpga kartını aşağıdaki gibi bağlamalıyız. Bunun için bilgisayarımızda 2 adet usb portu olması gerekir. İlk port güç için kullanılıyor. İkinci port da jtag olarak kullanılıyor; buradan kod yükleme, debug gibi operasyonları gerçekleştirebiliriz. Aşağıda ise geliştirme kartının pin bağlantılarını bulabilirsiniz. Bunu aliexpressden kopyaladım. Çok güvenilir bi kaynak değil ama pinleri kontrol ettim problem yok. Proje oluşturmaBu bölümde Quartus Prime kullanarak nasıl proje oluşturacağımızı anlatacağım. Aşağıdaki ekran açılış ekranı. Burdan yeni proje oluşturmayı seçiyoruz. Projemizi oluşrutulacağı dosya dizini ve ismini seçiyoruz. Proje tipi olarak boş proje seçiyoruz. Burada Fpga kartımızın üzerindeki chipseti seçmemiz gerekir. Bu karttaki çipsetin tam ismi Cyclone IV EPCE6E22C8. Çipin üzerinden direk okuyabilirsiniz. Malesef Eda toolarıyla veya simülasyonla alakalı bir tecrübem olmadı henüz o yüzden boş bıraktım buraları. Bu proje oluşturma için son adımdı. Seçimlerimizle alakalı bir özet sayfası. Hello WorldBildiğiniz gibi programlama dillerinde veya elektronik kartlarda ilk çalıştırılan koda-uygulamaya “Hello World” uygulaması denir. Biz de hello world uygulaması olarak and gate yapacağız. Sol tarafta projedeki dosyaların ve modullerin hiyararşik dizilimini inceleyebilirsiniz. Proje geliştirme esnasında burası ile çok fazla haşır neşir olacaksınız. Devamında projeye bir verilog dosyası ekleyebiliriz. Oluşturulan dosya “top module” olarak seçilmelidir. Aşağıdaki verilog kodları yazıldıktan sonra üçgen mavi ok ile proje compile edilir. Peki compile aşamaları nelerdir derseniz: İlkönce tariflediğimiz hardware’ın şeması oluşturulur. O şema lutlar ile ve fpga üzerine uygulanabilecek hale getirilir. Oluşturulan yeni şema fpga üzerinde bi yerlere oturtulur. Bu işleme routing denir. Son olarak binary dosya oluşturulur. Sol alt kısımda görüldüğü gibi bütün işlemler yeşil olmalıdır. Yoksa kodunuzda bir problem var demektir.Bu arada kodu derlemen önce “Pin Planner” aracı kullanarak “top_module”deki giriş çıkışları gerçek pinlere bağlamak gerekir. Ben burada 2 butonu and kapısının girişlerine, ledi ise and kapısının çıkışına bağladım.Projenin derleme raporunun bir kısmı aşağıdaki gibidir.Sonra “programmer” açılır. Usb blaster göremezse sürücülerinin güncellemesi gerekir. Eğer sürücü problemi yoksa Usb Blasterı otomatik gözükecektir.Son olarak start tuşuna bastığımızda kodu fpgaye yükleyecektir. Daha sonrasınd “key1” ve “key2” butonlarını kullanarak kodu test edebilirsiniz. Bu yazı için anlatacaklarım bu kadar. Projemizle fpga dünyasına hızlı bir giriş yapmış olduk. Hem de oldukça uygun fiyatlı bir paket ile. Umarım bu tarz cihazların kullanımı hobi elektroniğinde ve elektronik eğitiminde hızla artar. Tekrar görüşmek üzere… https://www.altera.com/en_US/pdfs/literature/ug/ug_civgx_fpga_dev_kit.pdf","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"FPGA","slug":"Electronics/FPGA","permalink":"https://mozanunal.com/categories/Electronics/FPGA/"}],"tags":[{"name":"verilog","slug":"verilog","permalink":"https://mozanunal.com/tags/verilog/"},{"name":"altera","slug":"altera","permalink":"https://mozanunal.com/tags/altera/"},{"name":"cyclone","slug":"cyclone","permalink":"https://mozanunal.com/tags/cyclone/"},{"name":"quartus","slug":"quartus","permalink":"https://mozanunal.com/tags/quartus/"}]},{"title":"[TR] Neden Favori Kod Editörüm Visual Studio Code","slug":"favori-editor-vscode","date":"2017-12-11T02:56:37.000Z","updated":"2023-01-18T11:16:34.254Z","comments":true,"path":"2017/12/favori-editor-vscode/","link":"","permalink":"https://mozanunal.com/2017/12/favori-editor-vscode/","excerpt":"","text":"Herkese merhabalar,Bir süre önce bir geliştirme ortamı olmadan sadece kod editör kullanarak proje geliştirmek istediğime karar verdim. Çünkü sık sık farklı programlama dilleri ve farklı işletim sistemlerinde programlar yazmam gerekiyordu ve hepsinde aynı platformda yapmanın daha kolay olacağını düşündüm. Bunun bana 2 temel faydası olduğunu söyleyebilirim. 1.si paket yönetimi, kodun derlemesi, test edilmesi gibi prosedürleri ide sınırlamasından kurtarmış oldum. 2. Olarak da farklı platformalarda yazarken aynı kısa yolları kullanabiliyorum aynı metin işleme operasyonları ve yardımcı toolar ile çalışabilme imkanı kazandım. Evet.. Bu kararı verdikten sonra farklı kod editörleri sırasıyle denedim. Yaptığım araştırmalar sonunda komut satırı tabanlı olmayan en popüler 3 text editörün Atom, Sublime Text ve Visual Studio Code olduğunu gördüm. AtomGithub tarafından desteklenen Electron ile geliştirilen, açık kaynak kodlu, 3 platformda da sorunsuz çalışan bir kod editör. Eklenti seçenekleri, tema seçenekleri inanılmaz geniş, diğer 2 editörümüzde olduğu gibi. Benim tanıyan arkadaşlarım bilirler, açık kaynak kod fikrinin içten bir destekleyicisi olduğum için içlerinden ilk denemek istediğim buydu. Ne kadar kullanışlılık konusunda ve ayarlama-özelleştime konusunda tereddütlerim olsa da bir süre kullanmaya devam ettim. Ama en büyük sorunu bence yavaş açılması ve hantallığıydı. Açıkcası bazen en ağır ide’lerden(visual studio) bile daha yavaş açılıyordu. Bir süre sonra bu sorun beni pes ettirdi ve diğer iki seçeneği de denemem için beni zorladı diyebilirim. Sublime Textİkinci seçeneğim Sublime Text oldu. İlk bunu denememin sebebi ise gördüğüm bir kaç incelemede diğer ikisinden daha hızlı olarak değerlendirilmesi ve temel sorunumun atomun hantallığı olmasıydı. Sublime text başlarda oldukça güzel gözüktü code highlighting, snippetları çok kullanışlı gözüküyordu ve hiç bir ayarlama yapmadan gelen ayarlarla oldukça verimli bir şekilde çalışabiliyordum. Genelde gömülü linux sistemlerde çalıştığım için o aralar çok fazla ftp sync eklentileri kullanıyordum. Sublime beni o noktada kaybetti. Eklentiler kurmaya başladığımda eklentilerin editöre direk entegre olmadığını biraz kenarda kaldığını gördüm. Debug için çok güzel şeyler bulamadım mesela. Ftp sync eklentisi oldukça kullanışsızdı ve bedava bir eklenti de değilmiş. Açıkcası ( en son baktığımda oldukça güzel olmuştu gerçi bu eklenti) o kadar parayı kullanışsız bir eklentiye vermek istemedim ve son seçeneğime geçtim. Visual Studio Codeİlk duyanlar genellikle bir ide olan Visual Studio ile karıştırıyorlar. Bu aslında tamamen ayrı ve açık kaynak kodlu bir proje. Electron tabanlı aynı atom gibi. Genel özellikleri itibariyle benim favori text editörüm oldu. Bu noktada şunu söylemem gerek diğer editörleri test edeli baya zaman oldu bu aralar sadece vscode kullanıyorum o nedenle belki dediğim sorunlar çözülmüş olabilir onları daha çok sevenler olacaktır tabi ki ama bu benim kişisel favorim, peki neden: Bir kere oldukça hızlı ve görüntü, syntax hightlight, dosya yönetimi, kullanışlılık olarak oldukça iyi. Git entegresyonu ve debug entagrasyonu editörün içine gömülü olarak geliyor. Bu en sevdiğim özelliği diyebilirim. Git ile çalışmak ve yaptığın değişikleri takip etmek, yönetmek inanılmaz kolay oluyor. Debug konusunda da rakipsiz bence ve oldukça esnek. Mesela birden fazla python enviromentı yüklü bilgisayarınızda kolayca hangisinde debug etmek istediğinizi ayarlayabiliyorsunuz. Kod tamamlama motorları oldukça iyi. İde olmadığı zaman en büyük eksiklik bu oluyor bence karşımıza çıkan. Çünkü mesela visual studio veya intelij ideleri bu özellikleriyle kod yazarken işimizi çok kolaylaştırıyorlar. Vscode onlarla yarışacak düzeyde değil ama bir çok özelliği var yine de. Her türlü programlama ve biçimlendirme dili için eklenti bulmanız mümkün markdown, html, css. Ekstra olarak ipython notebook destekliyor direk onun özelliklerini editörümüzden kullanabiliyoruz. Markdown veya latex dökümanlarınızı burada yazıp pdf veya html olarak derleyebiliyorsunuz. Ftpsync eklentisi yine oldukça kullanışlı. Code snippetları kolayca entegre edebiliyorsunuz o da yazım hızınızı baya artırıyor. Klavye kısa yolları tüm incelediklerimde benzer şeyleri barındırıyor ve işinizi hizlandiran kısa yollar mevcut. Benim favorim multicursor özelliği. Bu özellik ile birden fazla satırı aynı anda düzenlemek mümkün. Fonskiyonları kopyalama, yerini değiştirme, satırı aşağı yukarı kaydırma en çok kullandığım kısa yollar. Hepsini incelemek isterseniz buraya bakmanızı öneririm. Hatta bu yazdırılabilir versiyonu çıktı alıp bir kenara koyup alışana kadar buradan bakarak kullanabilirsiniz. Dosyaların satır sonu formatlarlarını veya space-tab sorunlarını çözme konusunda da birebir. Tek yapmanız gereken; ctrl-alt-p yapıp yapmak istediğiniz operasyonu yazmak o size aşağıda öneriler çıkartıyor. Terminala ulaşmak ve birden fazla terminal ile kullanmak oldukça basit","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"visual studio code","slug":"visual-studio-code","permalink":"https://mozanunal.com/tags/visual-studio-code/"},{"name":"atom","slug":"atom","permalink":"https://mozanunal.com/tags/atom/"},{"name":"sublime text","slug":"sublime-text","permalink":"https://mozanunal.com/tags/sublime-text/"},{"name":"kod editör","slug":"kod-editor","permalink":"https://mozanunal.com/tags/kod-editor/"},{"name":"text editör","slug":"text-editor","permalink":"https://mozanunal.com/tags/text-editor/"}]},{"title":"[TR] Bitcoin Madencileri için Online Dashboard","slug":"Bitcoin-Madencileri-icin-Online-Dashboard","date":"2017-07-30T12:50:00.000Z","updated":"2023-04-09T21:02:57.281Z","comments":true,"path":"2017/07/Bitcoin-Madencileri-icin-Online-Dashboard/","link":"","permalink":"https://mozanunal.com/2017/07/Bitcoin-Madencileri-icin-Online-Dashboard/","excerpt":"Herkes merhabalar,\nBitcoin son dönemlerin popüler konularından birisi. Aslında genel olarak crypto currency son zamanlarda çok popüler. Peki nedir bu kavramlar? Crypto currency güvenliği şifreleme teknojileriyle sağlanan sanal para birimleridir. Her gün bir yeni bir tür crypto currency ortaya çıkıyor. Bunlar arasında en geçerli olanı ise bitcoin. Sanırım popülerliği en eskilerinden biri olmasından ve anlık olarak üretimi sınırlayabilen ilki olmasından geliyor. Bahsetmek istediğim 3. kavram ise bit coin mining: Yüksek hesaplama gücü kullanarak bitcoin üretebilmeniz mümkün. Bitcoin alışverişlerinin geçerli olması için bir şifre ile onaylanması gerekiyor. Bu şifreyi de bir hash çözerek oluşturuyorsunuz ve bunun karşılığında sistem sizi bitcoin ile ödüllendiriyor. Bu amaçla bir sürü insan sağlan ekran kartları alıp bitcoin tarlaları kurdular ve bu işten para kazanıyorlar. Tabi aklınıza, bitcoinin dünyaya katkısı nedir ya da ne kadar riskli, yatırım yapılır mı? gibi türlü türlü farklı açılardan sorular gelebilir. Ama malesef ben bu konuda uzman değilim ve daha nedir sorusuna bile tam olarak cevap vermek çok zor.\nNeyse konuyu biraz fazla dağıttım bu yazının konusu aslında bunlar değil. Konuma dönecek olursam; bitcoin mining işini kolaylaştıran sistem var, adı Nice Hash. Programını kuruyorsunuz ve bilgisayarınızın hesaplama gücünü satarak para kazanıyorsunuz. Arka planda o crypto currency’lerden en karlı olanı “mine” ediyor. Size de ona göre bir para ödüyor tabi bitcoin olarak. Bir arkadaşım da bu mining işine girdi. Projemin asıl amacı ona anlık olarak kazandığı parayı gösterebilecek bir sistem yapmaktı. Proje böyle başladı yani :). Bu projede kapsamında yaptığım; gerçek zamanlı olarak bu programın web apisini kullanarak bir miner’ın kazandığı parayı ve o andaki bitcoin kurunu çekip 1 inchlik oled ekranda gösteren bir sistem. \n\nBu proje ESP8266 modülleri kullanarak gerçekleştirildi. Bildiğiniz üzere minik bir wifi modulü. Bitcoin idnizi girerek yazdığım kodu derlerseniz direk olarak bilgilerinize ulaşabilirsiniz. ESP8266 minik bir oled ekranı kontrol ederek aldığı anlık kur datasını, kullanıcının toplam bitcoinini ve dolar karşılığını gösterecek şekilde bir program geliştirildi. ESP8266 olarak wemos d1 mini modullerinden kullandım. I2C pinlerini Oled ekrana den gelecek şekilde bir pertinanks oluşturdum uygun pinleri de lehimleyerek shield haline getirmiş oldum.  Yukarıdaki fotoğrafta ESP8266 tamamen shieldın altına gizlenmiş halde bu sayede sistem baya toplanmış oldu tek parça bir görüntü kazandı.","text":"Herkes merhabalar, Bitcoin son dönemlerin popüler konularından birisi. Aslında genel olarak crypto currency son zamanlarda çok popüler. Peki nedir bu kavramlar? Crypto currency güvenliği şifreleme teknojileriyle sağlanan sanal para birimleridir. Her gün bir yeni bir tür crypto currency ortaya çıkıyor. Bunlar arasında en geçerli olanı ise bitcoin. Sanırım popülerliği en eskilerinden biri olmasından ve anlık olarak üretimi sınırlayabilen ilki olmasından geliyor. Bahsetmek istediğim 3. kavram ise bit coin mining: Yüksek hesaplama gücü kullanarak bitcoin üretebilmeniz mümkün. Bitcoin alışverişlerinin geçerli olması için bir şifre ile onaylanması gerekiyor. Bu şifreyi de bir hash çözerek oluşturuyorsunuz ve bunun karşılığında sistem sizi bitcoin ile ödüllendiriyor. Bu amaçla bir sürü insan sağlan ekran kartları alıp bitcoin tarlaları kurdular ve bu işten para kazanıyorlar. Tabi aklınıza, bitcoinin dünyaya katkısı nedir ya da ne kadar riskli, yatırım yapılır mı? gibi türlü türlü farklı açılardan sorular gelebilir. Ama malesef ben bu konuda uzman değilim ve daha nedir sorusuna bile tam olarak cevap vermek çok zor. Neyse konuyu biraz fazla dağıttım bu yazının konusu aslında bunlar değil. Konuma dönecek olursam; bitcoin mining işini kolaylaştıran sistem var, adı Nice Hash. Programını kuruyorsunuz ve bilgisayarınızın hesaplama gücünü satarak para kazanıyorsunuz. Arka planda o crypto currency’lerden en karlı olanı “mine” ediyor. Size de ona göre bir para ödüyor tabi bitcoin olarak. Bir arkadaşım da bu mining işine girdi. Projemin asıl amacı ona anlık olarak kazandığı parayı gösterebilecek bir sistem yapmaktı. Proje böyle başladı yani :). Bu projede kapsamında yaptığım; gerçek zamanlı olarak bu programın web apisini kullanarak bir miner’ın kazandığı parayı ve o andaki bitcoin kurunu çekip 1 inchlik oled ekranda gösteren bir sistem. Bu proje ESP8266 modülleri kullanarak gerçekleştirildi. Bildiğiniz üzere minik bir wifi modulü. Bitcoin idnizi girerek yazdığım kodu derlerseniz direk olarak bilgilerinize ulaşabilirsiniz. ESP8266 minik bir oled ekranı kontrol ederek aldığı anlık kur datasını, kullanıcının toplam bitcoinini ve dolar karşılığını gösterecek şekilde bir program geliştirildi. ESP8266 olarak wemos d1 mini modullerinden kullandım. I2C pinlerini Oled ekrana den gelecek şekilde bir pertinanks oluşturdum uygun pinleri de lehimleyerek shield haline getirmiş oldum. Yukarıdaki fotoğrafta ESP8266 tamamen shieldın altına gizlenmiş halde bu sayede sistem baya toplanmış oldu tek parça bir görüntü kazandı. KodKodu buradan inceleyebilirsiniz. Wifi bağlanma ve ekran ayarlarıWifi multi kullandığım için birden fazla wifi girebilirsiniz. Hangisi çevrede varsa onu kullanarak internete çıkar. Ekranın boyutu çok küçük olmasına rağmen çözünürlüğü böyle bir sisteme göre oldukça yüksek bu sayede baya hoş gözüküyor.1234567891011121314151617181920//Setup Oleddisplay.init();display.flipScreenVertically();display.setFont(ArialMT_Plain_16);display.setTextAlignment(TEXT_ALIGN_LEFT);display.clear();//Setup WifiWiFiMulti.addAP( ssid_1 , pass_1);WiFiMulti.addAP( ssid_2 , pass_2);display.clear();display.drawString(0 , 20, \"Waiting for wifi...\");display.display();int xpos = 0;while(WiFiMulti.run() != WL_CONNECTED) &#123; display.drawString(xpos ,40 , \".\"); xpos= xpos + 3; display.display(); delay(500);&#125; Gerekli verilerin internetten çekilmesiData alma kısmında buradaki Nice Hash api dökumanından yararlandım. Bitcoin id ile http request yapıldığında geriye bir json dönüyor. Json Arduinojson library ile parçalanıp içinden gerekli bilgi çekiliyor. Verilen urlden datayı string almak için aşağıdaki fonksiyonu yazdım. 12345678910111213141516171819202122String getJsonFromUrl(char *url)&#123; HTTPClient http; //Declare an object of class HTTPClient String payload; http.begin(url); //Specify request destination int httpCode = http.GET(); //Send the request Serial.print(\"\\n Received http code \"); Serial.println(httpCode); if (httpCode &gt; 0) //Check the returning code &#123; Serial.println(\"HTTP OK\"); payload = http.getString(); //Get the request response payload Serial.println(payload); //Print the response payloa return payload; &#125; else &#123; Serial.println(\"HTTP ERROR\"); return \"&#123;&#125;\"; &#125; http.end(); //Close connection&#125; Kur bilgisinin alınmasıYukarıdaki data alma fonksiyonu kullanılarak data string olarak çekilip json’a dönüştürülüyor. Daha sonrasında kur bilgisi aşağıdaki fonksiyon kullanılarak çekiliyor. Json parçalanıp içindeki “USD” objesinin “last” değikeni çekiliyor. Bizim için güncel bitcoin kuru. 12345678910111213double getCurrency()&#123; JsonObject&amp; root_Currency = jsonBuffer_Currency.parseObject( getJsonFromUrl(url_Currency) ); if (root_Currency.success()) &#123; double currency = root_Currency[\"USD\"][\"last\"]; return currency; &#125; else &#123; return 0.0; &#125;&#125; Kazanılan bitcoin bilgisinin alınmasıKaznılan bitcoin için NiceHash Api kullanılıyor. Bitcoin cüzdanı ID’si ile request yapıldığında oldukça büyük bir obje dönüyor. Aşağıdaki gibi bir parçalama işlemiyle şu ana kadar kazanılan para bitcoin olarak çekiliyor. Bitcoin değeri ile kur çarpılarak dolar karşılığı da hesaplanıyor. 123456789101112131415161718192021222324double getTotalBTC(const char *BitCoinWallet)&#123; //Setup URLs strcpy( url_Balence, url_Balance_base ); strcat( url_Balence, BitCoinWallet ); JsonObject&amp; root_Balance = jsonBuffer_Balance.parseObject( getJsonFromUrl(url_Balence) ); double total_balance_btc = 0.0; if (root_Balance.success()) &#123; double balances[8]; int algos[8]; for (int i = 0; i&lt;8; i++) &#123; algos[i] = root_Balance[\"result\"][\"stats\"][i][\"algo\"]; const char* balchar = root_Balance[\"result\"][\"stats\"][i][\"balance\"]; balances[i] = strtod(balchar, NULL); Serial.print(balchar); Serial.println(balances[i]); total_balance_btc += balances[i]; &#125; &#125; return total_balance_btc;&#125; Verilerin ekranda gösterilmesiÇekilen veriler aşağıdaki fonksiyon yardımıyla ekranda sırasıyla gösteriliyor. Her bir frame 2 saniye ekranda durup sonraki frame geçecek şekilde bir yapı kurdum. 123456789101112131415161718192021222324252627282930313233343536void frameLoop(double currency, double totol_balance_btc, double total_balance)&#123; //currency delay(2000); char currency_line[30]; dtostrf(currency,0, 2, currency_line); sprintf(currency_line,\"%s %s\", currency_line, \" $\"); display.clear(); display.drawString(0 , 0, \"1 BTC:\"); display.drawString(0 , 20, currency_line); display.display(); // total dollar delay(2000); char total_balance_line[30]; dtostrf(total_balance,0, 8, total_balance_line); sprintf(total_balance_line,\"%s %s\", total_balance_line, \" $\"); display.clear(); display.drawString(0 , 0, \"Total:\"); display.drawString(0 , 20, total_balance_line); display.display(); // total btc delay(2000); char totol_balance_btc_line[30]; dtostrf(totol_balance_btc,0, 8, totol_balance_btc_line); sprintf(totol_balance_btc_line,\"%s %s\", totol_balance_btc_line, \" BTC\"); display.clear(); display.drawString(0 , 0, \"Total:\"); display.drawString(0 , 20, totol_balance_btc_line); display.display(); &#125; Şimdilik bu proje için yazacaklarım bu kadar. Ayrıntılı bilgi için mesaj atabilirsiniz. Görüşmek üzere.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"IoT","slug":"Electronics/IoT","permalink":"https://mozanunal.com/categories/Electronics/IoT/"}],"tags":[{"name":"wemos","slug":"wemos","permalink":"https://mozanunal.com/tags/wemos/"},{"name":"esp8266","slug":"esp8266","permalink":"https://mozanunal.com/tags/esp8266/"},{"name":"bitcoin mining","slug":"bitcoin-mining","permalink":"https://mozanunal.com/tags/bitcoin-mining/"},{"name":"IoT","slug":"IoT","permalink":"https://mozanunal.com/tags/IoT/"}]},{"title":"[TR] Hexo Blog Servisi Nedir","slug":"Hexo-Blog-Servisi-Nedir","date":"2017-07-27T07:48:00.000Z","updated":"2023-01-18T11:16:34.251Z","comments":true,"path":"2017/07/Hexo-Blog-Servisi-Nedir/","link":"","permalink":"https://mozanunal.com/2017/07/Hexo-Blog-Servisi-Nedir/","excerpt":"","text":"Herkese merhabalar, Beni takip ediyorsanız farketmişsinizdir çok yakın zamanda blogumu baştan sona değiştirdim. Bunu yapmamın sebebi önceden blogger kullanıyordum fakat bir süre sonra bazı özellikleri yetersiz gelmeye başladı. Daha çok özelleştirilebilir ve farklı eklentileri destekleyen bir blog yönetim aracına ihtiyacım olduğuna karar verdim ve araştırmaya koyuldum. Karşıma ilk çıkanlar en popüler olanlardı tabi ki fakat biraz daha ayrıntılı araştırınca hexo.io buldum. Kendisi şu anda kullandığım blog aracı. Temel olarak node.js tabanlı bir statik site generator. İnanılmaz bir eklenti ve tema desteği var. Benim için tercih sebebi yapan neydi diye sorarsanız 2 şeyi sayabilirim: Markdown desteği olması ve github pages üzerinden host edilebilmesi. Markdown yazılarınızı kolayca biçimlendirmenizi sağlayan bir servis. Kolaylığına öyle alıştım ki yazmam gereken herhangi bir yazıda onu arıyorum. Daha sonrasında kategori, yorum olaylarını desteklemesi ve arama motorları için kolayca rss feed, site map oluşturabilmem hoşuma giden diğer özellikler oldu. Peki özellikleri bunlar fakat nasıl kullabılır bu hexo. Bloggerı kullandıysanız belki başlarda zorluk yaşayabilirsiniz fakat onun kadar hazır bir sistem değil malaesef. Bilgisayarınızda nodejs kurulu olmalı. Nodejs servera gerek yok ama hexo onun üzerine yazılmış ve markdown dosyalarından statik html dosyalar oluşturuyor. Oluşturulmuş dosyaları host etmeniz yeterli bir nodejs servera ihtiyacınız yok. hexo.io Kullanım Klavuzu Blog oluşturma12345npm install hexo-cli -ghexo init blogcd blognpm installhexo server Yaralı eklentiler Admin eklentisi kolayca içerik oluşturmak ve oluşturulmuş içeriği yönetmek için.1npm install hexo-admin --save Rss eklentisi1npm install hexo-generator-feed --save Blog içi arama1npm install hexo-generator-json-content --save Github pages deployer1npm install hexo-deployer-git --save Site haritası çıkarma, yorum eklentileri, google analytics eklenlentileri de yararli eklentiler arasinda sayilabilir Blog ayarlarını özelleştirme Blog ayarları blogun oluşturulduğu klasördeki _config.yml özelleştirilerek yapılıyor. Blog adı, dili, teması, dağıtım ayarları hepsi buradan bir text editor yardımıyla ayarlanıyor. İçerik oluşturmaİçerik Markdown dili kullanılarak oluşturuluyor. Farklı giriş şekillerini de destekliyor. Sadece gerekli javascript yorumlayıcısını kurmak gerek. Temanızı seçin ve özelleştirin Temanızı değiştirmek için temanın git deposunu blogunuzun klasörünün ‘themes’ klasörüne kopyalayabilirsiniz. Temanın ayarlarını da onun _config.yml üzerinden değiştirebilirsiniz. Yorum ayarlarını açma Ben yorum için disqus kullanıyorum. Disqus kullanmanın kolay yolu onu destekleyen bir tema bulup onu ayarlamak. Disqus’a kaydolup bir kullanıcı adı alıp sitenizle eşleştirmeniz mümkün bu konuda kolayca bilgi bulabilirsiniz. İçeriğinizi dağıtın Github hesabınıza gidin ve .github.io şeklinde bir kod deposu oluşturun. _config.yml dosyasını aşağıdaki gibi değiştirin. 123deploy: type: git repo: https://github.com/username/username.github.io Aşağıdaki kod ile ilkönce içeriği oluşturup sonra github pages üzerinden dağıtabilirsiniz. Bütün kategorileriniz sayfalarınız, yazılarınız statik html dosyaları olarak oluşturulup dağıtılacaktır. 12hexo generatehexo deploy Github pages kendi linkinizden görüntülemek için aşağıyı takip edebilirsiniz. godady - gihub.pages - hexo configure tutorial further info please refer here","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"blog","slug":"blog","permalink":"https://mozanunal.com/tags/blog/"},{"name":"hexo.io","slug":"hexo-io","permalink":"https://mozanunal.com/tags/hexo-io/"},{"name":"static site generator","slug":"static-site-generator","permalink":"https://mozanunal.com/tags/static-site-generator/"},{"name":"hexo","slug":"hexo","permalink":"https://mozanunal.com/tags/hexo/"}]},{"title":"PMod Microphone Driver","slug":"PMod-Microphone-Driver","date":"2017-07-20T20:14:00.000Z","updated":"2023-01-18T11:16:34.251Z","comments":true,"path":"2017/07/PMod-Microphone-Driver/","link":"","permalink":"https://mozanunal.com/2017/07/PMod-Microphone-Driver/","excerpt":"","text":"Hi In this post, the Pmod microphone driver which is written in Verilog for Zynq boards is discussed. The driver is developed for Digilent Design Competition 2017. We have a project which microphone array is used. Therefore we have to get data from Pmod Mic also 5 of them should work synchronously. The microphone is sampled with an external ADC and this ADC is using basic SPI for communication. This module should be added to main FPGA code and you should make the connections required. clk/16 sample rate is succeeded for the microphone. clk input frequency should select according to required sampling rate for the microphone. SS can be used as out enable also. You can ask any question directly to me if you have a problem with the driver. See you… 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253`timescale 1ns / 1ps//ADCS747x 1-MSPS, 12-Bit, 10-Bit, and 8-Bit A/D Convertersmodule pmodMic3( input clk, input miso, output sck, output reg ss, output reg [15:0] out ); reg [31:0] clkCounter;reg [15:0] outBuffer;assign sck = clk;initial clkCounter = 0;initial ss = 0;always @(posedge clk) begin if (clkCounter &lt; 16) begin outBuffer[15-clkCounter] &lt;= miso; clkCounter = clkCounter + 32'd1; end else if (clkCounter == 16) begin out &lt;= outBuffer; clkCounter = clkCounter + 32'd1; end else if (clkCounter == 17) begin clkCounter = 32'd0; end end always @(negedge clk) begin if (clkCounter == 16) begin ss &lt;= 1'b1; end else if (clkCounter == 0) begin ss &lt;= 1'b0; end end endmodule Download from here","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"FPGA","slug":"Electronics/FPGA","permalink":"https://mozanunal.com/categories/Electronics/FPGA/"}],"tags":[{"name":"Pmod","slug":"Pmod","permalink":"https://mozanunal.com/tags/Pmod/"},{"name":"xilinx","slug":"xilinx","permalink":"https://mozanunal.com/tags/xilinx/"},{"name":"xillinx vivado","slug":"xillinx-vivado","permalink":"https://mozanunal.com/tags/xillinx-vivado/"},{"name":"zynq","slug":"zynq","permalink":"https://mozanunal.com/tags/zynq/"},{"name":"pmod mic","slug":"pmod-mic","permalink":"https://mozanunal.com/tags/pmod-mic/"},{"name":"Microphone verilog","slug":"Microphone-verilog","permalink":"https://mozanunal.com/tags/Microphone-verilog/"}]},{"title":"[TR] Google Hash Code 2017","slug":"Google-Hash-Code-2017","date":"2017-07-12T23:51:00.000Z","updated":"2023-01-18T11:16:34.250Z","comments":true,"path":"2017/07/Google-Hash-Code-2017/","link":"","permalink":"https://mozanunal.com/2017/07/Google-Hash-Code-2017/","excerpt":"","text":"Herkese Merhabalar, Google bir kaç senedir tüm dünyada programlama ve algoritmalar üzerine bir yarışma düzenliyor. Bu yarışma kapsamında, yarışmanın katılımcılarına karmaşık algoritmik problemler veriliyor ve istenilen data kümeleri için yine verilen formatta sonuçlar oluşturacak algoritmalar yazılması gerekiyor. Son olarak bu sonuç dosyaları Google’ın sistemine yükleniyor ve skor hesaplanıyor. Yarışma 2 aşamadan oluşuyor 1. aşama online eleme. İkinci aşama ise ilk 30’a giren gruplar bir merkezde yarışıyor. Ben de yarışmaya 2016 ve 2017 yıllarında katıldım. Bu yazıda 2017 yılındaki online eleme sorusu ve pratik sorusu hakkında paylaşımlar yapmak istiyorum. Bu arada bu soruları 4 saat içerisinde çözememiz gerekiyor bu nedenle kodlar hızlı yazıldı hata içerebilir fakat her iki kod da google’ın sisteminde oldukça iyi puanlar alıyordu. Yarışmada yazdığımız çözümlere yarışma sorularına ve örnek datalara bu bağlantıdan ulaşabilirsiniz Pratik Sorusu: Pizzaİlk soru “Pizza” sorusu. Bu soruda bir pizzayı istenilen maddelerden en az içerek şekilde parçalamamız isteniyor. Amaç pizzanın mümkün olduğunca fazla kısmını kullanmak. Pizzamız dikdörtgen ve ilk kısımda pizza sınıfı oluşturuluyor. Bunun için dosyadan ilk satır okunuyor ve bu satır, sütun ve içerik bilgisi dosyadan ‘parse’ edilip sınıfıun özellikleri olarak bir matrise kopyalanıyor. Kodun devamında ise belirlenen özelliklerde dilimler oluşturmak üzerine. Dilim geçerli bir dilim mi? Dilim içerisindeki domates, mantar sayısı kaç şeklinde sorulara cevap veren methodlar var. Dilim hakkında verileri alan fonksiyonlar eklendikten sonra algoritmayı oluşturduk. Amacı en köşeden başlayarak gerekli dilimi oluşturduktan sonra sonraki dilime geçiyor. Daha sonra ikinci bir tur atıp genişletilebilecek dilimlere göz atıyor. Ve eğer dilim genişletilebilir durumdaysa genişletiyor pizzanın daha büyük bir kısmını kullanabilmek için. ‘Commit’ fonksiyonu ile de değişlikler matrise kaydediliyor. Böylece zaten kullanımda olan parçalar diğer dilimlerde kullanılamıyor. İkinci tur dolaşımda anlık olarak o dilimi ‘decommit’ yapıp o çevrede daha büyük bir dilim oluşturmaya çalışıyor. Son olarak başarı oranını hesaplayan bir fonksiyon var. Eğer algoritma üzerinde değişiklik yaparsanız bu fonksiyonu kullanarak performansını deneyebilirsiniz. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141class pizza: def __init__(self, file): f = open(file, 'r') fline = f.readline() [R, C, L, H] = fline.split(' ') self.L = int(L) self.H = int(H) self.R = int(R) self.C = int(C) self.Matrix = [] self.Matrix2 = [] self.result = [] self.resultS = [] for index, line in enumerate(f): self.Matrix.append([]) self.Matrix2.append([]) for i in range(0, self.C): self.Matrix[index].append(line[i]) self.Matrix2[index].append(False) def calculate(self): # print('Calculating') for i in range(0, self.R): for j in range(0, self.C): if self.Matrix2[i][j] is False: self.trycreateSlice(i, j) for index,curSlice in enumerate(self.result): self.decommitResult(curSlice) for i in [3,2,1,0]: for j in [3,2,1,0]: trySlice = slice(curSlice.r1, curSlice.c1, curSlice.r2 + i, curSlice.c2 + j) if self.testSlice(trySlice) is True: #print 'updated' self.result[index].r1 = trySlice.r1 self.result[index].c1 = trySlice.c1 self.result[index].r2 = trySlice.r2 self.result[index].c2 = trySlice.c2 for i in range(trySlice.r1, trySlice.r2 + 1): for j in range(trySlice.c1, trySlice.c2 + 1): self.Matrix2[i][j] = True break def trycreateSlice(self, r, c): # print(r,c),'start' for i in range(0, 15): for j in range(0, 15): trySlice = slice(r, c, r + i, c + j) if self.testSlice(trySlice) is True: # print 'finded' self.commitResult(trySlice) break return (r, c) def testSlice(self, slice): test = False if (((slice.r2 - slice.r1 + 1) * (slice.c2 - slice.c1 + 1)) &gt; self.H) | ((slice.r2 + 1) &gt; self.R) | ((slice.c2 + 1) &gt; self.C): # print '&gt;boundries' a = 5 else: tNum, mNum = self.getNumbers(slice) avaible = self.getAvaible(slice) if avaible is True: if(mNum &gt;= self.L) &amp; (tNum &gt;= self.L): test = True else: # print 'not Avaible' a = 5 return test def getAvaible(self, slice): avaible = True for i in range(slice.r1, slice.r2 + 1): for j in range(slice.c1, slice.c2 + 1): if self.Matrix2[i][j] == True: avaible = False return avaible def getNumbers(self, slice): tNum = 0 mNum = 0 for i in range(slice.r1, slice.r2 + 1): for j in range(slice.c1, slice.c2 + 1): if self.Matrix[i][j] == 'T': tNum += 1 elif self.Matrix[i][j] == 'M': mNum += 1 return tNum, mNum def commitResult(self, slice): self.result.append(slice) # print 'done',str(r1)+\" \"+str(c1)+\" \"+str(r2)+\" \"+str(c2) for i in range(slice.r1, slice.r2 + 1): for j in range(slice.c1, slice.c2 + 1): self.Matrix2[i][j] = True def decommitResult(self, slice): # print 'done',str(r1)+\" \"+str(c1)+\" \"+str(r2)+\" \"+str(c2) for i in range(slice.r1, slice.r2 + 1): for j in range(slice.c1, slice.c2 + 1): self.Matrix2[i][j] = False def convertRestultString(self): for slice in self.result: self.resultS.append(str(slice.r1) + \" \" + str(slice.c1) + \" \" + str(slice.r2) + \" \" + str(slice.c2)) def printSucces(self): trueC = 0 falseC = 0 for i in range(0, self.R): for j in range(0, self.C): if self.Matrix2[i][j] == True: trueC += 1 else: falseC += 1 print \"Score: \", trueC, \" / \", trueC+falseCclass slice: def __init__(self,r1,c1,r2,c2): self.r1 = r1 self.c1 = c1 self.r2 = r2 self.c2 = c2mypizza = pizza('medium.in')# print mypizza.Matrix# print mypizza.Matrix2mypizza.calculate()mypizza.convertRestultString()s = str(len(mypizza.resultS))+\"\\n\"for res in mypizza.resultS: s += res + \"\\n\"file = open(\"medium.txt\",\"w\")file.write(s)file.close()mypizza.printSucces() Online eleme sorusu: Streaming VideosBu soruda ise video izleme gecikmesini azaltmak için videoları ‘cache’ sunuclara yerleştirmemiz isteniyor. Yüksek puan almak için toplam gecikme süresi minimum olmalı. Bu kapsam da ilk aşamada gerekli sınıflar oluşturuldu. Daha sonrasında bu sınıflar arasında bağlantılar oluşturuldu. Algoritmanın amacı herhangibir bir cache serverın bütün videoları için latency hesaplayıp sonra bunları skorlayarak bir optimizasyon yapmak. Burda tabi bağlantıları yapmak biraz zor oldu benim açımdan. Pizza sorusuyla karşılaştırınca çok daha fazla farklı sınıf olduğunu farketmişsiniz. Burda çözümü anlatmanın çok bir anlamı olmadığını düşünüyorum. Daha çok yarışma hakkında bir kaç izlenimimden bahsetmek isterim. Yarışmada farkettiğiniz üzere aslında tam olarak çözümü belli olmayan sorular soruluyor. Daha doğrusu mutlak doğru sonuç var ama onu hesaplamak imkansız bir seviyede. Yani Brute force ile neredeyse sonsuz olasılıkla karşı karşıya kaldığımız sorular soruluyor. Lütfen soruları çözerken hep onu dikkat alın. Sürekli algoritmanınızın karmaşıklığına dikkat ederek geliştirin. Ben de bu konuda yeterince tecrübeli olmadığım için bir kaç kere büyük data kümelerinde sonsuz işleme doğru giden algoritmalar yazdım. İkinci önerim ise kesinlikle verilen datalara bakarak çözümünüzü üretin. Çünkü bütün sorularda genelde 3 4 adet farklı data kümesi verilliyor ve genelde her bir data farklı bir şeyi ölçüyor. Biri için geliştirdiğiniz algoritma diğerlerine uymayabiliyor. Bugünlük bu kadar daha ayrıntılı sorularınızı her zaman sorabilirsiniz. Görüşmek üzere123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134class scoring: def __init__(self,video,score): self.video= video self.score = score def __lt__(self, other): return self.score &gt; other.score + 5 class connection: def __init__(self,ep,cacheNum,latency): self.ep = ep self.cacheNum = cacheNum self.latency = latencyclass video: def __init__(self, id , size): self.id = id self.size = sizeclass cache: def __init__(self, id , capacity): self.id = id self.capacity = capacity self.videos = [] self.endpoints = [] def addVideo(self,video): if self.capacity &gt;= video.size: self.videos.append(video) self.capacity = self.capacity - video.size return True else: return False class endpoint: def __init__(self,id,latencyDataC,connectionNumber): self.id = id self.latencyDataC= latencyDataC self.connections = [] self.requests = [] class request: def __init__(self,reqNumber, videoID, endpointID,count): self.reqNumber = reqNumber self.videoID = videoID self.endpointID = endpointID self.count = countclass solver: def __init__(self, file): self.videos = [] self.eps = [] self.requests = [] self.caches= [] f = open(file, 'r') fline = f.readline() [V, E, R, C, X] = fline.split(' ') self.videoCount = int(V) for indexC in range(0,int(C)): c = cache(indexC, int(X)) self.caches.append(c) fline = f.readline() for index, size in enumerate(fline.split(' ')): v = video(index,int(size)) self.videos.append(v) for currentEpID in range(0,int(E)): fline = f.readline() [latencyDataC, connectionNumber] = fline.split(' ') ep = endpoint(currentEpID,int(latencyDataC),int(connectionNumber)) self.eps.append(ep) for i in range(0,int(connectionNumber)): [cNUm,latency] = f.readline().split(' ') c = connection(ep,int(cNUm),int(latency)) ep.connections.append(c) self.caches[int(cNUm)].endpoints.append(self.eps[currentEpID]) for curReqId in range(0,int(R)): [reqVideoID,reqEpID,reqCount] = f.readline().split(' ') r = request(curReqId,int(reqVideoID),int(reqEpID),int(reqCount)) self.requests.append(r) self.eps[int(reqEpID)].requests.append(r) def getvideosofcache(self,cache): #print \"cache id:\", cache, scoreList = [] for i in self.videos: s = scoring(i,0) scoreList.append(s) for ep in cache.endpoints: for req in ep.requests: curLat = self.getlatency(cache,ep) score = (req.count*(ep.latencyDataC-curLat)) #print \"videoid : \", req.videoID, \"ep: \", ep.id, \"req count\", req.count, \"dc latiency: \", ep.latencyDataC, \"connect latency\",curLat, \"puan\", score) scoreList[req.videoID].score += score #print \"videoid : \", req.videoID, scoreList[req.videoID].score scoreList.sort() #for a in scoreList: #print a.video.id, a.score, a.video.size return scoreList def getlatency(self,cache,endpoint): ali = 0 for i in endpoint.connections: if i.cacheNum == cache.id: ali = i.latency break return ali def solve(self): for curCache in self.caches: print curCache.id scoreList = mysolver.getvideosofcache(curCache) for curVideo in scoreList: if curVideo.score == 0: break curCache.addVideo(curVideo.video) def result(self): result = str(len(self.caches)) for curCache in self.caches: result += \"\\n\"+str(curCache.id) for curVideo in curCache.videos: result += \" \"+str(curVideo.id) #print result file = open(\"videos_worth_spreading.txt\",\"w\") file.write(result) file.close() mysolver = solver('videos_worth_spreading.in')mysolver.solve()mysolver.result()","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"Hash Code","slug":"Hash-Code","permalink":"https://mozanunal.com/tags/Hash-Code/"}]},{"title":"Internet of Beach","slug":"Internet-of-Beaches","date":"2017-06-27T17:18:00.000Z","updated":"2023-04-09T21:02:57.281Z","comments":true,"path":"2017/06/Internet-of-Beaches/","link":"","permalink":"https://mozanunal.com/2017/06/Internet-of-Beaches/","excerpt":"Herkese Merhabalar,\nBugünkü yazımda arkadaşlarımla katıldığım Nasa Space Apps Challenge 2017 hakkında bir paylaşımda bulunacağım. Bu hackhathon Nasa tarafından dünya genelinde düzenleniyor. 24 saat içerinde önceden yayınlanan sorunlardan birine çözüm bulmamız isteniyor. Tüm dünya genelinde aynı gün bu problemlere çözüm aranıyor. Biz de Koç Üniversitesi IEEE topluluğunca organize edilen yarışmanın İstanbul şubesinden katıldık. Öncellikle şunu söylemem gerek organizasyon oldukça güzeldi, hiç bir aksaklık yaşanmadan çok keyifli ve eğlenceli bir 24 saat yaşadık. Burdan IEEE Koç ailesine teşekkürlerimi iletiyorum.","text":"Herkese Merhabalar, Bugünkü yazımda arkadaşlarımla katıldığım Nasa Space Apps Challenge 2017 hakkında bir paylaşımda bulunacağım. Bu hackhathon Nasa tarafından dünya genelinde düzenleniyor. 24 saat içerinde önceden yayınlanan sorunlardan birine çözüm bulmamız isteniyor. Tüm dünya genelinde aynı gün bu problemlere çözüm aranıyor. Biz de Koç Üniversitesi IEEE topluluğunca organize edilen yarışmanın İstanbul şubesinden katıldık. Öncellikle şunu söylemem gerek organizasyon oldukça güzeldi, hiç bir aksaklık yaşanmadan çok keyifli ve eğlenceli bir 24 saat yaşadık. Burdan IEEE Koç ailesine teşekkürlerimi iletiyorum.Yarışma hakkında konuşmaya devam edecek olursam. Yarışmanın ilk saatlerini konuya karar verme ve 24 saat boyunca neler yapacağımızı planlayarak geçti. Yarışmayı bir kaç senedir takip ediyoruz. Bu seneki “challenge”ları görünce biraz şaşırdık. Çünkü genellikle yer bilimleri üzerine ve veri işleme, anlamlandırmaya yönelik konulardı. Bizim takımımıza pek hitap etmediği için IOT tabanlı bir şeyler yapabileceğimiz aynı zamanda mekanik, elektronik dizayn yapabileceğimiz konular seçmeye çalıştık. Bu düşüncelerle Let’s go to the Beach konusunu seçtik. Bu kampsamda bulut tabanlı her bir kişinin ayrı ayrı, kişisel UV ışın alımını takip edip ona öneriler verebilen bir sistem mimarisi üzerine çalıştık. Sistemin ayrıntılarına yazının devamından ulaşabilirsiniz. Bu arada projemiz birincilik ödülüne layık görüldü. Bu da beni ayrıca çok mutlu etti. Proje ile alakalı sorunlarınız için ulaşabilirsiniz. Tekrar görüşmek üzere It is a project developed for Nasa Space Apps Challenge 2017. Detailed information can be foud from below The ChallengeLet’s go to the Beach!Build a tool for beach-goers to monitor for hazards and to alert them of precautionary measures for protection on their swim- and surf-filled adventures! Internet Of Beach Satisfy your curiosity about beaches to go! IoB wristband warns you about dangerous amounts of UV exposure with respect to your skin sensitivity, age and how much actual radiation you received. We designed a web application, an IOB wristband a gateway and a server. With our web application, many information about the beach can be learned. Required informations are taken from openweather api and are showed to users with open board dashboard. The time of the UV exposure of the person is measured with IOT wristband. The required informations and energy are provided from solar panel. RGB leds warn you with processing data from the cloud. We also designed a gateway which is shaped as a buoy and placed it to the beaches to connect IOB wristband to cloud. More reliable data are obtained with processing all these data in cloud. To view the presentation: To view the full source code: To view the photos and all other documents (PCBs, CAD files): Who Are We?We are participating the competition from Istanbul, TURKEY. All of us studying at Istanbul Technical Univercity. Murat Gokcen Aerospace Engineering Mehmet Ozan Unal Electronics and Communication Engineering Emir Can Yaman Aerospace Engineering Electornics and Communicatin Engineering Ertugrul Cinar Aeronautical Engineering Control and Automation Engineering It’s hard to introduce everybody one by one. But in a nutshell we are enthusiast about space, electronic, software and all flying things. Also two members of our team joinder at 2015 Nasa Space Apps Challange Istanbul and they were selected as People’s choice with Christopher What is The Challange?Let’s go to the Beach!According to the World Health Organization [1], overexposure to sunlight can cause harm to our skin, our eyes, and our immune systems. In fact, protecting ourselves from UV damage, for example by using hats, sunglasses, and sunscreen, can prevent four out of five cases of skin cancer. Our soution covers most of challange as below. Predict their sun exposure Suggest alternative times of the day, or days when sun exposure levels are lower Warn users of presence of HABs in local beaches, and direct them to safer regions, where available Add other precautionary and safety alerts as you see fit! What is The Solution?APP + IoT Band + Cloud! IoT Band Gateway between IoT Band and Cloud Server Cloud Server How its Working? For better describition, you can watch project video. Thank you for your timeWe are to happy to participate this contents. We hope we will join next year again. By the way, you can see technologies which we used while hackathon process. I want to finish with a quote from Richard Bronson. Above all, we want to create something we’re proud of. [1] “Sun Protection.” Ultraviolet radiation and the INTERSUN Programme. World Health Organization. Website Accessed March 2017. https://www.who.int/uv/sun_protection/en/","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"IoT","slug":"Electronics/IoT","permalink":"https://mozanunal.com/categories/Electronics/IoT/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Nasa Space Apps Challenge 2017","slug":"Nasa-Space-Apps-Challenge-2017","permalink":"https://mozanunal.com/tags/Nasa-Space-Apps-Challenge-2017/"},{"name":"IOB","slug":"IOB","permalink":"https://mozanunal.com/tags/IOB/"},{"name":"IoT","slug":"IoT","permalink":"https://mozanunal.com/tags/IoT/"}]},{"title":"Artwork Sharing Platform with Augmented Reality","slug":"art-sharing-platform-1521976119976","date":"2017-04-16T15:04:36.000Z","updated":"2023-01-18T11:16:34.252Z","comments":true,"path":"2017/04/art-sharing-platform-1521976119976/","link":"","permalink":"https://mozanunal.com/2017/04/art-sharing-platform-1521976119976/","excerpt":"","text":"This is a project develop for Tech4Culture Hackhathon 2017. Project features: You can share artworks You can follow artist who you like You can explore and experience artworks with augmented reality You can follow art foundations for art and culture activities Future Improvements Supporting artist about scanning and sharing of their artworks. Expanding supported artworks for augmented reality ( showing performing art as animation) _NOP TeamMehmet Ozan UnalAli SivginErtugrul Cinar","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"hackhathon","slug":"hackhathon","permalink":"https://mozanunal.com/tags/hackhathon/"},{"name":"augmented reality","slug":"augmented-reality","permalink":"https://mozanunal.com/tags/augmented-reality/"},{"name":"unity","slug":"unity","permalink":"https://mozanunal.com/tags/unity/"}]},{"title":"[TR] SimpleDSP: FIR filtreleme özelliği eklendi","slug":"simpledsp-fir-filtreleme-ozelligi","date":"2017-04-06T21:13:00.000Z","updated":"2023-01-18T11:16:34.259Z","comments":true,"path":"2017/04/simpledsp-fir-filtreleme-ozelligi/","link":"","permalink":"https://mozanunal.com/2017/04/simpledsp-fir-filtreleme-ozelligi/","excerpt":"Herkese Merhabalar,Bildiğiniz gibi gömülü sistemlerde kullanılabilecek basit bir DSP kütüphanesi geliştirmeye çalışıyorum son olarak FIR filtreleme özelliğini bu kütüphaneye ekledim. FIR filtre ile alçak geçiren, yüksek geçiren, band geçiren veya durduran filtreler tasarlayabilirsiniz. FIR filtreler yapısı gereği hep stabil filtrelerdir. Bu nedenle bir kararlılık analizi gerektirmeden kullanılabilirler.  \nAyrıca wiki sayfasını kesinlikle ziyaret etmenizi tavsiye ederim orada Matlab veya Octave kullanarak nasıl filtreyi tasarlayacağınız. Filtreyi nasıl kullanacağınız ve karakteristiğini nasıl görselleyebileceğinize kadar bir çok bilgi bulunmakta. Ziyaret etmek için tıklayın.  \nProjenin github linkine buradan ulaşabilirsiniz.  ","text":"Herkese Merhabalar,Bildiğiniz gibi gömülü sistemlerde kullanılabilecek basit bir DSP kütüphanesi geliştirmeye çalışıyorum son olarak FIR filtreleme özelliğini bu kütüphaneye ekledim. FIR filtre ile alçak geçiren, yüksek geçiren, band geçiren veya durduran filtreler tasarlayabilirsiniz. FIR filtreler yapısı gereği hep stabil filtrelerdir. Bu nedenle bir kararlılık analizi gerektirmeden kullanılabilirler. Ayrıca wiki sayfasını kesinlikle ziyaret etmenizi tavsiye ederim orada Matlab veya Octave kullanarak nasıl filtreyi tasarlayacağınız. Filtreyi nasıl kullanacağınız ve karakteristiğini nasıl görselleyebileceğinize kadar bir çok bilgi bulunmakta. Ziyaret etmek için tıklayın. Projenin github linkine buradan ulaşabilirsiniz. Arduino ile Performansı Örnek kod 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347/*This is a signal sum of 800 hz and 3.2 khz sine waveswhich sampled in 10khz and 32 of this samples are create a data array.(input signal) In this example input signal is filtered with 46 points fir filter. Filter is designed as low pass filter and filter coeficient calculated at Octave more info https://github.com/mozanunal/SimpleDSP/wiki/FIR */ #include \"simpleDSP_fir.h\" float coef[46]= &#123; 0.00113053589111100, 0.00101072486672204, 0.000468847235288906, 0.000603489038578611, -0.00208429064928862, -0.00340892103405782, -0.00362003403497889, -0.00179251511006564, 0.00229274890344763, 0.00758093034996730, 0.0117041456801663, 0.0117198866352666, 0.00550311571071171, -0.00673606239661105, -0.0215570909070923, -0.0326442238558300, -0.0325783280789586, -0.0155583311041979, 0.0199164513221244, 0.0695391190116097, 0.123656990515743, 0.169767912370886, 0.196291877716615, 0.196291877716615, 0.169767912370886, 0.123656990515743, 0.0695391190116097, 0.0199164513221244, -0.0155583311041979, -0.0325783280789586, -0.0326442238558300, -0.0215570909070923, -0.00673606239661105, 0.00550311571071171, 0.0117198866352666, 0.0117041456801663, 0.00758093034996730, 0.00229274890344763, -0.00179251511006564, -0.00362003403497889, -0.00340892103405782, -0.00208429064928862, -0.000603489038578611, 0.000468847235288906, 0.00101072486672204, 0.00113053589111100 &#125;; int input[255] = &#123; 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03 &#125;; FIR fir1; long startTime; long calcTime; void setup() &#123; Serial.begin(9600); initFIR(&amp;fir1, 46, coef); Serial.print(\"Initiliaze finished\"); for(int i = 0; i&lt;255; i++) &#123; startTime = micros(); float a ; a = filtFIR(&amp;fir1,input[i]); calcTime = micros()-startTime; Serial.println(a); Serial.print(\"Total calculation time: \"); Serial.println(calcTime); &#125; &#125; void loop() &#123; &#125;","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"DSP","slug":"Signal-Processing/DSP","permalink":"https://mozanunal.com/categories/Signal-Processing/DSP/"}],"tags":[{"name":"Arduino DSP","slug":"Arduino-DSP","permalink":"https://mozanunal.com/tags/Arduino-DSP/"},{"name":"Arduino FIR","slug":"Arduino-FIR","permalink":"https://mozanunal.com/tags/Arduino-FIR/"},{"name":"DSP","slug":"DSP","permalink":"https://mozanunal.com/tags/DSP/"},{"name":"FIR filtre","slug":"FIR-filtre","permalink":"https://mozanunal.com/tags/FIR-filtre/"},{"name":"FIR filtre dizayn","slug":"FIR-filtre-dizayn","permalink":"https://mozanunal.com/tags/FIR-filtre-dizayn/"},{"name":"İşaret işleme","slug":"Isaret-isleme","permalink":"https://mozanunal.com/tags/Isaret-isleme/"}]},{"title":"[TR] Multikopterler için otopilot yapmak","slug":"multikopterler-icin-otopilot-yapmak","date":"2017-02-07T20:55:00.000Z","updated":"2023-04-09T21:12:49.194Z","comments":true,"path":"2017/02/multikopterler-icin-otopilot-yapmak/","link":"","permalink":"https://mozanunal.com/2017/02/multikopterler-icin-otopilot-yapmak/","excerpt":"","text":"Merhaba arkadaşlar, Bugünkü yazımda geçen senelerde üzerinde uzun zaman harcadığım fakat tamamlayamadığım bir konu olan otopilot yapmak üzerine edindiğim tecrübeleri anlatmak istiyorum. Yazıya başlamadan önce bu çalışmaların tamamını beraber yaptığım Bahadır Gökçeaslan teşekkür etmeyi bir borç bilirim. Evet otopilot aslında benim anlatacağım bölüme kıyasla biraz fazla geniş bir kavram oldu. Zira malesef proje uçuş kontrolcüsü aşamalarında kaldı. Bir soru ile başlayalım. Bir uçuş kontrolcüsü nedir? Bir uçuş kontrolcüsü temel olarak havada uçan bir aracın yere göre açılarının istenilen şekilde olmasını sağlayan sensör ve hareketli mekanizmalar bütünüdür. Aslında yere göre açılarla sınırlamak çok mantıklı değil. Bir hava aracının yükseliğinin sabit olması veya istenilen hızda istenilen konumda kalmasını sağlamak da bunun işidir. Fakat bu projede, bir Quadcopter uçuş kontrolcüsü olarak tasarlanmış olan bu yapıda amaç quadcopterin yere göre açılarını kumandadan gelen girdilere göre kontrol etmekti. Peki bu IMU açılar nasıl kontrol edilir? Hepinizin bildiği gibi bi quadcopter yere itki veren 4 adet motordan oluşan bir mekanizma. Ama bir quadcopteri havada tutmak göründüğü kadar kolay değildir. Basit olarak yapılan işlem quadcopter motorlanının hızını istenilen açıda kalacak şekilde kontrol etmektir. Bunun için de 2 temel yapı kullanılır. IMU denen bu açıları ölçen sensörler ve PID denilen kontrol algoritması. Bu noktada eğer bu kavramlar tanıdık gelmediyse imu hakkındakı şu yazımı ve pid hakkındaki bu yazımı okumanızı tavsiye ederim. Kodu inceleyecek olursanız projemizi belli parçalara ayırmış durumdayız. Bu parçalar şunlardır: Kumandadan girdilerin alınması IMU açılarının güncellenmesi Girdi değerlerine ulaşmak için gerekli motor hızlarının pid algotirmasıyla hesaplanması Telemetri datasının yollanması Ben bu yazıda daha çok 3. madde üzerinde duracağım. Öncellikle bir eksende kontrolü ele alalım. Bir eksende kontrol için yapılması gereken işlem şöyledir: Imu üzerinden şuanki açı ve ve kumandadan o eksen için istenen açı alınır. ( Otopilotlu bir yapıda istenen açıyı, verilen koordinata gitmek için kendisi hesaplar. ) Şu anki açı hatası Geçmişteki açı hatası toplamı Gelecekte oluşabilecek açı hatası tahmini Üsteki 3’ü kullanılarak hedef açı için gerekli açısal hız bulunur. Şuanki açısal hız hatası Geçmişsteki açısal hız hatası toplamı Gelecekte oluşabilecek açısal hata Üsteki 3’ü kullanılarak o eksen için pıd çıktısı hesaplanmış olur. Bu şekilde bir eksenin kontrolü için 2 katlı pid işlemi uygulamak gereklidir. Peki 3 eksenin için nasıl bir çözüm kullanmak gerekir. Bunu anlatmak yerine şu 4 satır kodu buraya eklemek istiyorum. (output_ ile başlayanların ilgili eksen ile alakalı pıd çıkışı olduğunu varsayın. ) Bu iki satır sayesinde toplam 6 pid kontrolcüsünden oluşturulan hesaplamalar birleştirilir. Birleştirme esnasındaki işaretlerin mantığını siz de farketmişsinizdir. O eksen için pid etkisi negatif mi pozitif mi? Yani o motorun hızının artması o eksende ne yönde bir hareket sağlar. Evet son olarak bizim projemizden bahsedeyim. Ortalıkta uzun yıllardır açık kaynaklı otopilotlar var biz de bunun farkında olmamıza rağmen kendimizi geliştirmek amacıyla bu projeye başladık. Malesef test düzeneklerine ve projenin geliştirilmesine daha sonrasında zaman ayıramadık. Ama dediğim gibi bu konuyla alakalı değerli tecrübelere edindiğimizi düşünüyorum. Belki günün birinde tamamlarız.Yaptığımız çalışmaların tamamının linki: github.com/mozanunal/SimplePilot Genellikle arduino kütüphanelerini kullandığımız için bizim kodumuz performans açısından pek uygun olmadığını düşünüyorum. Ama şuradaki yazıda ardupilot kütüphanelerini kullanarak olayın temelini de anlatarak güzel bir yazı ortaya koymuş bir arkadaşımız var. Benzer şeyler yapmak isterseniz onu kod olarak da referans alabileceğinizi düşünüyorum. İncelemenizi tavsiye ederim. Tekrar görüşmek üzere… www.facebook.com/itunomwww.itunom.com","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Drone","slug":"Electronics/Drone","permalink":"https://mozanunal.com/categories/Electronics/Drone/"}],"tags":[{"name":"Hava Araçları","slug":"Hava-Araclari","permalink":"https://mozanunal.com/tags/Hava-Araclari/"},{"name":"Drone","slug":"Drone","permalink":"https://mozanunal.com/tags/Drone/"},{"name":"Multikopter uçuş prensibi","slug":"Multikopter-ucus-prensibi","permalink":"https://mozanunal.com/tags/Multikopter-ucus-prensibi/"},{"name":"Multikopterler için PID","slug":"Multikopterler-icin-PID","permalink":"https://mozanunal.com/tags/Multikopterler-icin-PID/"},{"name":"Otopilot","slug":"Otopilot","permalink":"https://mozanunal.com/tags/Otopilot/"},{"name":"SimplePilot","slug":"SimplePilot","permalink":"https://mozanunal.com/tags/SimplePilot/"}]},{"title":"[TR] SimpleDSP: Gömülü Sistemler için DSP Kütühanesi","slug":"simpledsp-gomulu-sistemler-icin-dsp","date":"2017-01-25T21:13:00.000Z","updated":"2023-01-18T11:16:34.259Z","comments":true,"path":"2017/01/simpledsp-gomulu-sistemler-icin-dsp/","link":"","permalink":"https://mozanunal.com/2017/01/simpledsp-gomulu-sistemler-icin-dsp/","excerpt":"","text":"Herkese Merhabalar, Bu yazımda gömülü sistemler için yazdığım sayısal isaret isleme kütüphanesini tanıtacağım. Kütüphanenin tamamını “C” kullanarak ve harici bir kütüphaneye bağlı kalmadan yazmayı planlıyorum. Böylece diğer mikrokontolcülerde de rahatça kullanılabilecek. Hatta bilgisayar programlarında bile kolayca eklenip derlenebilecek şekilde projeyi tamamlamak istiyorum. Bu kütüphane kapsamında çözüm sağlamak istediğim konular şunlardır. FFT ters FFT Hartley transform FIR filtre IIR filtre Basit “moving avarage”, “smoothing” filtreleri Ayrıca her fonksiyon için: Teorik olarak yapılan iş Deneme, ölçüm ve filtre katsayısı hesabı için gerekli Matlab veya Octave kodu. Farklı islemcilerle performansı Örnek Grafikler gibi kaynakları hazırlamayı planlıyorum. Proje tamamen açık kaynaklı olarak sürdürülecektir. Siz de github üzerinden projenin herhangi bir aşamasına katkıda bulunabilirsiniz. Projenin ismini “SimpleDSP” olarak seçtim. Çünkü yapmak istediğim olay Digital Signal Processing olayını gömülü ve gerçek zamanlı sistemlerde kolaylaştırmak ve projelerde basit bir şekilde eklenebilmesini sağlamak. Şu an itibariyle FFT ve ters FFT fonksiyonlarını yazdım arduino kütüphanesi haline getirdim ve örnek kodlarını oluşturdum. Bahsettiğim ayrıntılara aşağıdan ulaşabilirsiniz.https://github.com/mozanunal/SimpleDSP/wiki/FFT-IFFT","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"DSP","slug":"Signal-Processing/DSP","permalink":"https://mozanunal.com/categories/Signal-Processing/DSP/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"DSP","slug":"DSP","permalink":"https://mozanunal.com/tags/DSP/"},{"name":"Arduino FFT","slug":"Arduino-FFT","permalink":"https://mozanunal.com/tags/Arduino-FFT/"},{"name":"Inverse FFT","slug":"Inverse-FFT","permalink":"https://mozanunal.com/tags/Inverse-FFT/"},{"name":"SimpleDSP","slug":"SimpleDSP","permalink":"https://mozanunal.com/tags/SimpleDSP/"}]},{"title":"[TR] Eski Bilgisayar Güç Kaynağını Masaüstü Güç Kaynağına Çevirme","slug":"eski-bilgisayar-guc-kaynagn-masaustu","date":"2016-12-26T21:59:00.000Z","updated":"2023-01-18T11:16:34.254Z","comments":true,"path":"2016/12/eski-bilgisayar-guc-kaynagn-masaustu/","link":"","permalink":"https://mozanunal.com/2016/12/eski-bilgisayar-guc-kaynagn-masaustu/","excerpt":"Herkese Merhabalar,       Bugünkü yazımda nasıl eski bilgisayarınızdan kalan güç kaynağınızı elektronik projelerinizde kullanabileceğiniz güç kaynağına dönüştürebileceğinizi anlatacağım. Özellikle yüksek güç gerektiren projelerde farklı voltajlarda yüksek güç sağlayabilen bu güç kaynaklarının oldukça yararlı olabileceğini düşünüyorum. Hemen hemen herkesin de bir şekilde ıskartaya çıkmış bir bilgisayarı vardır. Eğer güç kaynağı sağlamsa sıfır maliyetle kendinize bir güç kaynağı edinmiş olursunuz.  \n","text":"Herkese Merhabalar, Bugünkü yazımda nasıl eski bilgisayarınızdan kalan güç kaynağınızı elektronik projelerinizde kullanabileceğiniz güç kaynağına dönüştürebileceğinizi anlatacağım. Özellikle yüksek güç gerektiren projelerde farklı voltajlarda yüksek güç sağlayabilen bu güç kaynaklarının oldukça yararlı olabileceğini düşünüyorum. Hemen hemen herkesin de bir şekilde ıskartaya çıkmış bir bilgisayarı vardır. Eğer güç kaynağı sağlamsa sıfır maliyetle kendinize bir güç kaynağı edinmiş olursunuz. Benim elimdeki güç kaynağının çıkışlarını aşağıdan görebilirsiniz. Eski bilgisayarımdan kalan 250 W bir güç kaynağı kendisi. Hali hazırda 3.3 V 5V 12 V ve -12 V çıkışları var. Farklı voltaj ihtiyaçlarına göre regülatörler veya akım koruma devreleri eklenerek güç kaynağı daha işlevsel hale getirilebilir. Tabi güç kaynağı bilgisayardan çıkarıldığı gibi direk çalışır halde olmuyor sanki bilgisara takılıymış gibi kandırmamız gerek. Bunun için de yeşil kabloyu toprağa çekmeliyiz. Ben o ikisini birbirine lehimledikten sonra bu bağlantıyı bir direnç ve led aracılığıyla 5V bağladım. Böylece hem güç kaynağını açık hale getirdim hem de gücün var olup olmadığının takibini yapabilmek için bir led eklemiş oldum. Bağlantı aşağıdaki fotoğraftaki gibi. Bu bağlantıyı yapdıktan sonra ucu açık kabloları güzelce yalıtmayı unutmayın. Tekrar görüşmek üzere..","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Analog","slug":"Electronics/Analog","permalink":"https://mozanunal.com/categories/Electronics/Analog/"}],"tags":[{"name":"ATX güç kaynağı","slug":"ATX-guc-kaynagi","permalink":"https://mozanunal.com/tags/ATX-guc-kaynagi/"},{"name":"DIY güç kaynağı","slug":"DIY-guc-kaynagi","permalink":"https://mozanunal.com/tags/DIY-guc-kaynagi/"}]},{"title":"[TR] DIY Bluetooth Speaker","slug":"diy-bluetooth-speaker","date":"2016-12-05T18:23:00.000Z","updated":"2023-01-18T11:16:34.253Z","comments":true,"path":"2016/12/diy-bluetooth-speaker/","link":"","permalink":"https://mozanunal.com/2016/12/diy-bluetooth-speaker/","excerpt":"","text":"Merhaba Arkadaşlar, Bu projemde nasıl elimizde kalan fazla hoparlörleri bluetooth speakera dönüştürebileceğinizden bahsedeceğim. Geçen yaz bir arkadaşımın 5 +1 ses sisteminin kuvvetlendirici kutusu yanmış böyle olunca da hoparlörler boşa çıkmış ben de bir projede kullanırım diyerek kenara ayırdım. Aklıma sonradan bunları bluetooth hoparlöre dönüştürmek geldi. Direk ses cihazı olarak görünen bluetooth ses alıcılarını araştırmaya başladım. Bir kaç model bulsam da yaklaşık 10 W olan bu hoparlörleri sürecek kadar güç çıkışı vermiyorlardı. Bu nedenle projeye bir de kuvvetlendirici ekledim. Kuvvetlendirici olarak PAM8610 seçtim. Kendisi bir class D güç kuvvetlendiricisi yani en verimli olanlarından. Yüksek verini sayesinde çok az enerji ısıya dönüşüyor ve soğutucu metal parçaya vb ihtiyaç duymuyor. Yaptığım proje ile bu hoparlörleri, bluetooth üzerinden ya da doğrudan kablo ile ses çıkışlarına bağlanabilecek duruma getirmiş oluyorum. Toparlamak gerekirse proje için gerekli malzemeler: 1 veya 2 adet hoparlör Pam8610 ses kuvvetlendirici Bluetooth ses alıcı 3.5 mm ses kablosu Breadboard güç kartı olarak satılan DC 12 v girişi olan, usb, 5v ve 3.3v çıkışı olan kartlardan. Hepsini içine koyacağımız kutu İlk olarak görüldüğü gibi PAM8610 üzerine bağlantıları yaptım. Direk ses jack’a lehimlemek hiç uygun bir yöntem olmasa da elimde dişisinden olmadığı için başka çarem yoktu. Projeyi yapmak isteyen arkadaşlara almalarını tavsiye ediyorum. Hoparlörlere bağlantı kablosu olarak da düz kablo kullandım. Bu nedenle elektriksel gürültüden etkilenebiliyor onları da en kısa zamanda değiştirmeyi planlıyorum. Ama yakınlarında bir PC adaptörü gibi yüksek elektriksel gürültü üreten şeyler olmadığı sürece ses kalitesi oldukça iyi. PAM8610 12 volt ile çalışıyor bu yüzden güç dağıtım kartının güç soketine doğrudan lehimledim. Yalnız bir ayrıntı var + terminali switchden sonraki yere lehimledim böylece sadece düğme ile kapatabiliyorum. Kutuyu kablolar için yanlarından deldim. Güç konnektörünü yukarı bakacak şekilde kutuya sabitledim bu sayede bluetooth ses alıcı direk olarak kutunun dışından usbye bağlayabileceğim. Yukarıda bahsettiğim bağlantı şekli. Ses kablosu doğrudan bluetooth modulüne gidiyor. Usb sadece güç vermek için kullanılıyor. Beslemek için gerekli 12V adaptör. Uygun güç konnektörlü olanlarından seçtim. Bahsettiğim hoparlörlerden 2 tanesi. Güçlendirici kartımız 15x2 W çıkış verebiliyor. Stereo için uygun. PAM8610 çıkışlarını Hoparlörleri evimde kullanmaya başladım bile… Yeni bir projede görüşmek üzere…","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Analog","slug":"Electronics/Analog","permalink":"https://mozanunal.com/categories/Electronics/Analog/"}],"tags":[{"name":"bluetooth speaker","slug":"bluetooth-speaker","permalink":"https://mozanunal.com/tags/bluetooth-speaker/"},{"name":"diy bluetooth speaker","slug":"diy-bluetooth-speaker","permalink":"https://mozanunal.com/tags/diy-bluetooth-speaker/"},{"name":"pam8610","slug":"pam8610","permalink":"https://mozanunal.com/tags/pam8610/"}]},{"title":"[TR] Rustik Ampul Gece Lambası Yapımı","slug":"rustik-ampul-gece-lambas-yapm","date":"2016-11-19T20:05:00.000Z","updated":"2023-01-18T11:16:34.258Z","comments":true,"path":"2016/11/rustik-ampul-gece-lambas-yapm/","link":"","permalink":"https://mozanunal.com/2016/11/rustik-ampul-gece-lambas-yapm/","excerpt":"","text":"Merhaba Arkadaşlar,Bu yazımda odam için yaptığım gece lambasından bahsedeceğim.Yazının başından belirtmek isterim projenin yapım aşamaları yüksek gerilimle uğraşmak gerektiriyor. Bu yüzden yeterli bilgi ve deneyimi olmayanlar için tehlikeli olabilir, kendilerinin denememelerini öneririm.Lambanın son hali aşağıdaki gibi devre temel olarak bi anahtar ve bir lambalar için dimmer düğmesinin devresini içeriyor. Gerekli ilk malzememiz rustik ampul. Benim ampulümün duyu e 27 ve full parlaklıkta kendisi 40w harcıyor. Bu yünden çıkardığı ışık açısından verimliliğinin çok kötü olduğunu söyleyebilirim fakat genelde aydınlatmadan ziyade dekorasyon amacıyla kullanılıyorlar. Lamba şebeke gerilimiyle çalışıyor yani güç kaynağı bildiğimiz şebeke gerilimi. Kutuyu dremel yardımıyle düğmeler ve duy için oydum. Aşağıdaki gibi bir lamba dimmerin devresini çıkardım ve potansiyometresi yassı potansiyometreydi onu harici kabloyla kutunun dışarısına çıkardım. Kabloların hepsinin lehimlerini ve vidalananların sağlanlığını kontrol ettim. Son olarak kutuyu kapatıp vidaladım. Dimmerin devresinin üzerinde aşırı akım sigortası da var bu da beni oluşabilecek tehlikeler için biraz rahatlattı. Projemizin son hali bu şekilde, soldaki düğmeden açıp kapanıyor sağdaki potansiyometre ile de lambanın parkalığı ayarlanıyor. Aşağıdaki videodan kullanımını görebilirsiniz. Tekrar görüşmek üzere…","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Analog","slug":"Electronics/Analog","permalink":"https://mozanunal.com/categories/Electronics/Analog/"}],"tags":[{"name":"Pwm","slug":"Pwm","permalink":"https://mozanunal.com/tags/Pwm/"},{"name":"Rustik Ampul","slug":"Rustik-Ampul","permalink":"https://mozanunal.com/tags/Rustik-Ampul/"}]},{"title":"[TR] STM32 Mikroişlemci Dünyasına Giriş","slug":"stm32-mikroislemci-dunyasna-giris","date":"2016-11-08T12:53:00.000Z","updated":"2023-01-18T11:16:34.259Z","comments":true,"path":"2016/11/stm32-mikroislemci-dunyasna-giris/","link":"","permalink":"https://mozanunal.com/2016/11/stm32-mikroislemci-dunyasna-giris/","excerpt":"","text":"Herkese Merhabalar,Bu yazımda yeni bir alana hızlıca bir giriş yapıyorum. Zaman zaman projelerimizde 8 bitlik atmel veya pic işlemcilerin beklentiyi karşılamadığı oluyor. Böyle durumlar için ST Microelectronics firmasının STM32 isimli 32 bitlik işlemcilerini önerebilirim. 32 Bit işlemciler için en çok kaynak bulanabilecek işlemci takip ettiğim kadarıyla. ST firması çoğu gelişitme aracını da ücretsiz olarak sağlıyor. Bu yazıda tanıtacağım kartlar Arm Cortex M3 mimarisi tabanlı geliştirme kartlarıdır. Peki bu çekirdeği neden seçtim? Bir cümleyle özetlemek gerekirse 8 bitlik islemcilere bariz üstünlük sağlayan ve projelerin pek çoğu için yeterli özelliklere sahip olan en uygun fiyatlı işlemci. Geliştirme kartı olmadan sadece işlemci 1 - 2 dolar gibi çok iyi bir fiyata sahip. Özelliklerine aşağıdan ulaşabilirsiniz. Evet özellikler güzel peki nereden nasıl başlarım diyorsanız size bir kaç önerim var.Bu girişi yapmak için gerekli malzemeler: STM32F103C8T6 geliştirme kartı Stlink (Ya da FTDI üzerinden de kod yükleyebilirsiniz ama debug yapılmıyor) Gerekli programlar: STM32CUBEMX SW4STM32 İlkönce malzemelerimizi inceleyelim: 32 bitlik arm işlemcilerin ortak özelliği genellikle çok pinli ve küçük olmaları. Bu nedenle genellikle yüzey montaj teknolojisiyle lehimleniyor. Bu yüzden eğer sabit bir tasarımınız yoksa geliştirme yapacaksanız pinlerin denemeler icin dışarı çıkarıldığı geliştirme kartları kullanmak zorundasınız. Bu kartlar sayesinde pinlere rahatça erişebilir, genellikle üzerinde bulunan regülator, RTC, USB soketleri ve JTAG soketlerinin imkanlarından yararlanabilirsiniz.Aşağıdaki linkten bendeki geliştirme kartının devre şemasına ulaşabilirsiniz. STM32F103C8T6 Geliştirme Kartıhttps://www.openimpulse.com/blog/wp-content/uploads/wpsc/downloadables/STM32F103C8T6-Schematic-Diagram.pdfhttps://www.openimpulse.com/blog/wp-content/uploads/wpsc/downloadables/STM32F103C8T6-ARM-Development-Board-Cortex-M3-Datasheet.pdfhttps://www.openimpulse.com/blog/wp-content/uploads/wpsc/downloadables/MINI-STM32-Schematic-Diagram.pdf Geliştirme kartının biraz anlatmam gerekirse: Ana işlemcisi STM32F103C8T6 modeli Arm Cortex M3 tabanlı bir işlemcisi var. Neredeyse bütün pinleri kolayca ulaşılabilmesi için geliştirme kartında dışarı çıkarılmış. Ayrıca bir tane 8 Mhz, bir tane de 32khz kristal bağlanmış. Usb pinleri de uygun koruma dirençleri takılarak bir usb konnektörüne bağlanmış. Buradan hem usb üzerinden güç verilebiliyor hem de uygun programla usb üzerinden bilgisayar ile haberleşebiliriz. 3 adet jumper var bunları farklı yerlere takarak usb bağlantısını kesebiliyoruz, boot0 ve boot1 pinlerini ayarlayabiliyoruz. Kolayca reset atabilmek için bir adet butonumuz var ve güç olduğuni göstermek için bir adet ledimiz var. 1. Adım : STM32CUBEMX Üzerinden Projenin OluşturulmasıSTM32CUBEMX ST firması tarafından geliştirilen görsel ayarlama programıdır. Bu program sayesinde işlemcimizi görsel olarak ayarlayabiliriz ve o ayarlara uygun projeyi farklı IDE seçenekleri için oluşturabiliriz. Oluşturulan projede HAL driver veya CMSIS kütüphanesi ayarlarıyla uğraşmamıza gerek kalmaz CubeMX hepsini projeye ekler. STM32F103C8T6 işlemcisi seçilir. Bizi karşalayan ekran böyle olacaktır. Buradan kullanmak istediğiniz “Çevresel Birimleri” seçip ayarlarını yapabiliriz. Örneğin Uart birimini aktifleştirip baud rate’ini 9600 olarak seçebiliriz. Hatta Uart RX için çalışan bir DMA interrupt’ı oluşturabiliriz. Üstelik sadece bir kaç tık ile. Geliştirme boardu datasheetinden alınan devre şeması. CubeMX ayarlarken burdan yararlanılır. Kristal bağlantıları uart ve usb bağlantıları aşağıdaki gibi ayarlanmıştır. Örneğin usb ayarları aşağıdaki gibi yapılabilir.https://www.st.com/content/st_com/en/products/development-tools/software-development-tools/stm32-software-development-tools/stm32-utilities/stsw-stm32102.html Usb kullanmak istediğimizde Clock sorunun olacağını CubeMX önceden tahmin ettiği için uyarı veriyor. Usbye göre clock ayarları aşağıdaki gibi yapılabilir. Her şey tamamlandığına göre artık projemizi oluşturabiliriz. Bunu ise sadece “Generate Project” buttonuna basarak ve devamında istediğimiz IDE seçerek yapıyoruz. Kendisi işlemcimize uygun paketleri indirip kuruyor ve projeyi oluşturuyor. 2. Adım : SW4STM32 IDE Üzerinden Programın Yazılması ve Karta YüklenmesiSonraki adım olarak yazılım geliştirilmesi ve kodun derlenip karta yüklenmesi veya debug edilmesi kalıyor. Ben bu aşamada SW4STM32 kullandım. Bunu kullanma sebebim açıkcası öğrenmek istemem. Çünkü bu IDE açık kaynak kodlu Eclipse IDE üzerine geliştirilmiş bir IDE ve CubeMX tarafından destekeleniyor. Alternafik olarak KEIL veya TRUE STUDIO da kullanabilirsiniz. IDE projenin import edilmesi de çok basit ayrıntılı olarak girmek istemiyorum aşağıdaki linkleri takip ederek projeyi bu IDE’ye yükleyip yazılımınızı geliştirmeye başlayabilirsiniz. https://www.openstm32.org/Importing+a+STCubeMX+generated+projecthttps://drive.google.com/file/d/0B5j__Lyt9ozbWVM2SWJxXzJ3NDA/view?usp=sharing Bugünlük yazım bu kadar, önerilerinizi veya sorunlarınızı paylaşabilirsiniz. Tekrar görüşmek üzere…","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Microcontrollers","slug":"Electronics/Microcontrollers","permalink":"https://mozanunal.com/categories/Electronics/Microcontrollers/"}],"tags":[{"name":"Arm cortex m3","slug":"Arm-cortex-m3","permalink":"https://mozanunal.com/tags/Arm-cortex-m3/"},{"name":"stm32","slug":"stm32","permalink":"https://mozanunal.com/tags/stm32/"},{"name":"stm32cubemx","slug":"stm32cubemx","permalink":"https://mozanunal.com/tags/stm32cubemx/"},{"name":"stm32f103c8t6","slug":"stm32f103c8t6","permalink":"https://mozanunal.com/tags/stm32f103c8t6/"}]},{"title":"[TR] Python için komple bir çözüm: Anaconda ","slug":"python-icin-komple-bir-cozum-anaconda","date":"2016-09-11T23:41:00.000Z","updated":"2023-01-18T11:16:34.258Z","comments":true,"path":"2016/09/python-icin-komple-bir-cozum-anaconda/","link":"","permalink":"https://mozanunal.com/2016/09/python-icin-komple-bir-cozum-anaconda/","excerpt":"Herkese Merhabalar,Bugünkü yazımda en sevdiğim programlama dillerinden biri olan pyhtondan bahsetmek istiyorum. Python son yıllarda popüleritesini iyice arttıran, özellikle bilimsel araştırmalarda sıklıkla kullanılan bir programlama dilidir. Neredeyse her konu hakkında python kütüphanesi bulmak mümkün. Linux ortamı altında gerekli kütüphaneleri yüklemek ve projenizde bu paketleri referanslamak inanılmaz kolay. Ayrıca python programları derlenmiyor yorumlanarak çalıştırılıyor. Bu saydığım son 2 özellik pythonu kullanması kolay ve geliştirmesi hızlı hale getiriyor. Bu yazıda asıl gündeme getireceğim konu python üzerinden veri bilimi ile uğraşanların işlerini kolaylaştırmak için geliştirilmiş bir “Enterprise”. İsmi Anaconda.","text":"Herkese Merhabalar,Bugünkü yazımda en sevdiğim programlama dillerinden biri olan pyhtondan bahsetmek istiyorum. Python son yıllarda popüleritesini iyice arttıran, özellikle bilimsel araştırmalarda sıklıkla kullanılan bir programlama dilidir. Neredeyse her konu hakkında python kütüphanesi bulmak mümkün. Linux ortamı altında gerekli kütüphaneleri yüklemek ve projenizde bu paketleri referanslamak inanılmaz kolay. Ayrıca python programları derlenmiyor yorumlanarak çalıştırılıyor. Bu saydığım son 2 özellik pythonu kullanması kolay ve geliştirmesi hızlı hale getiriyor. Bu yazıda asıl gündeme getireceğim konu python üzerinden veri bilimi ile uğraşanların işlerini kolaylaştırmak için geliştirilmiş bir “Enterprise”. İsmi Anaconda.Yüklediğiniz zaman veri işleme ve raporlama ile alakalı 100 paket doğrudan geliyor ayrıca 700 paket “conda” isimli paket yöneticisiyle kurulabiliyor. Aşağıdan linkine ulaşabilirsinizhttps://www.continuum.io/downloads Makine öğrenmesi, verilerin görsellenmesi, matematik kütüphaneleri, web frameworkleri, cloud servislerinin apilerini kullanmak için gerekli kütüphaneler, geliştirme ortamları, animasyon, 3d opengl…700 paket için sıralı tam listeye buradan ulaşabilirsiniz. Aşağıdaki 6 paket çok işinize yarayacaktır. Scipy sitesinden alıntı yaptım. Hepsi çok kullanılan kütüphaneler. Lineer cebir, veri inceleme, sinya işleme, basit regresyonlar falan çok geniş hepsinin içerikleri. Sympy çok kullanmadım ama sembolik matematik işleri için size belki gerekli olur diye onu da ekledim. NumPy, SciPy, Matplotlib, IPython, Sympy, Pandas Geliştirme ortamı olarak Jupyter notebook(IPython jupyterin eski adı)öneririm sanki not alır gibi kod yazıyorsunuz. Kaldığınız yerden devam ettırme programı adım adım çalıştırma çıktılarını dırek pdf yapabilme gibi baya güzel olayları var. Nasıl bir şey diye görmek isterseniz.https://nbviewer.jupyter.org/github/iminuit/iminuit/blob/master/tutorial/tutorial.ipynbBurada da daha fazla örnek varhttps://github.com/jupyter/jupyter/wiki/a-gallery-of-interesting-jupyter-notebooks#signal-and-sound-processingŞu iki video da jupyter ve anacondanın kullanımı için inceleyebilirsiniz.https://www.youtube.com/watch?v=YJC6ldI3hWkhttps://www.youtube.com/watch?v=HW29067qVWkYazılı bir şey tercih ederseniz:https://medium.com/codingthesmartway-com-blog/getting-started-with-jupyter-notebook-for-python-4e7082bd5d46","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"python","slug":"python","permalink":"https://mozanunal.com/tags/python/"},{"name":"Anaconda","slug":"Anaconda","permalink":"https://mozanunal.com/tags/Anaconda/"},{"name":"Pyhton Kütüphaneleri","slug":"Pyhton-Kutuphaneleri","permalink":"https://mozanunal.com/tags/Pyhton-Kutuphaneleri/"},{"name":"bilimsel python uygulamaları","slug":"bilimsel-python-uygulamalari","permalink":"https://mozanunal.com/tags/bilimsel-python-uygulamalari/"},{"name":"jupyter notebook","slug":"jupyter-notebook","permalink":"https://mozanunal.com/tags/jupyter-notebook/"}]},{"title":"[TR] Açık Kaynak Yazılım Lisans Türleri ve Farkları","slug":"ack-kaynak-yazlm-lisans-turleri-ve","date":"2016-09-04T17:16:00.000Z","updated":"2023-01-18T11:16:34.251Z","comments":true,"path":"2016/09/ack-kaynak-yazlm-lisans-turleri-ve/","link":"","permalink":"https://mozanunal.com/2016/09/ack-kaynak-yazlm-lisans-turleri-ve/","excerpt":"","text":"Herkese Merhabalar, Yazılım dünyasında son zamanlarda artan bir “Açık Kaynak” çılgınlığı var. Hobi amaçlı bu işi yapanlardan bu konuyla alakalı en büyük şirketlere ve kuruluşlara kadar bir çok kişi veya kuruluş yazılımlarını “açık kaynaklı” olarak yayıyor. Peki bu yazılımları kullanmak istediğimiz veya kendi yazılımımızı açık kaynaklı olarak dağıtmak istediğimizde sınırlarımız ve sorumluluklarımız neler? İşte bu noktada açık kaynaklı yazılımların lisansları devreye giriyor. Bazıları bir çok şeyi serbest bırakırken, bazıları ticari projelerde kullanılmasına izin vermiyor, bazıları ise yazılımın değiştirilmesine olanak tanımıyor. İşte bu farklar ve sorumlulukları bu yazımda özetlemeye çalıştım. Sırayla popüler açık kaynak yazılım lisanslarını tek tek inceleyeceğiz. GNU AGPLv3 İzin Verilenler Ticari Kullanım Dağıtma Değiştirme Özel Kullanım Patent Kullanımı: bu lisans katkıda bulunanlara patent alma hakkı verir. Şartlar Kullandığınız yazılımı açık kaynaklı yapmak zorundasınız. Lisansın bir kopyasını kullanacağınız yerde bulundurmalısınız. Yazılım kullanılarak bir ağ servisi oluşturulursa da ilgili ağ servisini sağlayan yazılım açık kaynaklı olmalıdır. Yeni yazılım aynı lisansla veya uyumlu lisansla lisanslanmalıdır. Yazılımdaki değişiklikleri belirtmek zorundasınız. Sınırlamalar Yazılımın kullanılmasından dolayı ortaya çıkabilecek sorunlardan yazar sorumlu tutulamaz. Lisans metninin tamamına ve daha ayrıntılı bilgiye ulaşmak için tıklayınız. GNU GPLv3 İzin Verilenler Ticari Kullanım Dağıtma Değiştirme Özel Kullanım Patent Kullanımı: bu lisans katkıda bulunanlara patent alma hakkı verir. Şartlar Kullandığınız yazılımı açık kaynaklı yapmak zorundasınız. Lisansın bir kopyasını kullanacağınız yerde bulundurmalısınız. Yeni yazılım aynı lisansla veya uyumlu lisansla lisanslanmalıdır. Yazılımdaki değişiklikleri belirtmek zorundasınız. Sınırlamalar Yazılımın kullanılmasından dolayı ortaya çıkabilecek sorunlardan yazar sorumlu tutulamaz. Lisans metninin tamamına ve daha ayrıntılı bilgiye ulaşmak için tıklayınız. GNU LGPLv3 İzin Verilenler Ticari Kullanım Dağıtma Değiştirme Özel Kullanım Patent Kullanımı: bu lisans katkıda bulunanlara patent alma hakkı verir. Şartlar Kullandığınız yazılımı açık kaynaklı yapmak zorundasınız. Lisansın bir kopyasını kullanacağınız yerde bulundurmalısınız. Yeni yazılım aynı lisansla veya uyumlu lisansla lisanslanmalıdır. Yazılımdaki değişiklikleri belirtmek zorundasınız. Sınırlamalar Yazılımın kullanılmasından dolayı ortaya çıkabilecek sorunlardan yazar sorumlu tutulamaz. Lisans metninin tamamına ve daha ayrıntılı bilgiye ulaşmak için tıklayınız. MIT Licence İzin Verilenler Ticari Kullanım Dağıtma Değiştirme Özel Kullanım Şartlar Lisansın bir kopyasını kullanacağınız yerde bulundurmalısınız. Sınırlamalar Yazılımın kullanılmasından dolayı ortaya çıkabilecek sorunlardan yazar sorumlu tutulamaz. Lisans metninin tamamına ve daha ayrıntılı bilgiye ulaşmak için tıklayınız. Apache License 2.0 İzin Verilenler Ticari Kullanım Dağıtma Değiştirme Özel Kullanım Patent Kullanımı: bu lisans katkıda bulunanlara patent alma hakkı verir. Şartlar Lisansın bir kopyasını kullanacağınız yerde bulundurmalısınız. Yazılımdaki değişiklikleri belirtmek zorundasınız. Sınırlamalar Yazılımın kullanılmasından dolayı ortaya çıkabilecek sorunlardan yazar sorumlu tutulamaz. Marka Hakları (This license explicitly states that it does NOT grant you trademark rights, even though licenses without such a statement probably do not grant you any implicit trademark rights.) Lisans metninin tamamına ve daha ayrıntılı bilgiye ulaşmak için tıklayınız. Mozilla Public License 2.0 İzin Verilenler Ticari Kullanım Dağıtma Değiştirme Özel Kullanım Patent Kullanımı: Bu lisans katkıda bulunanlara patent alma hakkı verir. Şartlar Lisansın bir kopyasını kullanacağınız yerde bulundurmalısınız. Yazılımdaki değişiklikleri belirtmek zorundasınız. Yeni yazılım aynı lisansla veya uyumlu lisansla lisanslanmalıdır. Sınırlamalar Yazılımın kullanılmasından dolayı ortaya çıkabilecek sorunlardan yazar sorumlu tutulamaz. Marka Hakları (This license explicitly states that it does NOT grant you trademark rights, even though licenses without such a statement probably do not grant you any implicit trademark rights.) Lisans metninin tamamına ve daha ayrıntılı bilgiye ulaşmak için tıklayınız. Kaynak https://choosealicense.com/licenses/","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://mozanunal.com/tags/Linux/"},{"name":"apache lisansı","slug":"apache-lisansi","permalink":"https://mozanunal.com/tags/apache-lisansi/"},{"name":"Açık kaynak yazılım lisansları","slug":"Acik-kaynak-yazilim-lisanslari","permalink":"https://mozanunal.com/tags/Acik-kaynak-yazilim-lisanslari/"},{"name":"gpl lisansı","slug":"gpl-lisansi","permalink":"https://mozanunal.com/tags/gpl-lisansi/"},{"name":"Mit lisansı","slug":"Mit-lisansi","permalink":"https://mozanunal.com/tags/Mit-lisansi/"}]},{"title":"[TR] Pixhawk Otopilot ve Özellikleri","slug":"pixhawk-otopilot-ve-ozellikleri","date":"2016-09-01T11:26:00.000Z","updated":"2023-04-09T21:13:04.053Z","comments":true,"path":"2016/09/pixhawk-otopilot-ve-ozellikleri/","link":"","permalink":"https://mozanunal.com/2016/09/pixhawk-otopilot-ve-ozellikleri/","excerpt":"Herkese Merhabalar,        Uzun bir aradan sonra tekrar bir yazı hazırladım. Aslında bu yazıya çok önceden başlamıştım fakat devamını getirmemiştim şimdi tamamlayabildim ancak :). Evet bu yazımda Pixhawk isimli otopilottan bahsetmek istiyorum. Pixhawk açık kaynak kodlu Stm32 tabanlı yazılım tabanı olarak da ArduPilota dayanan bir otopilot modülü. Burada bir yorumda bulunmam gerekirse, açık kaynaklı otopilotlar arasında en başarılısı bana göre. Bu teorimi kanıtlamak için de hemen özelliklerine geçmek istiyorum.  ","text":"Herkese Merhabalar, Uzun bir aradan sonra tekrar bir yazı hazırladım. Aslında bu yazıya çok önceden başlamıştım fakat devamını getirmemiştim şimdi tamamlayabildim ancak :). Evet bu yazımda Pixhawk isimli otopilottan bahsetmek istiyorum. Pixhawk açık kaynak kodlu Stm32 tabanlı yazılım tabanı olarak da ArduPilota dayanan bir otopilot modülü. Burada bir yorumda bulunmam gerekirse, açık kaynaklı otopilotlar arasında en başarılısı bana göre. Bu teorimi kanıtlamak için de hemen özelliklerine geçmek istiyorum. Ana işlemcisi 32 bit Arm Cortex M4 tabanlı ST Microelectronic’in bir ürünü( STM32F427 Cortex M4 core with FPU). Bu işlemci “NuttX Real Time Operating System” ile kullanılıyor. 14 Adet PWM çıkışı bulunuyor.(Motor ve servomotor için) Bordunun üzerinde Uart I2C CAN gibi çevresel birimler bulunuyor. Bunlarla çalışan herhangi bir sönsör, kontrol elemanı kolayca eklenebilir. Durum belirtlme için çok renkli LED indicator üzerinde hazır geliyor. Sd kart desteği sayesinde uzun süre ve yüksek frekansta sensör verisini daha sonra incelemek için kaydedebiliyorsunuz. Kritik noktalardan biri olan uçuş için gerekli sensör gurbu şöyle: ST Micro L3GD20 3-axis 16-bit gyroscope ST Micro LSM303D 3-axis 14-bit accelerometer / magnetometer Invensense MPU 6000 3-axis accelerometer/gyroscope MEAS MS5611 barometer Spektrum DSM / DSM2 / DSM-X® Satellite, S.BUS uyumlu.(Kumanda haberleşmesi için) Güç sistemi özellikleri: Diyot kontrolcüsü “automatic failover” özelliğiyle birlikte 7 V yüksek akımlı servo çıkışları Tüm çıkışlar yüksek akım korumalı tüm girişlerinin de “Electro Static Discharge(ESD)” testleri yapılmış. STM32F103 failsafe co-processor olarak bulunuyor. Yani ana işlemcide bir sorun olursa operasyonlar bu yedek üzerinden devam ettirilebiliyor. Yazımın devamında Pixhawk’ın özgür dünyasını kullanarak yapılan uygulamalardan ve yapılabileceklerden bahsetmek istiyorum. Her türlü araç tipini (multikopter, helikopter, uçak, kara araçları….) destekliyor. Her türlü multikopter tipini (tricopter,quadcopter, hekzacopter, koaksiyelleri…) destekliyor. Optical flow, akım sensöü gibi başka otopilotlarda pek olmayan sensörleri destekliyor OSD çıkışı mevcut Oto paraşüt özelliği Gimbal kontrolü Antenna tracker desteği Phyton ile ile kodun ana kısmına hiç bakmadan harici bi görev uygulaması yazıp derleyip ekleyebilme Loglarını kullanarak resimlere “Geotag” yapabilme Pixhawk için yararlı linkler https://dev.px4.io/https://ardupilot.org/copter/https://ardupilot.org/copter/docs/common-table-of-contents.htmlÇoğu linkin alındığı anasayfa Donanımsal Kurulum linklerihttps://ardupilot.org/copter/docs/configuring-hardware.htmlmotor kurulumu, yerleşim dönme yönleri vb https://ardupilot.org/copter/docs/common-minim-osd-quick-installation-guide.htmlhttps://code.google.com/p/arducam-osd/wiki/minimosdOsd kurulum linkleri https://copter.ardupilot.com/wiki/common-telemetry-landingpage/Telemetri modül kurulum https://copter.ardupilot.com/wiki/common-px4flow-overview/Optical flow sensör kurulum https://copter.ardupilot.com/wiki/parachute/Oto paraşüt özelliği https://copter.ardupilot.com/wiki/common-servo/Uzaktan servo kontrolü https://copter.ardupilot.com/wiki/common-electro-permanent-magnet-gripper/Manyetik bırakma mekanizması https://copter.ardupilot.com/wiki/common-cameras-and-gimbals/Otopilot ile gimbal kontrolü https://copter.ardupilot.com/wiki/common-3d-mapping/3d maping https://ardupilot.org/copter/docs/common-antenna-tracking.htmlAntenna Tracking özelliğini kullanma https://ardupilot.org/copter/docs/common-powermodule-landingpage.htmlakım sensörü Otopilotun Kodunu değiştirmehttps://dev.px4.io/starting-building.html https://planner.ardupilot.com/wiki/common-geotagging-images-with-mission-planner/“Geotagged” resimler mission plannerla. Kurulum ve Ayarlar linkleri https://copter.ardupilot.com/wiki/flying-arducopter/ilk uçuş hakkında kapsamlı bilgi her başlığı incelemek gerekliaz çok gerekli bütün ayarların nasıl yapılacağı anlatılmış https://copter.ardupilot.com/wiki/arducopter-parameters/ayarlanabilecek tüm parametreler ve ne işe yaradıkları https://copter.ardupilot.com/wiki/failsafe-battery/battery failsafe https://copter.ardupilot.com/wiki/initial-setup/İlk uçuş kalibrasyonu https://planner.ardupilot.com/wiki/common-loading-firmware-onto-pixhawk/Pixhawk üzerine kodu yükleme https://ardupilot.org/copter/docs/common-compass-setup-advanced.htmlMagnometer calibration( Çok önemli!!!) https://planner.ardupilot.com/wiki/common-mission-planner-telemetry-logs/Waypoint yükleme https://www.qgroundcontrol.org/mavlink/startMavlink communication protocol https://dev.ardupilot.com/wiki/code-overview-adding-a-new-mavlink-message/Mavlink yeni mesaj oluşturma","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Drone","slug":"Electronics/Drone","permalink":"https://mozanunal.com/categories/Electronics/Drone/"}],"tags":[{"name":"Hava Araçları","slug":"Hava-Araclari","permalink":"https://mozanunal.com/tags/Hava-Araclari/"},{"name":"Otopilot","slug":"Otopilot","permalink":"https://mozanunal.com/tags/Otopilot/"},{"name":"Ardupilot","slug":"Ardupilot","permalink":"https://mozanunal.com/tags/Ardupilot/"},{"name":"Pixhawk","slug":"Pixhawk","permalink":"https://mozanunal.com/tags/Pixhawk/"}]},{"title":"[TR] WPF ile Ev Otomasyonu Arayüzü","slug":"wpf-ile-ev-otomasyonu-arayuzu","date":"2016-06-09T01:45:00.000Z","updated":"2023-04-09T21:02:57.223Z","comments":true,"path":"2016/06/wpf-ile-ev-otomasyonu-arayuzu/","link":"","permalink":"https://mozanunal.com/2016/06/wpf-ile-ev-otomasyonu-arayuzu/","excerpt":"","text":"Herkese Merhabalar,Bu yazımda .NET platformunun bir teknolojisi olan WPF kullanarak ev otomasyonu kontrol paneli yapmayı anlatacağım. Yaptığım bu projenin başlıca işlevi şudur; 5 farklı sensörden bulunulan ortamın sıcaklığı, nemi, zehirli gaz durumu, ortamda canlı olup olmadığı, ortamda yağış olup olmadığı Arduino yardımıyla alınır ve bu sensor dataları C# arayüzünde gösterilir. Eğer onay kutusu işaretlenirse istenmeyen bir durumda (gaz sızıntısı, eve hırsız girmesi, yağmur için kurulabilir.) program uyarı olarak girilen adrese bir adet mail gönderir.Projenin Arduino ve C# kaynak kodunu buradan indirebilirsiniz. Malzemeler Arduino DHT11 Nem ve Sıcaklık Sensörü MQ135 Gaz Sensörü Yağış Sensörü Röle Modulü PIR Sensörü ESP8266 Wifi Modulü Kutu Arduino Kodu Alternatif Arduino Kodu ESP8266 Kullanarak WPF Application Serialden Data Almayla Alakalı Fonksiyonlar Gelen Datayı Parçalara Ayırıp Görüntüleme Fonksiyonları Mail Gönderme Fonksiyonları Mail Gönderince Arayüzün Durumu","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"IoT","slug":"Electronics/IoT","permalink":"https://mozanunal.com/categories/Electronics/IoT/"}],"tags":[{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"C#","slug":"C","permalink":"https://mozanunal.com/tags/C/"},{"name":"ESP8266","slug":"ESP8266","permalink":"https://mozanunal.com/tags/ESP8266/"},{"name":"Meteoroloji İstasyonu","slug":"Meteoroloji-Istasyonu","permalink":"https://mozanunal.com/tags/Meteoroloji-Istasyonu/"}]},{"title":"PassFace: Face Recognition Using OpenCV","slug":"passface-face-recognition-using-opencv","date":"2016-06-04T16:50:00.000Z","updated":"2023-01-18T11:16:34.257Z","comments":true,"path":"2016/06/passface-face-recognition-using-opencv/","link":"","permalink":"https://mozanunal.com/2016/06/passface-face-recognition-using-opencv/","excerpt":"","text":"Hi,PassFace is a face recognizing program develop using EmguCV (OpenCV wrapper). It is possible to use 4 different algorithm and 3 different source(Camera, Video, Image) in this program. Most of the tryings have been made using LFW data set which have 13000 pictures of 1500 different people.Details of project can be reached below: Source Code: https://github.com/mozanunal/PassFace 1. IntroductionDefinition of the ProblemIn this project, a program is going to develop to recognize the faces and compare them the faces it learned and give the identity of the person. All this identifying system is going to work in real time. Main subjects in this project are image processing and machine learning. Project aim to develop some algorithm to detect faces specifically recognize the faces using pattern recognition algorithms. The number of faces and the equipment needed is going to be determined according to test of different algorithms. MotivationTo detect identity of person from images is very beneficial subject. It can provide easy access to users. It can be used for detect criminals and prevent potential crimes. Also I see this subject in a lot of industrial projects and academic researches. I want to work with real world problem and problem which is not completely solved. Therefore I decided to work with this project. Difficulties of ProblemMain difficulties can be sorted like below: Faces are not completely rigid objects so it is hard to recognize them. The more person in database needs more and more processing power. Blurry images because of real time system The effects of ambient light Changes in person’s face over time Data SetsAT&amp;T Facedatabase The AT&amp;T Face Database, sometimes also referred to as ORL Database of Faces, contains ten different images of each of 40 distinct subjects. For some subjects, the images were taken at different times, varying the lighting, facial expressions (open / closed eyes, smiling / not smiling) and facial details (glasses / no glasses). All the images were taken against a dark homogeneous background with the subjects in an upright, frontal position (with tolerance for some side movement). Yale Facedatabase A also known as Yalefaces. The AT&amp;T Face Database is good for initial tests, but it’s a fairly easy database. The Eigenfaces method already has a 97% recognition rate on it, so you won’t see any great improvements with other algorithms. The Yale Face Database A (also known as Yalefaces) is a more appropriate dataset for initial experiments, because the recognition problem is harder. The database consists of 15 people (14 male, 1 female) each with 11 grayscale images sized 320x243 pixel. There are changes in the light conditions (center light, left light, right light), facial expressions (happy, normal, sad, sleepy, surprised, wink) and glasses (glasses, no-glasses). Labeled Faces in the Wild A database of face photographs designed for studying the problem of unconstrained face recognition. The data set contains more than 13,000 images of faces collected from the web. Each face has been labeled with the name of the person pictured. 1680 of the people pictured have two or more distinct photos in the data set. The only constraint on these faces is that they were detected by the Viola-Jones face detector.. Programming Environment and LibrariesVisual Studio IDE is used for project. The program is written in C# using OpenCV libraries. 2. Face Recognition AlgorithmFace DetectionFace Detection is not the main subject of this project but to create database and to increase the face recognition performance. Opencv’s Haar Cascade Classifier function is used. In this function a haar cascade file ,which is pre learned for face detection, is used. Morphologic OperationsAmbient light and the movement at faces are the challenging problems in face recognition. Therefore some morphologic operators is applied to the faces to decrease the effect of these problems. In this project equalize histogram function of opencv is used to decrease the effect of the ambient light. SURF Feature Extractor 123456789101112131415161718192021222324if (comboBoxAlgorithm.Text == “SURF Feature Extractor”)&#123;string dataDirectory=Directory.GetCurrentDirectory()+”\\TrainedFaces”;string[] files = Directory.GetFiles(dataDirectory, “*.jpeg”, SearchOption.AllDirectories);foreach (var file in files)&#123; richTextBox1.Text += file.ToString(); long recpoints; ImagesampleImage = new Image(file); secondImageBox.Image = sampleImage; using (Image modelImage = sampleImage.Convert()) using (Image observedImage = image.Convert()) &#123; Image result = SurfRecognizer.Draw(modelImage, observedImage, out recpoints); //captureImageBox.Image = observedImage; if (recpoints &gt; 10) &#123; MCvFont f = new MCvFont(Emgu.CV.CvEnum.FONT.CV_FONT_HERSHEY_COMPLEX, 1.0, 1.0); result.Draw(“Person Recognited, Welcome”, ref f, new Point(40, 40), new Bgr(0, 255, 0)); ImageViewer.Show(result, String.Format(“ &#123;0&#125; Points Recognited”, recpoints)); &#125; &#125;&#125; Eigenfaces1234567891011121314else if (comboBoxAlgorithm.Text == \"EigenFaces\")&#123; //image._EqualizeHist(); if (eqHisChecked.Checked == true) &#123; image._EqualizeHist(); &#125; var result = eigenFaceRecognizer.Predict(image.Convert().Resize(100, 100, Emgu.CV.CvEnum.INTER.CV_INTER_CUBIC)); if (result.Label != -1) &#123; image.Draw(eigenlabels[result.Label].ToString(), ref font, new Point(face.X - 2, face.Y - 2), new Bgr(Color.LightGreen)); label6.Text = result.Distance.ToString(); &#125;&#125; Fisherfaces12345678910111213141516else if (comboBoxAlgorithm.Text == \"FisherFaces\")&#123; if (eqHisChecked.Checked == true) &#123; image._EqualizeHist(); &#125; var result = fisherFaceRecognizer.Predict(image.Convert().Resize(100, 100, Emgu.CV.CvEnum.INTER.CV_INTER_CUBIC)); if (result.Label != -1) &#123; image.Draw(fisherlabels[result.Label].ToString(), ref font, new Point(face.X - 2, face.Y - 2), new Bgr(Color.LightGreen)); label6.Text = result.Distance.ToString(); &#125;&#125; Local Binary Patterns Histograms12345678910111213else if (comboBoxAlgorithm.Text == \"LBPHFaces\")&#123; if (eqHisChecked.Checked == true) &#123; image._EqualizeHist(); &#125; var result = lbphFaceRecognizer.Predict(image.Convert().Resize(100, 100, Emgu.CV.CvEnum.INTER.CV_INTER_CUBIC)); if (result.Label != -1) &#123; image.Draw(lbphlabels[result.Label].ToString(), ref font, new Point(face.X - 2, face.Y - 2), new Bgr(Color.LightGreen)); label6.Text = result.Distance.ToString(); &#125;&#125; 3. PassFace InterfaceDatabase CreatorA database creator is developed to make easier to implement and try different algorithm. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115Add DataBase Functionprivate void addDatabaseButton_Click(object sender, EventArgs e)&#123; //Take time for save filename string fileName = textBox1.Text+\"_\"+DateTime.Now.Day.ToString() + \"-\" + DateTime.Now.Month.ToString() + \"-\" + DateTime.Now.Year.ToString() + \"-\" + DateTime.Now.Hour.ToString() + \"-\" + DateTime.Now.Minute.ToString()+\"-\" + DateTime.Now.Second.ToString()+\".jpeg\"; //First The faces in the Image is detected Image image = _capture.RetrieveBgrFrame().Resize(400, 300, Emgu.CV.CvEnum.INTER.CV_INTER_CUBIC); List faces = new List(); List eyes = new List(); long detectionTime; DetectFace.Detect(image, \"haarcascade_frontalface_default.xml\", \"haarcascade_eye.xml\", faces, eyes, out detectionTime); foreach (Rectangle face in faces) &#123; image.ROI = face; &#125; Directory.CreateDirectory(\"TrainedFaces\"); image.Resize(100, 100, Emgu.CV.CvEnum.INTER.CV_INTER_CUBIC).ToBitmap().Save(\"TrainedFaces\\\\\" + fileName);&#125;private void comboBoxAlgorithm_SelectedIndexChanged(object sender, EventArgs e)&#123; if (comboBoxAlgorithm.Text == \"EigenFaces\") &#123; try &#123; string dataDirectory = Directory.GetCurrentDirectory() + \"\\\\TrainedFaces\"; string[] files = Directory.GetFiles(dataDirectory, \"*.jpeg\", SearchOption.AllDirectories); eigenTrainedImageCounter = 0; foreach (var file in files) &#123; Image TrainedImage=new Image(file); if (eqHisChecked.Checked == true) &#123; TrainedImage._EqualizeHist(); &#125; eigenTrainingImages.Add(TrainedImage.Convert()); eigenlabels.Add(fileName(file)); eigenIntlabels.Add(eigenTrainedImageCounter); eigenTrainedImageCounter++; richTextBox1.Text += fileName(file)+\"\\n\"; &#125; eigenFaceRecognizer= new EigenFaceRecognizer(eigenTrainedImageCounter, 3000); eigenFaceRecognizer.Train(eigenTrainingImages.ToArray(), eigenIntlabels.ToArray()); &#125; catch (Exception ex) &#123; MessageBox.Show(ex.ToString()); MessageBox.Show(\"Nothing in binary database, please add at least a face(Simply train the prototype with the Add Face Button).\", \"Triained faces load\", MessageBoxButtons.OK, MessageBoxIcon.Exclamation); &#125; &#125; else if (comboBoxAlgorithm.Text == \"FisherFaces\") &#123; try &#123; string dataDirectory = Directory.GetCurrentDirectory() + \"\\\\TrainedFaces\"; string[] files = Directory.GetFiles(dataDirectory, \"*.jpeg\", SearchOption.AllDirectories); fisherTrainedImageCounter = 0; foreach (var file in files) &#123; Image TrainedImage = new Image(file); fisherTrainingImages.Add(TrainedImage.Convert()); if (eqHisChecked.Checked == true) &#123; TrainedImage._EqualizeHist(); &#125; fisherlabels.Add(fileName(file)); fisherIntlabels.Add(fisherTrainedImageCounter); fisherTrainedImageCounter++; richTextBox1.Text += fileName(file) + \"\\n\"; &#125; fisherFaceRecognizer = new FisherFaceRecognizer(fisherTrainedImageCounter, 3000); fisherFaceRecognizer.Train(fisherTrainingImages.ToArray(), fisherIntlabels.ToArray()); &#125; catch (Exception ex) &#123; MessageBox.Show(ex.ToString()); MessageBox.Show(\"Nothing in binary database, please add at least a face(Simply train the prototype with the Add Face Button).\", \"Triained faces load\", MessageBoxButtons.OK, MessageBoxIcon.Exclamation); &#125; &#125; else if (comboBoxAlgorithm.Text == \"LBPHFaces\") &#123; try &#123; string dataDirectory = Directory.GetCurrentDirectory() + \"\\\\TrainedFaces\"; string[] files = Directory.GetFiles(dataDirectory, \"*.jpeg\", SearchOption.AllDirectories); lbphTrainedImageCounter = 0; foreach (var file in files) &#123; Image TrainedImage = new Image(file); if (eqHisChecked.Checked == true) &#123; TrainedImage._EqualizeHist(); &#125; lbphTrainingImages.Add(TrainedImage.Convert()); lbphlabels.Add(fileName(file)); lbphIntlabels.Add(lbphTrainedImageCounter); lbphTrainedImageCounter++; richTextBox1.Text += fileName(file) + \"\\n\"; &#125; lbphFaceRecognizer = new LBPHFaceRecognizer(1, 8, 8, 8, 123.0); lbphFaceRecognizer.Train(lbphTrainingImages.ToArray(), lbphIntlabels.ToArray()); &#125; catch (Exception ex) &#123; MessageBox.Show(ex.ToString()); MessageBox.Show(\"Nothing in binary database, please add at least a face(Simply train the prototype with the Add Face Button).\", \"Triained faces load\", MessageBoxButtons.OK, MessageBoxIcon.Exclamation); &#125; &#125;&#125; User InterfaceAs a source camera, video, single image and multi image can be selected. Different source selection is developed using opencv and .net libraries. 4. Future of PassFace ProjectAlgorithm Accuracy AnalysisProgram designed for using different algorithms. But the comparison of these algorithms is not finished. The next step is implementing this algorithm the compare the algorithms accuracy and performance truly. Performance OptimizationsFor fix the performance problems, develop the program for multiple core CPUs. For better performance, develop the program to run over GPU using CUDA libraries. Algorithm OptimizationsIn these days, the most improved face recognition algorithms are using 3D face recognition technologies. It is based on; the 3D model of the faces are created using different 2D images. Therefore, the angle of looking and the direction of light are no longer be problem for these algorithms. The recognize operations are implementing using Neural Networks and Deep Learning Algorithms. It is planning to implement latest algorithms to increase accuracy in different conditions. 5. ConclusionIn this project, the main principles of the face recognition algorithms are learned. The performances and accuracies of the algorithms are compared. A gui application is developed to create database and process images using selected algorithm.","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"Image Processing","slug":"Signal-Processing/Image-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/Image-Processing/"}],"tags":[{"name":"Image Processing","slug":"Image-Processing","permalink":"https://mozanunal.com/tags/Image-Processing/"},{"name":"EmguCV","slug":"EmguCV","permalink":"https://mozanunal.com/tags/EmguCV/"},{"name":"opencv","slug":"opencv","permalink":"https://mozanunal.com/tags/opencv/"},{"name":"Eigenfaces","slug":"Eigenfaces","permalink":"https://mozanunal.com/tags/Eigenfaces/"},{"name":"Face recognition","slug":"Face-recognition","permalink":"https://mozanunal.com/tags/Face-recognition/"},{"name":"Fisgerfaces","slug":"Fisgerfaces","permalink":"https://mozanunal.com/tags/Fisgerfaces/"}]},{"title":"[TR] SimpleCV ile Görüntü İşlemeye Giriş","slug":"simplecv-ile-goruntu-islemeye-giris","date":"2016-05-01T17:23:00.000Z","updated":"2023-01-18T11:16:34.259Z","comments":true,"path":"2016/05/simplecv-ile-goruntu-islemeye-giris/","link":"","permalink":"https://mozanunal.com/2016/05/simplecv-ile-goruntu-islemeye-giris/","excerpt":"","text":"Herkese Merhabalar,Görüntü işleme hızla popülerleşen ve gittikçe daha fazla üzerine projeler geliştirilen ve hatta hayatımızda kullandığımız araç gereçlerde kullanılan bir alan olmaya başladı. Bu durumda bir sürü insan bu konu üzerine bir şeyler yapmak istiyor fakat daha kurulum aşamasında veya kaynak yetersizliğinden dolayı bu ilgilerinden vazgeçiyorlar. Bu sorun için önerebileceğim bir çözüm var. SimpleCV! https://simplecv.org/download/ SimpleCV görüntü işlemeyle alakalı paketlerin bir arada toplandığı bir python paketler bütünüdür. yukarıdaki linkten kurulum dosyasını indirip sadece bir kaç tık ile kurabilirsiniz.SimpleCV ile yüklediğimiz paketler ise şöyle: Görüldüğü gibi Python’un bile yüklü olmasına gerek yok ihtiyacımız olan tüm paketler bir kaç tık ile yükleniyor. Aşağıda basit bir SimpleCV kodu bulunmakta aynı zamanda aşağıdaki linklerden dökümantasyona ve örneklere bakabilirsiniz.https://simplecv.readthedocs.io/en/latest/https://examples.simplecv.org/en/latest/ SimpleCV fonksiyonları ve kullanımları: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338#Reading an imageImage(’lenna.png’)#Converting the image to RGB colorspaceimg.toRGB()#Converting the image to BGR colorspaceimg.toBGR()#Converting the image to HLS colorspaceimg.toHLS()#Converting the image to HSV colorspaceimg.toHSV()#Converting the image to XYZ colorspaceimg.toXYZ()#Converting the image to GRAY colorspaceimg.toGray()#Create a new, empty OpenCV bitmapimg.getEmpty(channels)#Full copy of the imageimg.copy()#Resize the imageimg.resize(x,y)#Invert imageimg.invert()#Horizontally mirror an imageimg.flipHorizontal()#Vertically mirror an imageimg.flipVertical()#Stretch filter on a greyscale imageimg.stretch(thresh low, thresh high)#Binary thresholdimg.binarize(thresh, maxv, blocksize, p)#Mean color of the imageimg.meanColor()#Finds the FeatureSet strongest corners firstimg.findCorners(maxnum, minquality, mindistance)#Blobs are continuous light regionsimg.findBlobs(threshval, minsize, maxsize, threshblocksize, threshconstant)#Finding the location of a known objectfindHaarFeatures(self, cascade, scale factor, min neighbors, use canny)#Uploading the Image to Imgur or Flickrimg.upload(dest,api key, api secret,verbose)#Smooth the imageimg.smooth(algorithm name, aperature, sigma, spatial sigma, grayscale)#Draw a circle on the Imageimg.drawCircle(ctr, rad, color, thickness)#Draw a lineimg.drawLine(pt1, pt2, color, thickness)#Size of imageimg.size()#Split the image into a series of image chunksimg.split(cols, rows)#Images of R,G,B channels are recombined into a single imageimg.mergeChannels(r,b,g)#Apply a color correction curve in HSL spaceimg.applyHLSCurve(hCurve, lCurve, sCurve)#Apply a color correction curve in RGB spaceimg.applyRGBCurve(rCurve, gCurve, bCurve)#Applies Intensity to all three color channelsimg.applyIntensityCurve(curve)#Returns Image of the stringimg.toString()#Split the channels of an image into RGBimg.splitChannels(grayscale)#Returns image representing the distance of each pixel from a given color tupleimg.colorDistance(color)#Apply morphological erosion to a imageimg.erode(iterations)#Apply morphological dilation to a imageimg.dilate(iterations)#Histogram equalization on the imageimg.equalize()#Applies erosion operation followed by a morphological dilationimg.morphOpen()#The difference between the morphological dilation andimg.morphGradient()#the morphological gradient 1D #histogram(numpy array) of intensity for pixels in the imageimg.histogram(numbins)#The histogram of the hue channel for the imageimg.hueHistogram(bins)#Returns the peak hue values histogram of huesimg.huePeaks(bins)#Add two imagesimg.add(other)#Subtract two images Or two imagesimg.sub(other) img. or (other)#Image division operation taking two images as inputimg.div(other)#Raises every array element in image array to a powerimg.pow(other)#Finds 2d and 1d barcodes in the imageimg.findBarcode(zxing path)#Finds line segments in the imageimg.findLines(threshold, minlinelength,maxlinegap, cannyth1, cannyth2)#Finds a chessboard within that imageimg.findChessboard(dimensions, subpixel)#Canny edge detection methodimg.edges(t1, t2)#function rotates an image around a specific pointimg.rotate(angle, fixed, point, scale)#return a shear-ed image from the cornerpointsimg.shear(cornerpoints)#Function for warp performs an affine rotationimg.transformPerspective(rotMatrix)#Returns the RGB value for a particular image pixelimg.getPixel(x, y)#Returns a single row of RGB values from the imageimg.getHorzScanline(row)#Returns a single column of gray values from the imagegetVertScanlineGray(column)#Returns a single row of gray values from the imagegetHorzScanlineGray(row)#Crops the image based on parametersimg.crop(x , y, w, h, centered)#Returns the selected region.img.regionSelect(x1, y1, x2, y2 )#Clears out the entire imageimg.clear()#Draws the string on the image at the specified coordinates.img.drawText(text , x , y , color, fontsize)#Draw a rectangle on the imageimg.drawRectangle(x,y,w,h,color,width,alpha)#Shows the current imageimg.show(type)#Push a new drawing layer onto the back of the layer stackimg.addDrawingLayer(layer)#Insert a new layer into the layer stack at the specified indeximg.insertDrawingLayer(layer, index)Remove a layer from the layer stack based on the layer’s indeximg.removeDrawingLayer(index)#Return a drawing layer based on the indeximg.getDrawingLayer(index)#Returns the gray value for a particular image pixelimg.getGrayPixel( x, y)#Returns a single column of RGB values from the imageimg.getVertScanline(column)#Remove all of the drawing layersimg.clearLayers()#Return the array of DrawingLayer objectsimg.layers()#Return all DrawingLayer objects as a single DrawingLayer.img.mergedLayers()#Render all of the layers onto the current imageimg.applyLayers(indicies)#automatically adjust image size to match the display sizeimg.adaptiveScale(resolution,fit=True)#Combine two images as a side by side imagesimg1.sideBySide(img2, side, scale)#Generate a binary mask of the image based on a range of rgb valuescreateBinaryMask(self,color1,color2)#Make the canvas larger but keep the image the same sizeimg.embiggen(size, color, pos)#The white areas of the mask will be kept and the black areas removedimg.applyBinaryMask(mask,bg color)#Generate a grayscale or binary mask image based either on a hue or an RGB tripletimg.createAlphaMask(hue, hue lb,hue ub)#Apply a function to every pixel and return the resultimg.applyPixelFunction(theFunc)#Calculate the integral image and return it as a numpy arrayimg.integralImage(tilted)#Convolution performs a shape change on an image.img.convolve(,kernel,center)#Function searches an image for a template imageimg.findTemplate(template image, threshold, method)#Return any text it can find using OCR on the imageimg.readText()#extract perfect circles from the imageimg.findCircle(canny,thresh,distance)#Attempts to perform automatic white balancingimg.whiteBalance(method)#Apply a LUT (look up table) to the pixels in a imageimg.applyLUT(rLUT,bLUT,gLUT)#Finds keypoints in an image and returns them as the raw keypointsimg. getRawKeypoints(thresh,flavor, highQuality, forceReset)#Method does a fast local approximate nearest neighbors (FLANN) calculation between two sets of feature vectorsimg. getFLANNMatches(sd,td#Calculates keypoints for both images, determines the keypoint correspondencesimg.drawKeypointMatches(template, thresh, minDist,width)#Match a template image with another image using SURF keypoints.img.findKeypointMatch(template, quality,minDist,minMatch)#This method finds keypoints in an image and returns them as a feature setimg.findKeypoints(min quality, flavor,highQuality)#Returns the colors in the palette of the imageimg.getPalette(bins,hue)#Takes in the palette from another image and attempts to apply it to this imageimg.rePalette(palette,hue)#returns the visual representation (swatches) of the palette in an imageimg.drawPaletteColors(size,horizontal,bins,hue)#The method then goes through and replaces each pixel with the centroid of the clutsters found by k-meansimg.palettize(bins,hue)#Palettization and behaves similar to the fndBlobsimg.findBlobsFromPalette(palette selection, minsize, maxsize)#Method uses the color palette to generate a binary imageimg.binarizeFromPalette(palette selection)#Returns the RAW DFT transform of an imageimg.rawDFTImage(grayscale)#Method applies a simple band pass DFT filterimg.bandPassFilter(xCutoffLow, xCutoffHigh, yCutoffLow, yCutoffHigh,grayscale)#Skeletonization of the image smartThreshold uses a methodimg.skeletonize(radius)#graph cut, to automagically generate a grayscale mask imageimg.smartThreshold(mask, rect)#It takes a image converts it to grayscale, and applies a thresholdimg.smartFindBlobs(mask,rect,thresh level)#This method is same as Paint bucket tool in image manipulation programimg.floodFill(points,tolerance,color,lower,upper,fixed range)#Returns Image where the values similar to the seed pixel have been replaced by the input colorimg.floodFillToMask(points,tolerance,color,lower,upper,fixed range,mask)#A featureset of blobs form the Mask Imageimg.findBlobsFromMask(mask,threshold, minsize, maxsize )#Returns the log value of the magnitude image of the DFT transformimg.getDFTLogMagnitude(grayscale)#Apply an arbitrary filter to the DFT of an imageimg.applyDFTFilter(flt,grayscale)#Applies a high pass DFT filterimg.highPassFilter(xCutoff,yCutoff,grayscale)#Applies a low pass DFT filterimg.lowPassFilter(xCutoff,yCutoff,grayscale)#InverseDFT(raw dft image) DFT is applied on image using gaussian lowpass filterimg.applyUnsharpMask(boost,dia,grayscale)#Performs an optical flow calculation and attempts to find motion between two subsequent framesimg.findMotion(previous frame, window, method, aggregate)#Creates a butterworth filter of 64x64 pixels, resizes it to fit the imageimg.applyButterworthFilter(dia, order,highpass,grayscale)#Creates a gaussian filter of 64x64 pixels, resizes it to fit imageimg.applyGaussianFilter(dia, highpass, grayscale)","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"Image Processing","slug":"Signal-Processing/Image-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/Image-Processing/"}],"tags":[{"name":"Image Processing","slug":"Image-Processing","permalink":"https://mozanunal.com/tags/Image-Processing/"},{"name":"SimpleCV","slug":"SimpleCV","permalink":"https://mozanunal.com/tags/SimpleCV/"}]},{"title":"[TR] Ayarlanabilir Taşınabilir Güç Kaynağı Yapımı","slug":"ayarlanabilir-tasnabilir-guc-kaynag-yapm","date":"2016-03-12T23:24:00.000Z","updated":"2023-01-18T11:16:34.252Z","comments":true,"path":"2016/03/ayarlanabilir-tasnabilir-guc-kaynag-yapm/","link":"","permalink":"https://mozanunal.com/2016/03/ayarlanabilir-tasnabilir-guc-kaynag-yapm/","excerpt":"Herkese Merhabalar,\nBugünkü yazımda nasıl basit bir şekilde bir powerbank’i ayarlanabilir güç kaynağına dönüştürebileceğimizden bahsedeceğim. Gerekli olan malzemeler sadece bir adet power bank ve bir adet MT3608 boost converter. Projeye başlamadan önce boost converter nedir ondan bahsetmek istiyorum. Boost converterlar voltaj yükseltmek için kullanılır. Kondansatör ve bobin ve diyot kullanarak bir switch yapısı kurarlar ve bu yapı ile hem voltajı yükseltirler hem de verimleri çok yüksek olur. Benim kulladığım modül MT3608 powerbankin pilinin çalışma voltaji olan 3.6 volt ile beslenebiliyor. 0 28 Volt arası 2 amper çıkış alınabiliyor. Verimi de yüzde 93 civarı. Projemize çok uygun yapıyor bu özellikler de onu. Hem de kısa devre koruması da var. Bu da güvenlik açısından da uygun hale getiriyor.  ","text":"Herkese Merhabalar, Bugünkü yazımda nasıl basit bir şekilde bir powerbank’i ayarlanabilir güç kaynağına dönüştürebileceğimizden bahsedeceğim. Gerekli olan malzemeler sadece bir adet power bank ve bir adet MT3608 boost converter. Projeye başlamadan önce boost converter nedir ondan bahsetmek istiyorum. Boost converterlar voltaj yükseltmek için kullanılır. Kondansatör ve bobin ve diyot kullanarak bir switch yapısı kurarlar ve bu yapı ile hem voltajı yükseltirler hem de verimleri çok yüksek olur. Benim kulladığım modül MT3608 powerbankin pilinin çalışma voltaji olan 3.6 volt ile beslenebiliyor. 0 28 Volt arası 2 amper çıkış alınabiliyor. Verimi de yüzde 93 civarı. Projemize çok uygun yapıyor bu özellikler de onu. Hem de kısa devre koruması da var. Bu da güvenlik açısından da uygun hale getiriyor. Yapımına geçersek; Bir power bankin icin açıyoruz ve pilin uçlarına mt3608in input pinlerini lehimliyoruz. Kabloları çıkarmak için bir delik açabiliriz. Mt3608 modulü kutunun dışında kalıyor onun çıkışına da 2 adet jumper lehimliyoruz. Bu sayede kolayca breadboard üzerinde falan kullanabiliriz. Modülün üzerindeki potansiyometreden çıkış voltajını ayarlıyoruz. Ve sonuç olarak kolayca cebimizde taşıyabileceğimiz bir güç kaynağımız olmuş oldu. Hem de telefonumuzu şarj etmeye de devam edebiliriz.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Analog","slug":"Electronics/Analog","permalink":"https://mozanunal.com/categories/Electronics/Analog/"}],"tags":[{"name":"Electronics Devreler ve Teorik Yazılar","slug":"Electronics-Devreler-ve-Teorik-Yazilar","permalink":"https://mozanunal.com/tags/Electronics-Devreler-ve-Teorik-Yazilar/"},{"name":"ayarlanabilor güç kaynağı","slug":"ayarlanabilor-guc-kaynagi","permalink":"https://mozanunal.com/tags/ayarlanabilor-guc-kaynagi/"},{"name":"mt3608","slug":"mt3608","permalink":"https://mozanunal.com/tags/mt3608/"}]},{"title":"[TR] Lazer Haberleşmesi","slug":"lazer-haberlesmesi","date":"2016-02-07T21:18:00.000Z","updated":"2023-01-18T11:16:34.256Z","comments":true,"path":"2016/02/lazer-haberlesmesi/","link":"","permalink":"https://mozanunal.com/2016/02/lazer-haberlesmesi/","excerpt":"","text":"Herkese Merhabalar, Son zamanlarda ışık ile veri aktarımına ilgi duymaktayım. Bu konuda bir şeyler geliştirmek istiyorum. Bunun ilk aşaması olarak lazer ile haberleşme projemi gerçekleştirdim. Bu projedeki amacım daha çok lazerin ve fotodiyotun cevap süresi ölçmek yani maximum aktarım hızını hesaplamaktı. Aynı zamanda farklı iletişim protokollerini denedim. İlerleyen projeler için lazerin de fotodiyotun da yetersiz olduğunu görmüş oldum. Daha hızlı fotodiyotlarla ve ledlerle denemelerim sürecek. Projenin bu aşamadaki haline gelirsek: Gönderici modül basitçe bir arduino ve bir lazerden oluşuyor. Bir transistör ile lazeri sürmeyi planlıyordum. Fakat lazer çok düşük akım çektiğini görünce doğrudan arduinoun pinine bağladım. Gönderici modül ise 1 fotodiot 1 direnç ve logic analyzerdan oluşuyor. Foto diyot üzerine düşen lazer ışığına göre 1 veya 0 çıktı veriyor. Bu çıktıları logic analyzer ile okuyup, istediğimiz iletişim protokolüne göre decode edebiliyoruz. Yukarıdaki çevre ışığının etkisini azaltmak için plastik bir kap ile kapatılmış hali. Aşağıdaki ise kapatılmadan önceki hali. Testimin sonuçları ise söyle: serial haberleşme ile maximum 19200 baud rate kadar güvenilir bir iletişim oldu. Manchester decoding kullanarak ise 38400 baudrate kadar haberleşebildim.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"Laser Haberleşme","slug":"Laser-Haberlesme","permalink":"https://mozanunal.com/tags/Laser-Haberlesme/"}]},{"title":"[TR] Süper Basit Manyetik Kitap Ayıracı","slug":"super-basit-manyetik-kitap-ayrac","date":"2016-02-05T00:49:00.000Z","updated":"2023-01-18T11:16:34.259Z","comments":true,"path":"2016/02/super-basit-manyetik-kitap-ayrac/","link":"","permalink":"https://mozanunal.com/2016/02/super-basit-manyetik-kitap-ayrac/","excerpt":"Herkese Merhabalar,Bugünkü yazımda nasıl çok basit bir şekilde manyetik kitap ayıracı yapabileceğimizden bahsedeceğim. Daha doğrusu yazımda değil yapımla alakalı kısa bir video hazırladım onu paylaşıyorum. Basitçe yapımı şöyle:  ","text":"Herkese Merhabalar,Bugünkü yazımda nasıl çok basit bir şekilde manyetik kitap ayıracı yapabileceğimizden bahsedeceğim. Daha doğrusu yazımda değil yapımla alakalı kısa bir video hazırladım onu paylaşıyorum. Basitçe yapımı şöyle: Buzdolabı manyetik stickerlarından birini alıyoruz ve ortadan ikiye makas ile ayırıyoruz. Kestiğimiz parçalara uygun bir deri parçası kesiyoruz. İki parça stickerı deriyi katladığımızda üst üste gelecek şekilde yapıştırıyoruz. Yapıştırıcı olarak deri ve kauçuk gibi maddeler için özel yapıştırıcılardan kullanabiliriz. Favori deseninizi çizip derinin de üzerine yapıştırabiliriz. Kitap ayıracımız kullanıma hazır.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"kitap ayıracı","slug":"kitap-ayiraci","permalink":"https://mozanunal.com/tags/kitap-ayiraci/"},{"name":"mıknatıslı","slug":"miknatisli","permalink":"https://mozanunal.com/tags/miknatisli/"}]},{"title":"[TR] İTÜNOM Takımı","slug":"itunom-takm","date":"2016-01-26T23:01:00.000Z","updated":"2023-04-09T21:12:41.541Z","comments":true,"path":"2016/01/itunom-takm/","link":"","permalink":"https://mozanunal.com/2016/01/itunom-takm/","excerpt":"Herkese Merhabalar,  \n2014 yılının Nisan ayında arkadaşlarımla beraber İstanbul Teknik Üniversitesi bünyesinde İTÜNOM Otonom Hava Araçları Takımını kurduk. 2 Senedir aktif olarak çalışmalarımıza devam ediyoruz. Amerikanın Maryland Eyaletinde düzenlenmekte olan Student Unmanned Air System yarışmasına 2015 yılında katıldık 2016 yılında da katılmak için hazırlanıyoruz.","text":"Herkese Merhabalar, 2014 yılının Nisan ayında arkadaşlarımla beraber İstanbul Teknik Üniversitesi bünyesinde İTÜNOM Otonom Hava Araçları Takımını kurduk. 2 Senedir aktif olarak çalışmalarımıza devam ediyoruz. Amerikanın Maryland Eyaletinde düzenlenmekte olan Student Unmanned Air System yarışmasına 2015 yılında katıldık 2016 yılında da katılmak için hazırlanıyoruz.Takımımızda şu an 10 kişiyiz. 3 adet uçak, 2 adet uzay, 2 adet elektronik, 2 adet bilgisayar, 1 adet kontrol mühendisliğinden üyemiz var. Özellikle multidisipliner bir takım olmayı tercih ettik. Bu sayede her üyemizin farklı bir uzmanlığı var ve kolayca farklı sistemleri tasarlayıp bir araya getirebiliyoruz.Takımımızın Sitesi: https://www.itunom.com/Facebook Sayfası: https://www.facebook.com/itunom Biraz çalışmalarımızdan bahsetmek istiyorum. Çalışmalarımız genel itibariyle multikopterler üzerine. Toplanması, mekanik ve elektriksel analizleri (İtki analizi ve uçuş sırasında anlık akım analizi). Yarışmadaki görevlerin gereklerinden biri de hedeflerin otonom olarak tespiti. Bu nedenle görüntü işleme uzun mesafe yüksek çözünürlüklü fotoğraf transferi gibi konulara da ağırlık veriyoruz. En son projemiz ise kendi otopilotumuzu geliştirmek şu an belli bir yere geldik ama bitmedi tamamen henüz. https://github.com/mozanunal/SimplePilot buradan takip edebilirsiniz. Açık kaynaklı bir proje. Yani uzun lafın kısası, boş zamanlarımızı verimli bir şekilde değerlendirmek isteyen bir grup İTÜ öğrencisiyiz. Biraz daha öznel olarak anlatmam gerekirse ben takımımızı bir aile gibi görüyorum. Genelde çalışmalarımızı derslerimizden sonra yapıyoruz. Çayımızı demleyip herkes kendi işini yapmaya çalışıyor. Takımımızın kendine özel bir dili oldu neredeyse… Atölyemizde çalışırken geçirdiğim zamanlar benim için gerçekten güzel zamanlar oluyor. Beraber bir şeyler öğreniyoruz, şakalaşıyoruz, eğleniyoruz. Zaman zaman sabaha kadar orada çalıştığımız oluyor. Karşılaştığımız bir sürü güçlüğü zorluğu hep beraber aştık. Hep beraber geçirdiğimiz iyi zamanlarımız, kötü zamanlarımız oldu. Son olarak, derslerinden, boş zamanlarından fedakarlık edip takımıza emek veren tüm arkadaşlarıma buradan tekrar teşekkür etmek istiyorum. İnanıyorum ki hep beraber daha bir sürü başarılara imza atacağız ama bu güzel arkadaşlıklarla ben emeklerimin karşılığını çoktan almış gibi hissediyorum. Bahsetmek istediğim bir diğer konu da şu: Takımımız çalışmalarını devam ettirebilmek için diğer öğrenci kulüpleri gibi sizlerin katkılarına ihtiyacı var. Bize yapabileceğiniz en küçük katkı bizi çok mutlu edecektir. Destek bulabileceğimiz yerlere bizi yönlendirebilir, ya da isterseniz kendiniz doğrudan paypal üzerinden veya banka hesabımıza katkıda bulunabilirsiniz.Hesap bilgileri için: https://blog.itunom.com/iletisim/ Ayrıntılı bilgi ve sorularınız için: mehmetozanunal@gmail.com","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Drone","slug":"Electronics/Drone","permalink":"https://mozanunal.com/categories/Electronics/Drone/"}],"tags":[{"name":"Drone","slug":"Drone","permalink":"https://mozanunal.com/tags/Drone/"},{"name":"ITUNOM","slug":"ITUNOM","permalink":"https://mozanunal.com/tags/ITUNOM/"},{"name":"İTÜNOM","slug":"ITUNOM","permalink":"https://mozanunal.com/tags/ITUNOM/"}]},{"title":"[TR] Star Wars BB-8 Robot Yapımı","slug":"star-wars-bb-8-robot-yapm-bolum-1","date":"2016-01-21T01:26:00.000Z","updated":"2023-01-18T11:16:34.259Z","comments":true,"path":"2016/01/star-wars-bb-8-robot-yapm-bolum-1/","link":"","permalink":"https://mozanunal.com/2016/01/star-wars-bb-8-robot-yapm-bolum-1/","excerpt":"Herkese Merhabalar,Bu seferki projem Star Warsa son film ile katılan BB-8 isimli droidin bir benzerini yapmak. Bu fikir aklıma nereden geldi derseniz. Son filmdeki en sempatik ve ilgi çekici karakterin BB-8 olduğunu düşünüyorum. Tabi ilk aklıma gelen nasıl çalıştığı… Farklı fikirler yürütürken kendimi bu droidi nasıl yaparım diye tasarımlar yaptığım bir projenin içinde buluverdim. Elle tutulur tasarımlar ortaya çıkmaya başlayınca malzemelerimi topladım ve projeye başladım. Proje oldukça uzun ve daha çok mekanik bir proje bu yüzden 2 parçaya ayırdım kalanını ne zaman bitiririm bilmiyorum. Şu an devam edemiyorum çünkü lipo pillerim bitti ve şarj aletini malesef istanbulda unutmuşum. Neyse projemize geçelim.  ","text":"Herkese Merhabalar,Bu seferki projem Star Warsa son film ile katılan BB-8 isimli droidin bir benzerini yapmak. Bu fikir aklıma nereden geldi derseniz. Son filmdeki en sempatik ve ilgi çekici karakterin BB-8 olduğunu düşünüyorum. Tabi ilk aklıma gelen nasıl çalıştığı… Farklı fikirler yürütürken kendimi bu droidi nasıl yaparım diye tasarımlar yaptığım bir projenin içinde buluverdim. Elle tutulur tasarımlar ortaya çıkmaya başlayınca malzemelerimi topladım ve projeye başladım. Proje oldukça uzun ve daha çok mekanik bir proje bu yüzden 2 parçaya ayırdım kalanını ne zaman bitiririm bilmiyorum. Şu an devam edemiyorum çünkü lipo pillerim bitti ve şarj aletini malesef istanbulda unutmuşum. Neyse projemize geçelim. Gerekli malzemeler 2 tane yüksek torklu, 1 tane daha düşük torklu 360 derece dönebilen servo, bir Arduino Nano, Bluetooth Modulü, Motor sürücü modüller bir Android Cep Telefonu kontrol için, mekanik kısım için kalın ataçlar ve bir adet dünya küre modeli (ana gövdemiz olarak). Kabaca planladığım mekanik dizayn aşağıdaki gibi. açıklamak gerekirse “artı” şeklindeki mekanizmamız droidin kontrol edildiği ve tüm motoların bulunduğu yer. Ana küreye sadece kenarlardan motorlar aracılığıyla bağlı alt kısmına ise bir ağırlık bağlı metal bir parça olabilir ama kesinlikle bir disk olmasını öneririm. Benim bağladığım parça stabiliteye hiç iyi etki etmedi. Bu ağırlık sayesinde yan motorlar döndüğünde ağırlığın dönmesi daha zor olduğundan dışarıdaki küre dönmeye başlıyor bu sayede robotumuz ilerliyor. Üçüncü bir motorumuz ise o ağırlığı kendi ekseni etrafında döndürüyor. Momentumun korunumundan ağırlık kendi ekseni etrafında dönmeye başladığı anda küremiz de ters yönde kendi etrafında dönüyor. Kafa için ise mıknatıs kullanmayı düşünüyorum ama onları bölüm 2’de anlatacağım. Projemin şu anki halinin kısa bir tanıtım videosu : Yapılışına geçecek olursak ilk önce model küremizi yerinden çıkarıp dışındaki harita kısmını soyuyoruz. Sonra ortadan ikiye ayırıyoruz. Maket bıçağı yardımıyla kolayca yapılabilecek bir işlem. 2 adet 360 derece dönebilen servomuzu delikli pertinanks üzerine sabitliyoruz. Sağlamlığından emin olmak için plastik kelepçe kullanabiliriz. Servonun uçlarına kalın bir atacı şekillendirip takıyoruz. Penseyle küre kenarına göre şekillendirip bant ve sıcak silikon kullanarak kürenin kenarlarına sabitliyoruz. Ben devremi küçük bir pertinanks üzerine lehimledim. Devrede 1 adet Arduino Nano, 1 adet Bluetooth Modulü (HC-06), 1 adet motor sürücü devresi (Servolardan birini kontrol etmek için gerekli oldu 360 derece dönmesi için modifiye edince) ve yanlardaki 2 adet servoya da doğrudan bağlantı var. Devremi sabitlemeden önce pertinanksın altına ağırlığı taşıyacak bu sefer daha küçük bir servo sabitledim. Sabitlemek için plastik kelepçe bant kullandım. Sonra da devremi yukarı sabitledim. Ağırlık olarak aşağıdaki kilit mekanizmasını kullandım ataç kullanarak onu alt taraftaki servoya monte ettim. Ama ağırlığımızın disk şeklinde olması gerekiyor sonraki versiyonda değiştireceğim. En son olarak pili de ekleyince kürenin içinin son görüntüsü aşağıdaki gibi oldu. Bundan sonra tek yapmam gereken kendi yazdığım android programını çalıştırıp küreyi kapatıp BB-8 Droidimizi denemek. Kodları ve Android programı 2. bölümde paylaşacağım. Tekrar görüşmek üzere.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"arduino servo kontrol","slug":"arduino-servo-kontrol","permalink":"https://mozanunal.com/tags/arduino-servo-kontrol/"},{"name":"bluetooth kontrol","slug":"bluetooth-kontrol","permalink":"https://mozanunal.com/tags/bluetooth-kontrol/"},{"name":"DIY BB-8 Droid","slug":"DIY-BB-8-Droid","permalink":"https://mozanunal.com/tags/DIY-BB-8-Droid/"},{"name":"Star Wars BB-8","slug":"Star-Wars-BB-8","permalink":"https://mozanunal.com/tags/Star-Wars-BB-8/"}]},{"title":"[TR] Web Tabanlı Programlar","slug":"web-tabanl-programlar","date":"2016-01-16T01:45:00.000Z","updated":"2023-01-18T11:16:34.260Z","comments":true,"path":"2016/01/web-tabanl-programlar/","link":"","permalink":"https://mozanunal.com/2016/01/web-tabanl-programlar/","excerpt":"","text":"Herkese Merhabalar,Bugünkü yazımda web tabanlı programlardan bahsetmek istiyorum. Web teknolojilerinin gelişmesiyle beraber browser tabanlı oldukça yararlı ve kullanımı da bir o kadar kolay programlar ortaya çıkmaya başladı. Hatta bunun bir üst aşaması olarak ChromeOS browser tabanlı bir işletim sistemi bile var. Ayrıca bu tarz programların projelerine dosyalarına her bilgisayardan ulaşabilmek, kurulum yapmadan bir çok şeyi halletme gibi avantajları da var. Böyle olunca ben de bu şekilde çalışan yararlı programları bir yazı altında toplamak istedim. Bilmediğim daha bir sürü program olduğuna eminim eğer bana yollayabilirseniz onları da yazıya ekleyebilirim. Scheme Ithttps://www.digikey.com/schemeit/ Devre şeması çizilebilen pcb tasarlanabilen programdır. Digikey tarafından geliştirilmektedir. Kayıt olmanıza bile gerek yok tıklayın ve devrenizi çizmeye başlayın. Codenvyhttps://codenvy.com/ Browser üzerinden kod yazıp yazdığınız kodları derleyebileceğiniz bulut tabanlı ide. Desteklediği programramlama dili yelpazesi ise oldukça geniş. 123D Circuitshttps://123d.circuits.io/ Elektronik devreler tasarlayıp simüle edip devreleriniz için PCB tasarlayabilirsiniz. Simülasyonlarınızda Arduino kullanabilirsiniz istediğiniz kodları da yüklemeniz mümkün. Programın kullanımı oldukça basit ve ciddi işler çıkarılabiliniyor. Autodesk firması tarafından geliştirilmekte olan bir program. Pixlrhttps://pixlr.com/editor/Browser üzerinden fotoğraf düzenleyebileceğiniz bir program. Kayıt bile olmadan direk kullanmaya başlayabiliyorsunuz. Codebenderhttps://codebender.cc/ Tarayıcı tabanlı Arduino IDE’sı kütüphane desteği ve kod paylaşımı yönünden çok iyi durumda. Kodunuzu yazıp kütüphanelerinizi online olarak ekleyip kodunuzu derleyip Arduino’ya yükleyebiliyorsunuz. C9https://c9.io/ Codenvy gibi bu da browser tabanlı bir IDE. Bir sürü programlama dili seçeneği mevcut. Designmantichttps://www.designmantic.com/Logo dizayn programı, çok geniş bir ayar yelpazesi sunuyor ve kullanımı çok basit. Afiş kartvizit dizaynı gibi seçenekleri var. Wolfram Alphahttps://www.wolframalpha.com/examples/ Bu site hakkında sayfalarca yazı hazırlanabilir sanırım. En başta matematik problemlerini çözmek için ortaya çıkmış site veri tabanını o kadar genişletti ki çözüm sunduğu şeyler buraya sığdıramayacağım kadar uzun. Görüntü işleme ile resimdeki nesnelerin tahmin edilmesinden, müzikten, alışverişten, yiyecek içeceğe varıncaya kadar geniş bir konuya yayılmış durumda. Bir çok bilimsel hesaplamayı kolayca yapabilir üstüne nasıl yapılacağını da buradan öğrenebilirsiniz. Üniversiteleri araştırıp eğitim kariyerinizi planlayabilirsiniz. Günlere göre döviz kurları verilerini erişip onları istediğiniz gibi işleyebilirsiniz. Şu anki favori sitelerimden biri. Biodigital Human 3Dhttps://human.biodigital.com/index.html Bu da oldukça etkileyici bir çalışma. Human 3D programı kapsamında insan vücudu en küçük kılcallarına kadar modellenmiş. İstediklerinizi seçip istediklerinizi kaldırıp katman katman inceleyebilmeniz mümkün. Bir sürü hastalık için de yazılar ve vücuttaki hangi bölgeleri etkilediğini gösteren animasyonlar oluşturulmuş. Ayrıca bir kaç tık ile örneğin kolun anatomisine ulaşıp her hangi bir kasın üzerine tıklayıp işlevine ulaşabilirsiniz. MIT App Invertorhttps://appinventor.mit.edu/explore/MIT App Inventor görsel programlama kullanarak Android programları yapmanıza yarayan bir sitedir. 5 dakika içerisinde android programınızı yapıp telefonunuza yükleyebilirsiniz. Arayüzü ve arkasındaki tüm kodu sürükle bırak ile tasarlıyorsunuz ama bu basitliği yapabileceklerinizi neredeyse hiç sınırlamıyor. Bir çok sorunuzu çözecek uygulamaları kolayca yapmanız mümkün. Talkyhttps://talky.io/ Basit video chart programı. Sadece bir kaç link paylaşarak kolayca beraber konuşmak mümkün. Draw.iohttps://www.draw.io/ Basit bir şema, flowchart, tablo çizme programı. Direk google drive veya dropbox üzerinden çalışılabiliyor. Kullanımı kolay aynı zamanda başarılı ve çok fazla çeşit çizimler yaratabileceğiniz bir program.","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"html5","slug":"html5","permalink":"https://mozanunal.com/tags/html5/"},{"name":"Web Tabanlı programlar","slug":"Web-Tabanli-programlar","permalink":"https://mozanunal.com/tags/Web-Tabanli-programlar/"}]},{"title":"[TR] RF Mesafe Hesaplama Exceli","slug":"rf-mesafe-hesaplama-exceli","date":"2016-01-02T02:34:00.000Z","updated":"2023-01-18T11:16:34.258Z","comments":true,"path":"2016/01/rf-mesafe-hesaplama-exceli/","link":"","permalink":"https://mozanunal.com/2016/01/rf-mesafe-hesaplama-exceli/","excerpt":"","text":"Merhaba Arkadaşlar, Bugünkü yazımda bir radyo modülünün teorik olarak ne kadar uzaklıkta çalışabildiğini hesaplayan projemi paylaşacağım. Amacım haberleşme modülleri seçilirken kolayca karşılaştırmalar yapılabilecek basit bir hesaplama ortamı oluşturmaktı. Bu tarz işler için en uygun program olduğunu düşündüğüm Excel programını kullandım. Öncelikle bu hesabı anlamama şuradaki link çok yardımcı oldu. Öncelikle onu incelemenizi tavsiye ederim. Oradaki bilgileri kısaca özetleyecek olursam: İlk olarak mesafeyi temel olarak etkilen 2 kavram var. Birincisi vericinin çıkış gücü, ikincisi ise alıcının alış hassasiyeti. Özellikle 2. etken sık sık önemi unutulan konulardan biri. Genelde aktarılan veri akış hızının artmasıyla alış hassasiyeti düşmektedir. Yeterli olacak minimum veri akış hızını seçmek de önemli noktalardan bir tanesidir. Çıkış gücüne anten ve kuvvetlendirici kazançları da eklenir. Bulunan bu değere toplam güç denir. Hesabımızı belirleyen bağıntı ise şöyledir: Alış Hassasiyeti &lt; Toplam güç – Yol Zayıflaması Kaybı Eğer burayı eşit olarak alırsak maksimum mesafeyi hesaplamış oluruz ama ideal ortam için hesaplarımızı yaptığımız için büyük bir hata payı koymanızı tavsiye ederim (gerçekçi sonuçlar için) Şimdilik ben bir hata payı eklemedim çünkü donanımdan ve kullanım şeklinden ve daha bir sürü şeyden çok değişebilir. Maksimum üzerinden devam edelim. Yol zayıflamasının maksimum değerini de aşağıdaki gibi elde etmiş oluruz. Toplam güç (dBm) - Alış hassasiyeti (dBm) = Yol Zayıflaması (dB) Yol zayıflamasını kullanarak mesafe ise aşağıdaki gibi hesaplanır. Yol Zayıflaması (dB) - 20.log10(Frekans, MHz) + 27.55 = 20.log10(Mesafe, Metre) Çok önemli uyarı: Yaptığımız bu hesapla ortaya çıkan sonuç en idael koşullar için geçerlidir. Neleri hesaba katmadığımızı şöyle sıralayabiliriz: Öncelikle yaptığımız hesap Line of sight mesafe hesabı aradaya girebilecek hiç bir engel hesaba katılmadı. ( Dağ, ağaç, direk,) Hesaplar boş uzay için yapıldı. Havanın etkisi ve hava olaylarının etkisi hiç hesaba katılmadı. Yakın frekanslardaki her sinyal mesafeyi kısaltıcı etki gösterecektir. Antenlerin yapısındaki hatalar, çevresindeki nesnelerin “radiation pattern” yapacağı gürültüler hesaba katılmadı Anten kablolarında meydana gelebilcek kayıplar hesaba katılmadı. Gördüğünüz gibi bu şartlar altında burada hesaplayacağınız mesafe gerçekte elde edeceğinizden çok daha uzun olacaktır (Deneyimlerimde 10da biri 20de biri gibi mesafelerle karşı karşıya kaldım). Ama bu exceli farklı modulleri kıyaslamak için kolaylıkla kullanabilirsiniz RF mesafe hesaplama excelinin buradan indirebilirsiniz.","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"DSP","slug":"Signal-Processing/DSP","permalink":"https://mozanunal.com/categories/Signal-Processing/DSP/"}],"tags":[{"name":"Software Defined Radio","slug":"Software-Defined-Radio","permalink":"https://mozanunal.com/tags/Software-Defined-Radio/"},{"name":"RF mesafe hesaplama","slug":"RF-mesafe-hesaplama","permalink":"https://mozanunal.com/tags/RF-mesafe-hesaplama/"}]},{"title":"[TR] 5$ Logic Analyzer","slug":"5-logic-analyzer","date":"2015-12-27T02:03:00.000Z","updated":"2023-01-18T11:16:34.250Z","comments":true,"path":"2015/12/5-logic-analyzer/","link":"","permalink":"https://mozanunal.com/2015/12/5-logic-analyzer/","excerpt":"Herkese Merhabalar,  \nBu yazımda 5 $ dolara aldığım Saleae marka logic analyzerın (aslında orjinal ürün değil aldığım, o ürünün klonu) incelemesini paylaşmak istiyorum. Bu ürünü seçmemin nedeni fiyat performans oranını çok beğenmem ve dijital elektronikle uğraşan herkesin vazgeçilmezlerinden biri olacağını düşünmem.  \n","text":"Herkese Merhabalar, Bu yazımda 5 $ dolara aldığım Saleae marka logic analyzerın (aslında orjinal ürün değil aldığım, o ürünün klonu) incelemesini paylaşmak istiyorum. Bu ürünü seçmemin nedeni fiyat performans oranını çok beğenmem ve dijital elektronikle uğraşan herkesin vazgeçilmezlerinden biri olacağını düşünmem. Öncelikle logic analzer nedir ile başlayalım. Logic analyzer, belli süre aralıklarında bir sinyali örnekleyerek oradaki sinyal seviyesinin binary olarak kaydedilmesini ve incelenebilmesini sağlayan alettir. Aynı zamanda bazılarında gelen bu binary verileri işleyip farklı protokoller kullanarak çözebilme özelliği vardır. Saleae Logic Anayzer’ın özelliklerini sayacak olursam şöyle: 25 Mhz maximum örnekleme hızına sahip 8 Kanal I2C, I2S, SPI, Serial, Paralel, Can, DMX-512, Manchester gibi protokolleri kolaylıkla çözebilirsiniz. Pulse analizleri için de büyük kolaylıklar var. Mesela otomatik frekans, pulse witdh hesaplama gibi. Boyutları oldukça küçük Arayüzü ve kullanımı çok basit Kullanımına gelecek olursak Buradan bilgisayarda kullanabileceğiniz arayüz programını indirebilirsiniz. Kurulum ve kullanımı da oldukça basit. Standart bir kurulum işlemi var. Kullandım için de almak istediğiniz örnekleme sayısı ve örnekleme frekansını arayüze giriyorsunuz. Analyzers ekmesinden istediğiniz protokolü de ekleyebilirsiniz. Sonrasın “Start Simulation” tuşuna basarak devam edebilirsiniz. Şimdilik anlatacaklarım bu kadar, tekrar görüşmek üzere…","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Microcontrollers","slug":"Electronics/Microcontrollers","permalink":"https://mozanunal.com/categories/Electronics/Microcontrollers/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Microcontrollers","slug":"Microcontrollers","permalink":"https://mozanunal.com/tags/Microcontrollers/"},{"name":"Saleae Logic Analzyer","slug":"Saleae-Logic-Analzyer","permalink":"https://mozanunal.com/tags/Saleae-Logic-Analzyer/"}]},{"title":"[TR] DIY RC Kumanda Yapımı","slug":"diy-rc-kumanda-yapm","date":"2015-11-15T12:30:00.000Z","updated":"2023-01-18T11:16:34.253Z","comments":true,"path":"2015/11/diy-rc-kumanda-yapm/","link":"","permalink":"https://mozanunal.com/2015/11/diy-rc-kumanda-yapm/","excerpt":"","text":"Herkese Merhabalar, Bu yazımda arduino kullanarak nasıl basit, ucuz ve işlevli bir RC kumanda yapabileceğimizi anlatacağım. Yapacağımız RC kumanda ile istediğiniz türde aracı, istediğiniz kadar kanalla kontrol etmeniz mümkün. Benim uygulamamda 2 adet 2 eksen joystick ve 1 potansiyometre bulunuyor. Yani 5 kanallı örnek bir uygulama yaptım. Öncelikle malzemelerden başlayalım. Arduino Nano Nrf24l01 1 adet 10k potansiyometre 1 adet 10k direnç 2 adet 2 eksen joystick modulü Bu malzemelerle beraber toplam maliyetimiz 7- 8 dolar civarı oluyor. Maximum kullanım mesafesi ise 30 40 metre civarında hobi uygulamarına göre oldukça yeterli bir mesafe elde ediyoruz. Bağlantılara gelecek olursak nrf24 modülü SPI ile çalışıyor. Arduino’nun uygun SPI pinlerine bağlıyoruz. Şemasını kolayca bulabilirsiniz. Joystick modulleri için de bir tanesi için 2 analog giriş olmak üzere Arduino Nanonun toplam 4 tane analog giriş pinin kullanıyoruz. Potansiyometrenin kullanımı için de 1 adet analog giriş pini kullanıyoruz. Kumandanın koduyla alakalı olarak değinmek istediğim bir kaç nokta var. Baştaki ayarlarda nrf ile ilgili ayarlar yapılıyor. Bu modülle alakalı bir kaç önemli nokta şöyle: Kanal seçimi çok önemli 2.4 ghz çok kullanılan bir frekans ve uygun kanal seçilmezse çok gürültü olabilir. Kanal taraması için arduino kodları var, doğru kanalı bulmak için onlardan yararlanabilirsiniz. Nrf24 modülü 3.3 volt ile çalışıyor. Fakat çektiği yüksek akım sebebiyle Arduino Nanonun 3.3 V pininden beslemesi biraz riskli. Onun yerine 5V pininin voltajını 2 diyot yardımıyle düşürüp öyle besledim. Harici bir regülatör bağlamak çok daha akla yatkın bir çözüm olacaktır tabi :) Payload size 10 olarak belirledim. Nedeni 5 adet integer verisi yollamam 2*5=10 byte göndermem gerekiyor. Normalde bir paket 32 byte fakat 10 byte ile sınırlandırarak rf modulünüzün performansını artırabilirsiniz. Başta belirlediğim ID sayesinde farklı birden fazla ID belirleyerek, birden fazla sayıda aracı kontrol edebilirsiniz. Max angle 12 veya datatosend[2]=-1(analogRead(3)-500)Max_angle/500; gibi satırlar tamamen kullanıma örnek olması amacıyla konmuştur. Yapmanız gereken sadece joysticklerden veya potansiyometreden aldığınız veriyi nasıl göndermek isterseniz o şekile çevirip “datatosend” array elemanlarına eşitlemektir. İstediğiniz türde aracı veya çok fazla farklı kanalı bu şekilde rahatça kontrol edebilirsiniz. Kumanda Kodu12345678910111213141516171819202122232425262728293031#include &lt;SPI.h&gt; #include &lt;RF24.h&gt; #include \"nRF24L01.h\" RF24 radio(7,8); int ID=1; int Max_angle=12; void setup() &#123; radio.begin(); radio.setPayloadSize(10); radio.setChannel(80); radio.openWritingPipe(0xF0F0F0F0F0); radio.openReadingPipe(1,0xF0F0F0F0AA); radio.startListening(); &#125; void loop() &#123; int datatosend[5]; datatosend[0]=ID; datatosend[1]=(analogRead(0)-500)*2; datatosend[2]=-1*(analogRead(3)-500)*Max_angle/500; datatosend[3]=(analogRead(4)-500)*Max_angle/500; datatosend[4]=-1*(analogRead(1)-500)*Max_angle/500; datatosend[5]=(analogRead(2)-500)*Max_angle/500; radio.stopListening(); radio.write( datatosend, sizeof(datatosend) ); radio.startListening(); delay(50); &#125; Aşağıdaki kod ise RC verilerini almak için gerekli fonksiyondur değiken boyutlarını ayarlayarak channel sayısını artırabilirsiniz. Tabi ki bu kodu kontrol edeceğiniz aracın koduna eklemeniz gerekmektedir. 123456789101112131415161718192021222324void Rc_Update() &#123; int incomingdata[6]=&#123;0,0,0,0,0,0&#125;; radio.read( incomingdata, sizeof(incomingdata) ); if(incomingdata[0]==ID) &#123; ch_1=incomingdata[1]; ch_2=incomingdata[2]; ch_3=incomingdata[3]; ch_4=incomingdata[4]; ch_5=incomingdata[5]; &#125; Serial.print(\"RC=\"); Serial.print(ch_1); Serial.print(\",\"); Serial.print(ch_2); Serial.print(\",\"); Serial.print(ch_3); Serial.print(\",\"); Serial.print(ch_4); Serial.print(\",\"); Serial.print(ch_5); Serial.println(); &#125;","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"Joystick","slug":"Joystick","permalink":"https://mozanunal.com/tags/Joystick/"},{"name":"Arduino RC kumanda","slug":"Arduino-RC-kumanda","permalink":"https://mozanunal.com/tags/Arduino-RC-kumanda/"},{"name":"NRF24L01","slug":"NRF24L01","permalink":"https://mozanunal.com/tags/NRF24L01/"}]},{"title":"[TR] 8051 Entegresi İle Assembly Programlamaya Giriş","slug":"8051-entegresi-ile-assembly","date":"2015-11-05T02:25:00.000Z","updated":"2023-01-18T11:16:34.250Z","comments":true,"path":"2015/11/8051-entegresi-ile-assembly/","link":"","permalink":"https://mozanunal.com/2015/11/8051-entegresi-ile-assembly/","excerpt":"Herkese Merhabalar,       Bu yazdımda ilk mikroişlemcilerden biri olan 8051 mikrokontrolcüsü üzerinden assembly dili ve mikroişlemci nedir nasıl çalışır bu konulara giriş yapmak istiyorum. Başlamadan önce benim de kullanacağım 8051 entegresi simülasyon programını önermek istiyorum. Programın ismi EdSim51. İlkönce mikroişlemcilerle alakalı temel bir kaç kavramla başlayalım.","text":"Herkese Merhabalar, Bu yazdımda ilk mikroişlemcilerden biri olan 8051 mikrokontrolcüsü üzerinden assembly dili ve mikroişlemci nedir nasıl çalışır bu konulara giriş yapmak istiyorum. Başlamadan önce benim de kullanacağım 8051 entegresi simülasyon programını önermek istiyorum. Programın ismi EdSim51. İlkönce mikroişlemcilerle alakalı temel bir kaç kavramla başlayalım.ROM(Read Only Memory): Temel olarak, belli bir miktarda bilginin kalıcı olarak yazıldığı bellektir. Bilgi saklamak içinEEPROM: ROM’un yeniden yazılabilir halidir.RAM(Random Access Memory): Bilgi saklamak için elektriğe ihtiyaç duyar. CPU veri işlemek için kullandığı bellek tipi RAM’dir.Registers: CPU registerları verileri geçici olarak saklamak için kullanılır. 8051 entegresinde bir tane data çeşidi vardır. O da 8 bittir. Eğer 8 bitten büyük datalarla işlem yapılmak istenirse data 8 bitlik parçalara ayrılmalıdır. 8051’de en çok kullanılar registerlar aşağıdaki gibidir. A (accumulator) : Lojik ve numeric işlemleri gerçekleştirmede kullanılır R0, R1, R2, R3, R4, R5, R6 : Genel amaçlı registerlar DTPR (data pointer) : low ve high olmak üzere 2 bytedan oluşur bu sayede 16 bitlik veri saklanır. PC (program counter) : Programın Kod hafızasındaki kaçıncı işlemde olduğunu tutar PSW (Program Status Word) : Aşağıda tekrar değineceğim Stack Pointer Register: Yine 8 bitlik stackin en üzerindeki adresi gösteren registerdır. 1.8051 Entegresi Bazı Assembly Komutları ve ÖrnekleriMOV Komutu:Bir registera veri yüklemek için kullanılır.Kullanımı şöyledir: MOV data yüklenecek register, yüklenecek data 1MOV A,#51H A registerına 51 hexadecimal sayısı yükleniştir.# Bir sayı olduğunu görtermek için kullanılmıştır.51 yüklenecek hexadecimal sayımız. Değeri 5x16+1=81H sayının hexadecimal olduğunu göstermek için kullanılır. Binary için B, Decimal için D kullanılır.Eğer hexadecimal sayısı harfle baslıyorsa başına 0 koyulur. Aşağıdaki kod grubunu çalıştırdığımızda simülasyon programımızın son görüntüsü aşağıdaki gibi olacaktır. 12345MOV A,#51H MOV R1,#0FFH MOV R2,#3BH Görüldüğü gibi R1 R2 ve Accummulatora veriler yüklenmiştir. ORG ve END KomutlarıOrg CPU’ya kaçıncı code memory satırıncan başlamısı gerektiğini söyleyen komuttur. Aşağıdaki gibi kullanılır.1234567 ORG 0H MOV R1,#31H MOV R2, 20H MOV R3,R2 MOV R4,R3 HERE: SJMP HERE END ADD Komutu Toplama komutudur kullanımı şöyledir.ADD Toplamın saklanacağı yer, eklenecek bilgiADD A,R1A=A+R1 olur.ADD R1, A olamaz. Toplamın saklanacağı yer hep Accumlator registeri olmalıdır. 12345ADD A, @R2 : R2 registerinin sakladığı adresteki ramde tutulan değer A&apos;ya eklenir ADD A, 05 : 05 adresindeki ramde tutulan değer A&apos;ya eklenir.ADD A, #05 : 05 sayısı A&apos;ya eklenir. Bazı toplamalarda sonuç 255den büyük çıkabilir. Bu durumda bir eldemiz olmuş olur. Peki 8051 bu durumla nasıl başa çıkıyor. PSW registerını kullanarak tabi ki: PSW Registerı8 bitlik bir registerdır. Her biri ayrı bir durumu tutar.CY (PSW.7): Carry Flag yani eldeyi tutan bit budur. CLR C komutu ile temizlenebilir.AC (PSW.6); Auxiliary Carry Flag D3 bitinden D4 bitine elde olduğunda 1 olan bittir.F0 (PSW.5 ve PSW.1); Kullanıcının kendi tanımlayacağı şeyler için ayrılmıştır.RS1 and RS0 (PSW.4 ve PSW.3): Register Bank değiştirmak için kullanılır.OV (PSW.2): Over flow flag’tir.P (PSW.0): Parity Flagtır. Accumulatordaki sayı tek ise 1, çift ise 0dır. SUBB komutuÇıkarma işlemi komutudur.SUBB A,BA=A-BMUL komutuÇarpım komutudur.MUL AB şeklinde kullanılır arada virgül yoktur. Sadece A ve B registerları kullanılabilir.A=A.B DIV komutuBölme komutudur.DIV AB şekilde kullnılır arada virgül yoktur. Sadece A ve B registerları kullanılabilir.A=A/B Loop ve Jump komutu Loop oluşturmak için kullanılan komutlar yukarıdaki gibidir. Hepsi farklı bir koşulu kullanmak içindir. Aşağıdaki örnek kod ise kullanımlarına örnektir. 12345678910111213 ORG 0H MOV A, #0 ; clear A MOV R1, #10 ; load counter R1 =10 AGAIN: ADD A, # 05 ; add five to register A DJNZ R1, AGAIN ; repeat until R1=0 (10 times) MOV R3, A ; save A in R3 END SJMP: Program counterdan en fazla yarım byte uzaklıklarda bulunan bir yere atlamak için kullanılır. LJMP: Program counterdan yarım bytedan fazla uzaklıklarda bulunan bir yere atlamak için kullanılır. LCALL: Fonksiyon tanımlayıp çağırmak benzeri bir kullanımı vardır. Aşağıdaki örneği inceleyebilirsiniz. 1234567891011121314 ORG 0H BACK : MOV A, #55H ; load A= 55 hex value MOV P1, A ; issue value of register A to port1 LCALL DELAY ; to call DELAY function created below MOV A, #0AAH ;load AAH hex value to A MOV P1,A ;issue value of register A to port 1 LCALL DELAY ; to call DELAY function as created below SJMP BACK ; keep doing this ; ________ this is the delay subroutine DELAY: MOV R5, #0FFH ; R5= 255 hex, the counter AGAIN: DJNZ R5, AGAIN ; stay here until R5 becomes zero RET ; return to caller END MOVX komutuMOVX komutu harici RAM’den veri alış verişi yapmak için kullanılır. 12MOV R0, #50H MOVX A, @R0 Bu iki satır kod ile harici RAM’deki 50H adresli yerdeki veri Accumulator registerına yüklenir. 12MOV DTPR, #5000H MOVX A, @DTPR DTPR registerı 16 bitliktir. Eğer 8 bitten büyük adresteki bir veriye ulaşılmak istenirse DTPR registerı kullanılabilir. POP ve PUSH komutuStack işlemleri için kullanılır. Stack ilk giren datanın en son çıktığı veri yapısı çeşididir. 123456MOV R6,#25H;MOV R1,#12H; MOV R4,#OF3H; PUSH 06H;PUSH 01H; POP 04H; Bu kod şöyle çalışacaktır. 25H sayısı (R6) stack’e eklenir. 12H sayısı stack’e eklenir. 12H sayısı stackten çıkarılır. XCH komutuXCH A, R2 şeklinde kullanılır. A ve R2nin içeriklerini değiştirir böyle kullanıldığında. MOVC komutu Harici RAM ve ROM kullanımı8051 ile harici ram veya romlar çalıştırılabilir. Bunun için öncelikle 8051 üzerindeki bazı pinlerin ne işe yaradığıyla başlayalım. ALE/PROG pini: Adress Latch Enable. Harici ram erişimi sırasında kullanılır. Mandallama işlevi vardır. PSEN pini: Program Store Enable. Harici program hafızasından veri okunacağı zaman kullanılır. Ayrıca harici rom veya epromlara OE giriş pini olarak da kullanılır. EA pini: External Adress. 0 olduğu zaman mikrokontrolcü program kodunu dışarıdan alabilir.RD pini: Okuma işlemini “enable” yapmak için kullanılır.WR pini: Yazma işlemini “enable “ yapmak için kullanılır. Harici Program Belleği Kullanımı Harici Veri Belleği Kullanımı Adres AyrıştırmaBazı durumlarda adres değerleri için yeterli bit sayısına sahip olunamayabilir. Bu soruları çözmek için adres çözücü devreler kullanılır. Paralel UygulamalarADC-DAC KullanımıTimer UygulamalarıUzun Lafın KısasıAşağıdaki 2 görsel işlemci mimarisini çok iyi açıklayan 2 şema peki bize ne anlatıyorlar. 8051 Entegresi Instruction SetAşağdaki linkte hepsini kullanım anlatımlarıyla beraber bulabilirsiniz. Aynı zaman da OP-Code’ları da verilmiştir. https://www.win.tue.nl/~aeb/comp/8051/set8051.html](https://www.win.tue.nl/~aeb/comp/8051/set8051.html) Aşağıdaki 2 resimde ise sık kullanılan komutları açıklamalarıyla bulabilirsiniz.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Microcontrollers","slug":"Electronics/Microcontrollers","permalink":"https://mozanunal.com/categories/Electronics/Microcontrollers/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Microcontrollers","slug":"Microcontrollers","permalink":"https://mozanunal.com/tags/Microcontrollers/"},{"name":"8051","slug":"8051","permalink":"https://mozanunal.com/tags/8051/"},{"name":"Arm cortex m3","slug":"Arm-cortex-m3","permalink":"https://mozanunal.com/tags/Arm-cortex-m3/"},{"name":"Assembly","slug":"Assembly","permalink":"https://mozanunal.com/tags/Assembly/"}]},{"title":"DIY Raspberry Pi Laptop","slug":"diy-raspberry-pi-laptop-16","date":"2015-10-04T22:06:00.000Z","updated":"2023-01-18T11:16:34.253Z","comments":true,"path":"2015/10/diy-raspberry-pi-laptop-16/","link":"","permalink":"https://mozanunal.com/2015/10/diy-raspberry-pi-laptop-16/","excerpt":"Hi,In this article, DIY Raspberry Pi Laptop project will be told. I needed a low cost mini computer with high mobility but then i decided to make my own and i start to this project. Most of the parts(expect Raspberry pi 2 and its some of materials) were bought from china and the total cost of this project is 110$. There is video of this project under this paragraph. You can watch this then you learn how i did this project step by step.  \n\n\n","text":"Hi,In this article, DIY Raspberry Pi Laptop project will be told. I needed a low cost mini computer with high mobility but then i decided to make my own and i start to this project. Most of the parts(expect Raspberry pi 2 and its some of materials) were bought from china and the total cost of this project is 110$. There is video of this project under this paragraph. You can watch this then you learn how i did this project step by step. 1. Raspberry Pi 2First, I want to start with Raspberry Pi 2. Raspberry pi is a mini computer that contains all the Pc compenents. Raspberry Pi 2 is the lastest version of it and it’s price is 35 $.2. Why Raspberry Pi Laptop? Raspberry pi 2 is a great platform for developing software but it is hard to find screen and keyboard everywhere. It decreases the portability of Raspberry Pi. In addition, it has a lot of input-output ports like 4 USB ports, 1 HDMI port. Third reason is low power consumption of Raspberry. The total power consumption of my system is 7.8 watt. It drains 650 mA from 3s lipo battery. 3. Materials and CostRaspberry Pi 2 35$4 Gb SD Cart 4$N070ICG-LD1 LCD Screen 45$HDMI Cable 3$Tablet Case with Keyboard 4$USB WIFI Adapter 5$LM2596 Regulater 2$1500 Mah 3S Lipo Battery 10$Mouse 2$1 Meter Cable Cover. 2$Total: 110$ Most of materials at the photo. I changed the battery after this photo. There are some of the materials below this photo. N070ICG-LD1 LCD Screen The price of the screen is 45$ and you can find screen at same size for 20$. I choice this screen because of its quality. Raspberry Pi 2 Tablet Cover with Keyboard 1 Meter Cable Cover The main mechanic parts of the laptop. The box build with this two. USB WIFI Adapter Its is for connecting to the internet Mini Usb Cable LM2596 Regulator Module LM2596 Regulator 1500 Mah 3S Lipo Battery Keyboard and earphones 4. Assembly Instructions 1. Before starting to the assembly. I build the circuit and test it. After different versions have been tried, finally the working prototype was reached. This is the schematic of the circuit. Basically, LCD screen works with 12 volt and the Raspberry Pi 2 works with 5 volt. Therefore the circuit needs a regulator. There is a switch to cut the power from the battery. When battery is charging, the battery must be switch off and the circuit can be used with DC in jack on the LCD Driver Board. It is a good solution for off battery times. 2. At second level Raspberry Pi 2, LCD Driver Board and lipo battery is mounted. A piece of cable cover is placed buttom side of the box. In this way, cable of the keyboard is left in the cable cover. 3. After the montage is completed, Some duck tape is added and the circuit was tried again. 4. After I am assured the circuit works cleanly, it is continued with box. Cable cover is cut according to HDMI cable and the sockets. 5. Heat sinks are placed on the SOC of the Raspberry Pi 2 and LCD driver board. I want to be sure about that will not have a overheat problem. 5. These two pieces are used for extending the audio output. In this way, audio outputs can be reach from outside of the box easily. 6. The cap of a box is cut according to screen cables and sockets. So we completed the most parts of the box of our laptop. 7. For good looking some duck tape is used. Low cost DIY Raspberry Pi Laptop is ready for usage. HDMI cable is reachable from outside of the box. Thus Raspberry Pi can be used with external screens or the screen can be used with other devices. The average current drain by the laptop is 700 mA and Lipo battery has 1500 mAh capacity. The laptop can be use for 2 hour with this battery. 5. Consequence Finally, we build a functional and simple laptop and it’s cost 110 dollars.The laptop is great for develop software for Raspberry Pi. By using Raspberry Pi, you jump into the open source world of the Linux and the big community of Raspberry Pi 2. See you later…","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"Raspberry Pi Laptop","slug":"Raspberry-Pi-Laptop","permalink":"https://mozanunal.com/tags/Raspberry-Pi-Laptop/"}]},{"title":"[TR] ESP8266 ile Kişisel Meteoroloji İstasyonu","slug":"esp8266-ile-kisisel-meteoroloji","date":"2015-09-29T23:51:00.000Z","updated":"2023-04-09T21:02:57.281Z","comments":true,"path":"2015/09/esp8266-ile-kisisel-meteoroloji/","link":"","permalink":"https://mozanunal.com/2015/09/esp8266-ile-kisisel-meteoroloji/","excerpt":"Herkese Merhabalar,\nBugünkü yazımda ESP8266 Wifi modülünün kullanımına yönelik yaptığım uygulamayı anlatacağım. Bu modülü daha önceki şu yazımda anlatmıştım. Ucuz fiyatına rağmen çok yetenekli bir modül. O yazımda ESP8266 Access Point olarak kullanılmıştı.Bu yazımdaki uygulamamda, hali hazırda var olan wifi ağına da bağlanabilecek. Bu sayede wifi olan yerlerde direk wifi üzerinden verilere ulaşılabilinirken, wifi çekmediği yerlerde ESP8266’nın kendi oluşturduğu Access Point üzerinden ulaşabilecek. Bilgilere istersek web browser üzerinden direk IP adresini yazarak, istersek aşağıda linkini verdiğim kendi yazdığım android programını kullanarak ulaşabileceğiz.  \nTemel olarak proje şu şekilde çalışıyor: ESP8266 gerekli ayarlarda başlatılır. Belli aralıklarla Sıcaklık- Nem, Yağış ve CO2 sensöründen veri alınır. Daha sonra ESP üzerinde oluşturulan http server güncellenir.","text":"Herkese Merhabalar, Bugünkü yazımda ESP8266 Wifi modülünün kullanımına yönelik yaptığım uygulamayı anlatacağım. Bu modülü daha önceki şu yazımda anlatmıştım. Ucuz fiyatına rağmen çok yetenekli bir modül. O yazımda ESP8266 Access Point olarak kullanılmıştı.Bu yazımdaki uygulamamda, hali hazırda var olan wifi ağına da bağlanabilecek. Bu sayede wifi olan yerlerde direk wifi üzerinden verilere ulaşılabilinirken, wifi çekmediği yerlerde ESP8266’nın kendi oluşturduğu Access Point üzerinden ulaşabilecek. Bilgilere istersek web browser üzerinden direk IP adresini yazarak, istersek aşağıda linkini verdiğim kendi yazdığım android programını kullanarak ulaşabileceğiz. Temel olarak proje şu şekilde çalışıyor: ESP8266 gerekli ayarlarda başlatılır. Belli aralıklarla Sıcaklık- Nem, Yağış ve CO2 sensöründen veri alınır. Daha sonra ESP üzerinde oluşturulan http server güncellenir. Kodlar Kodları ve gerekli 2 kütüphaneyi bu linkten indirebilirsiniz. Malzemeler ve Bağlantılar Arduino NanoDHT11 sıcaklık ve nem sensörüYağmur sensörüMQ135 Gaz sensörü3.3v-5v Logic ConventerESP82662 Adet Diyot ESP8266 3.3 volt ile çalışıyor fakat arduinonun pinleri 5 volt giriş çıkış veriyor. Bu sorunun çözmek için Logic Conventer kullandım. Arduino Nano’nun 3.3 Volt pininden çok yüksek güç çekilemiyor bu yüzden ESP8266’yı direk bu pinden besleyemedim onun yerine.5 volt pininden çıkış aldım araya 2 adet diyot bağladım. Diyotlar voltajı 0.7’şer volt düşüyor. Bu sayede ESP’nin üzerindeki voltaj 3.6 volt oluyor. Bu voltajda ESP sorunsuz çalıştı. Zaman sorunundan dolayı böyle pratik bir çözüm yaptım, benim tavsiyem uygun güç değerinde 3.3 volt bir regülatör almanızdır. DHT11-Arduino VCC-&gt; 5VGND-&gt; GNDOUT-&gt; D4 MQ135-Arduino VCC-&gt; 5VGND-&gt; GNDA0-&gt; A1 Yağmur Sensörü-Arduino VCC-&gt; 5VGND-&gt; GNDA0-&gt; A3 ESP8266 VCC-&gt;5 volt ama 2 diyot üzerindenGND-&gt; GNDRX-&gt; D11TX-&gt; D10CH_PD-&gt; 3.3 V Logic Conventer üzerinden Bu ekran alıntıları evimde hali hazırda varolan wifi bağlı iken aldığım verilere aittir. Android programını buradan indirebilirsiniz. ESP8266 wifi bulamadığı zaman kendi bağlantı noktası kurar ve o wifi üzerinden verileri alabiliriz. Bu ekran görüntüleri ise wifi olmadığı bir yerdeki kullanımına aittir. Kutunun Yapılışından Fotoğraflar İstasyona uygun kolay yapılabilecek bir kutu yapmaya karar verdim. Kutu gerekli idi çünkü yağmur sensörü yağmura temas etmeli fakat diğer sensörler ve arduino suyla temas etmemeli. Bir diğer sıkıntı ise gaz sensörünün gaz ölçümü için havayı ısıtması. Bu sensörün de sıcaklık sensöründen yalıtılması gereklidir. Bu sorunları çözmek için gaz sensörü kabın altında bıraktım bu sayede hem diğer sensörleri etkilemeyecek hem de yağmur yağarsa yağmurdan korunacak. Yağmur sensörü de kutunun üst tarafına monte ettim. Açıkca söylemek gerekirse kutum çok da güzel bir kutu olmadı ama benim deneme sürecim boyunca işimi görmeme yetti. Kutu konusunu geliştirmem gerektiğimin farkındayım ama :) Tekrar görüşmek üzere… Kullanımdan Fotoğraflar","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"IoT","slug":"Electronics/IoT","permalink":"https://mozanunal.com/categories/Electronics/IoT/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"Dht11","slug":"Dht11","permalink":"https://mozanunal.com/tags/Dht11/"},{"name":"ESP8266","slug":"ESP8266","permalink":"https://mozanunal.com/tags/ESP8266/"},{"name":"Html","slug":"Html","permalink":"https://mozanunal.com/tags/Html/"},{"name":"MQ135","slug":"MQ135","permalink":"https://mozanunal.com/tags/MQ135/"},{"name":"Yağış sensörü","slug":"Yagis-sensoru","permalink":"https://mozanunal.com/tags/Yagis-sensoru/"}]},{"title":"[TR] DIY Raspberry Pi Laptop","slug":"diy-raspberry-pi-laptop","date":"2015-09-16T22:20:00.000Z","updated":"2023-01-18T11:16:34.253Z","comments":true,"path":"2015/09/diy-raspberry-pi-laptop/","link":"","permalink":"https://mozanunal.com/2015/09/diy-raspberry-pi-laptop/","excerpt":"Herkese Merhabalar,       Bu yazımda Raspberry Pi 2 kartını kullanarak kendim için yaptığım laptop projesinden bahsetmek istiyorum. Kendime düşük maliyetli gündelik işlerimi halletmek için taşınabilir bir bilgisayar almaya karar vermiştim fakat neden kendim yapmak yerine satın alayım dedim ve bu projeye başladım. Malzemelerin çoğunu yurt dışından aldım ve bana toplam maliyeti 110$ kadar oldu.Projemin tanıtım videosunu izleyebilirsiniz. Yazının devamında ise Raspberry Pi laptopun yapılışını adım adım öğrenebilirsiniz.  \n\n\n","text":"Herkese Merhabalar, Bu yazımda Raspberry Pi 2 kartını kullanarak kendim için yaptığım laptop projesinden bahsetmek istiyorum. Kendime düşük maliyetli gündelik işlerimi halletmek için taşınabilir bir bilgisayar almaya karar vermiştim fakat neden kendim yapmak yerine satın alayım dedim ve bu projeye başladım. Malzemelerin çoğunu yurt dışından aldım ve bana toplam maliyeti 110$ kadar oldu.Projemin tanıtım videosunu izleyebilirsiniz. Yazının devamında ise Raspberry Pi laptopun yapılışını adım adım öğrenebilirsiniz. 1. Raspberry Pi Nedir? Öncelikle Raspberry Pi’dan bahsetmek istiyorum. Raspberry Pi tüm bilgisayar bileşenlerinin bir kartta toplandığı, düşük maliyetli mini bilgisayardır. Şu an itibariyle, en son Raspberry Pi 2 çıkmıştır ve satış fiyatı 35 dolardır.2. Neden Raspberry Pi Laptop? Raspberry pi yazılım geliştirmek için çok önemli bir portal fakat her zaman uygun ekran klavye bulmak zor ve Raspberry Pi’ın taşınabilirliğini azaltıyor. Ayrıca üzerinde 4 usb portu, Hdmi portu gibi giriş çıkış birimleri bulunması sayesinde laptop yapılmaya oldukça uygun durumda. 3. olarak düşük güç tüketiminden söz edebiliriz. Benim sistemimin toplam güç tüketimi 7,8 watt civarında. 3S lipo pilimden ekranla beraber yaklaşık 650 mA akım çekiyor.3. Malzemeler ve MaliyetRaspberry Pi 2 35$4 Gb SD Kart 4$N070ICG-LD1 LCD Ekran 45$HDMI Kablo 3$Klavyeli Tablet Kılıfı 4$USB WIFI Adaptörü 5$LM2596 Regülatör 2$1500 Mah 3S Lipo Pil 10$Fare 2$1 Metre Kablo Koruyucu 2$Toplam: 110$ Malzemelerin çoğuna yukarıdan bir bakış sadece pili değiştirdim bu fotoğraftan sonra. Aşağıda da malzemelerin bir kısmınının fotoğrafları vardır. N070ICG-LD1 LCD Ekran Ekranın fiyatı 45$ aynı boyutta 20$ da ekran bulabilirsiniz fakat ben yüksek çözünürlüklü bir ekranı tercih ettim. Nedeni ise laptopumu dizi izlemek için de kullanmayı planlamam. Beklediğimden çok çok daha iyi bir ekran çıktı açıkcası :) Raspberry Pi 2 Klavyeli Tablet Kılıfı 1 Metre Kablo Koruyucu Ana mekanik parçalarım bu ikisi oldukça uygun fiyata maloldu. Laptopumun mekanik kısmı basitçe bu tablet kılıfı ve kalo koruyucu ile üzerine yaptığım kutudan oluşuyor. USB WIFI Adaptörü Raspberry Pi uyumlu wifi adaptörü. Laptopumuzla internete girebilmemiz için. Mini Usb Kablosu LM2596 Regülatör Modulü LM2596 Regülatör Arka Tarafı 1500 Mah 3S Lipo Pil Tabi ki ses çıkışı için kulakık ve laptopumuzu kullanabilmemiz için fare. 4. Yapılış Aşamaları 1. Montaja başlamadan önce devremi kurdum ve test ettim. Farklı versiyonlar denedikten sonra çalışan prototipe ulaştıktan sonra devremi lehimledim. Devrenin son hali aşağıdaki gibidir. Basitçe açıklamak gerekirse; LCD ekran 12 volt ile çalışırken Raspberry Pi 2 5 volt ile çalışıyor bu yüzden Lm2596 regülatör modulünü kullanarak 12 voltluk voltajımız 5 volta ayarlanıyor. Pilden devreye gelen gücü kesmek için araya bir anahtar koydum. Batarya şarj olurken anahtarı kapatıyorum bu sayede bataryadan akım çekimiyor. Ayrıca anahtar iletimde değilken LCD Driver Boardın üzerindeki DC IN jakı kullnılarak da devremi besleyebiliyorum. Batarya bittiğinde kullanmak için oldukça güzel bir çözüm oldu. 2. Aşamada Raspberry Pi 2, LCD Driver Board ve Lipp pilin montajını gerçekleştirdim. Montaj için çift taraflı bant kullandım. Ayrıca daha sonra kutumuzun bir parçasını oluşturacak bir kablo koruyucu parçası alt tarafa yerleştirdim. Klavye kablosunu ve Pil anahtarını bu kablo koruyucunun içine yerleştirdim. 3. Montajlar tamamlanınca elemanlarının dizilişinin son hali aşağıdaki gibi oldu. Sağlamlaştırmak için duck tape ekledim ve devremin çalışıp çalışmadığını tekrar denedim. 4. Çalıştığından emin olduktan sonra kutu yapımına devam ettim Kablo koruyucu plastiği Hdmi kablosu ve soketlere uygun şekilde kestim. 5. Lcd Driver Boarddaki ve Raspberry Pi’daki çipler üzerine soğutucu metaller yerleştirdim. Kapalı kutuda kullanacağım için ısınma problemi olmaması konusunda emin olmaya istedim. 5. Ses çıkışını kutunun dışına çıkarmak için aşağıdaki gibi bir erkek bir dişi jak kullandım. Fakat daha basit bir yöntem olarak kısa kulaklık çoklayıcı kablolardan kullanabilirsiniz. Böylece birden fazla ses çıkışınız olur ve bunları lehimlemekle uğraşmanız gerekmez. 6. Plastik bir kutunun kapağını söküp soketlere ve ekranın kablosununa uyumlu olacak şekilde kestim. Üzerine de ekranı monte ettim. Böylece kutumuz tamamlanmış oldu. 7. Kutumuz neredeyse bitti güzel görüntü için malzemeleri siyah duck tape ile bantladım. Böylece projemiz bitmiş oldu. Düşük maliyetli DIY Raspberry Pi Laptopumuz kullanıma hazır. Hdmi kablo kutunun dışından dolaşarak LCD Driver Board’a giriyor. Kablonun ekrana girdiği ucu çıkarabiliyoruz bu sayede ekran başka Hdmi Av cihazlarla kullanılabiliyor. Ayrıca Raspberry Pi’dan çıkan Hdmi kabloyu da başka ekranlara televizyona bağlayabiliyoruz. Bu da laptopumuza daha fazla fonksiyonellik katıyor. Laptopun pilden çektiği ortalama akım aşağıda gözüktüğü gibi. 1500 mAh pil ile yaklaşık 2 saat kesintisiz kullanabiliyoruz. 5. Sonuç Evvet… Projemiz sol halini böylece almış oldu. 110 dolar gibi bir fiyata küçük fonksiyonel basit bir laptop elde etmiş olduk. Bir çoğunuz sorabilir biraz daha para ödeyerek bu boyutlarda bir android tableti neden tercih etmediniz diye. Açıkcası bazı alanlarda öyle bir tabletin daha işe yarar olacağını kabul ediyorum. Fakat benim Raspberry Pi üzerinde yazılım geliştirmem gerek ve bu bulabildiğim en etkili çözüm oldu. Böylece çok farklı amaçlar için Raspberry Pi kullanabiliyorum. Ayrıca Raspberry Pi 2’nin arkasındaki topluluk ve Linux’un özgür dünyasını kullanabildiğim bir laptop olması da çok büyük artılar benim için. Tekrar görüşmek üzere…","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"Raspberry Pi Laptop","slug":"Raspberry-Pi-Laptop","permalink":"https://mozanunal.com/tags/Raspberry-Pi-Laptop/"},{"name":"Raspberry Pi 2 Projeleri","slug":"Raspberry-Pi-2-Projeleri","permalink":"https://mozanunal.com/tags/Raspberry-Pi-2-Projeleri/"}]},{"title":"[TR] All Terrain Rover Version 2.0","slug":"all-terrain-rover-version-20","date":"2015-08-26T13:48:00.000Z","updated":"2023-01-18T11:16:34.251Z","comments":true,"path":"2015/08/all-terrain-rover-version-20/","link":"","permalink":"https://mozanunal.com/2015/08/all-terrain-rover-version-20/","excerpt":"","text":"Herkese Merhabalar, Bu yazımda eski bir robotumun 2. versiyonunu size tanıtmak istiyorum. Bu robotumun 1. versiyonunu daha önce yapmıştım. Yeni versiyonunda robotumuzun boyu neredeyse 2 katına çıktı. Santimetreye 5 kg tork verebilen, 360 dönebilmesi icin modifiye edilmiş servolar kullandim. Ağırlığı yaklaşık 300 gram bu sayede oldukca atik bir robot oldu. Geçen robota benzer tel+ silikon ayak sistemi kullandim. Aynı zamanda bazı yapisal yenilikler de var. Ana isketeleti oluşturan ataçları değiştirdim bu sayede çok daha dayanıklı oldu ve süspansiyon etkisi yaratacak şekilde büktüm. Silikon uçları ise naylon eldivenden parmaklar kesip onunla kapladım amacım sürtünmeyi arttırmaktı Geçen robottaki gibi ağırlık merkezi önüne doğru bu sayede yüksek tırmanma kabiliyetine sahip olmuş oluyor. Robot ters geldigi anda kendini düzeltme özelliğine sahip bunu da yine yüksek torklu motorlarına ve agırlık merkezine borçlu. Robotun elektronik kısmı için hala pek bir şey yapmadım. Bluetooth kontrollü veya wifi kontrollü yapmayı düşünüyorum. Şimdilik bir arduino var üzerinde ve motorların hızlarını kontrol edebiliyorum. Aşağıda projeden kısa bir tanıtım videosu bulabilirsiniz iyi seyirler.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"360 Servo","slug":"360-Servo","permalink":"https://mozanunal.com/tags/360-Servo/"},{"name":"All Terrain Rover","slug":"All-Terrain-Rover","permalink":"https://mozanunal.com/tags/All-Terrain-Rover/"},{"name":"Arduino Projeleri","slug":"Arduino-Projeleri","permalink":"https://mozanunal.com/tags/Arduino-Projeleri/"}]},{"title":"[TR] Fırçalı motorlar için ESC Yapımı","slug":"frcal-motorlar-icin-esc-yapm","date":"2015-08-19T15:42:00.000Z","updated":"2023-01-18T11:16:34.255Z","comments":true,"path":"2015/08/frcal-motorlar-icin-esc-yapm/","link":"","permalink":"https://mozanunal.com/2015/08/frcal-motorlar-icin-esc-yapm/","excerpt":"Herkese Merhabalar,  \nYapacağım bir proje için fırçalı bir motorun Arduino ile hızını kontrol etmem gerekiyordu. Bunun için elimdeki fırçalı motor için elektronik hız kontrolü yani ESC (Electronic Speed Control) yapmaya karar verdim.  \nÖncellikle kendi motorumun ve devrelerimin besleme gerilimi yazayım. Çünkü devre bu özelliklere göre dizayn edilecektir. Siz de kendi malzemelerinize ve voltajlarınıza göre kendi devrenizi dizayn edebilirsiniz. Benim elimdeki motoru besleme voltajım 7.4 volt ve motorun çektiği maximum akım 2 amperdir. Hız kontrolü için göndereceğim PWM sinyalinin genliği de (Arduinonun çalışma voltajı) 5 volttur. Bu şartlar altında devremi bir power mosfet ile tasarlamaya karar verdim. Mosfette var olması gereken özellikler 5 volt anahtarlamaya uygun rds ve Vgs özelliklerine sahip olması, üzerinden 2 amper akım rahatça geçebilmesidir. Bu nedenlerden dolayı ben IRL540N mosfetini seçtim. Kendisi bir logic mosfet bu sayede 5 volt gibi düşük bir Vgs voltajı ile devreyi anahtarlayabiliyor. Ayıca üzerinden 28 amper sıkıntısız geçebiliyor. Bu özellikleriyle projemiz için oldukça uygun. Datasheetine buradan ulaşabilirsiniz.","text":"Herkese Merhabalar, Yapacağım bir proje için fırçalı bir motorun Arduino ile hızını kontrol etmem gerekiyordu. Bunun için elimdeki fırçalı motor için elektronik hız kontrolü yani ESC (Electronic Speed Control) yapmaya karar verdim. Öncellikle kendi motorumun ve devrelerimin besleme gerilimi yazayım. Çünkü devre bu özelliklere göre dizayn edilecektir. Siz de kendi malzemelerinize ve voltajlarınıza göre kendi devrenizi dizayn edebilirsiniz. Benim elimdeki motoru besleme voltajım 7.4 volt ve motorun çektiği maximum akım 2 amperdir. Hız kontrolü için göndereceğim PWM sinyalinin genliği de (Arduinonun çalışma voltajı) 5 volttur. Bu şartlar altında devremi bir power mosfet ile tasarlamaya karar verdim. Mosfette var olması gereken özellikler 5 volt anahtarlamaya uygun rds ve Vgs özelliklerine sahip olması, üzerinden 2 amper akım rahatça geçebilmesidir. Bu nedenlerden dolayı ben IRL540N mosfetini seçtim. Kendisi bir logic mosfet bu sayede 5 volt gibi düşük bir Vgs voltajı ile devreyi anahtarlayabiliyor. Ayıca üzerinden 28 amper sıkıntısız geçebiliyor. Bu özellikleriyle projemiz için oldukça uygun. Datasheetine buradan ulaşabilirsiniz. Uygun mosfeti seçmek için LTSpice programı üzerinden simülasyon yapmam gerekti aşağıdan simülasyon devresi ve elde ettiğim grafikleri inceleyebilirsiniz. Şekildeki devrede V2 voltajı, arduinodan mosfeti sürmek için uygulanacak olan voltajı temsil etmektedir. O voltaj aralığında düzgün çalışıp çalışmayacağını anlamak için 0-5 volt aralığındaki bütün voltajlar uygulanarak yükümüz yani R2 üzerinden geçen akım takip edilmiştir. 2.2 volt ile rahatlıkla anahtarlama yapılmaktadır. Şekildeki gördüğümüz gibi PWM göndereceğimiz yerden 0 volt uygulandığında motorun üzerinden geçen akım sıfıra yakın iken, 5 volt gönderildiğinde motorumuz çalışıyor. Motorun arduino pini üzerinden kontrolü bu şekilde, fakat PWM kavramına yabancı iseniz hız kontrolünü nasıl yaptığımı anlamamış olabilirsiniz. PWM (Pulse Width Modulation) ,yani Sinyal Genişlik Modülasyonu, belli bir frekansta ve faklı genişliklerde bir dijital işarettir. Aşağıdaki şekilden inceleyebileceğiniz gibi farklı genişliklerde PWM sinyalleri uygulanarak motorun hız kontrolü sağlanır. Diyot mosfeti motorda indüklenecek ters akımdan dolayısıyla gerilimden kurtarmak için oraya konulmuştur. Ve son olarak yaptığım devrenin gerçek hayata geçirilmiş halini ve denenmesini aşağıda bulabilirsiniz. Tekrar görüşmek üzere…","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"Electronics Devreler ve Teorik Yazılar","slug":"Electronics-Devreler-ve-Teorik-Yazilar","permalink":"https://mozanunal.com/tags/Electronics-Devreler-ve-Teorik-Yazilar/"},{"name":"Hava Araçları","slug":"Hava-Araclari","permalink":"https://mozanunal.com/tags/Hava-Araclari/"},{"name":"ESC","slug":"ESC","permalink":"https://mozanunal.com/tags/ESC/"},{"name":"Fırçalı motor","slug":"Fircali-motor","permalink":"https://mozanunal.com/tags/Fircali-motor/"},{"name":"Fırçalı motor Arduino Hız Kontrolü","slug":"Fircali-motor-Arduino-Hiz-Kontrolu","permalink":"https://mozanunal.com/tags/Fircali-motor-Arduino-Hiz-Kontrolu/"}]},{"title":"[TR] Droid Script","slug":"droid-script","date":"2015-08-17T07:15:00.000Z","updated":"2023-01-18T11:16:34.253Z","comments":true,"path":"2015/08/droid-script/","link":"","permalink":"https://mozanunal.com/2015/08/droid-script/","excerpt":"Herkese Merhabalar,      Bugün size bir android uygulaması olan Droid Script uygulamasından bahsetmek istiyorum. Programa burayı tıklayarak ulaşabilirsiniz. Bu uygulama bana göre en iyi android uygulamasıdır. Droid Script java script tabanlı Android uygulama geliştirme uygulamasıdır. Bu program sayesinde android üzerinde android için kolayca uygulama geliştirebilirsiniz. Bunu yapabileceğiniz farklı uygulamalar bulabilmeniz mümkün. Droid Script ayıran özellikler ise şöyle sıralayabiliriz:  ","text":"Herkese Merhabalar, Bugün size bir android uygulaması olan Droid Script uygulamasından bahsetmek istiyorum. Programa burayı tıklayarak ulaşabilirsiniz. Bu uygulama bana göre en iyi android uygulamasıdır. Droid Script java script tabanlı Android uygulama geliştirme uygulamasıdır. Bu program sayesinde android üzerinde android için kolayca uygulama geliştirebilirsiniz. Bunu yapabileceğiniz farklı uygulamalar bulabilmeniz mümkün. Droid Script ayıran özellikler ise şöyle sıralayabiliriz: Çok gelişmiş program içi dokümantasyon (Programdan hiç çıkmadan dokümantasyon bölümünden bakarak uygulamalarınızı geliştirebilirsiniz ) Telefon donanımına kolay ulaşım (Gps, kamera, sensörler, bluetooth) Çok geniş örnek uygulama havuzu (Aklınıza gelebilecek her şeyin örneği var ve yine program içinden ulaşabiliyorsunuz.) Jqplot Canvgauge gibi Java Script kütüphanelerini uygulamalarınızda gömülü olarak kullanabilirsiniz.( Gerçek zamanlı sensör grafikleri çizdirebilir, çeşitli Gauge ekleyebilirsiniz.) Google Speech Recognition ve Google Text to Speech desteği WebGL sayesinde yüksek performanslı yüksek görsellikte oyun tasarımı Veri tabanı oluşturabilirsiniz. Web browser ve TCP UDP gibi network programlama desteği. Eğer telefon üzerinden geliştirmek istemiyorsanız Wifi aracılığıyla bilgisayarınızdaki browser üzerinden doğrudan bilgisayarınızda programınızı geliştirip tek tuş ile telefonunuzda deneyebilirsiniz. Kısacası, Android programlama asıl odaklandığınız nokta değilse fakat projelerinizde Android kullanmak istiyorsanız Droid Script tam aradığınız program. Fazla zaman ayırmadan istediğiniz uygulamayı geliştirmeniz mümkün. Örnekler Dokümentasyonu Kamera örnek uygulama Android içindeki geliştirme ortamı WebGL ile yapılmış Flappy Bird tarzı oyun Network uygulama örnekleri CanvGauge Kütüphanesi Kullanımı Dokümantasyonun içinden Browser tabanlı geliştirme ortamı","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"Android Programlama ve Oyun","slug":"Android-Programlama-ve-Oyun","permalink":"https://mozanunal.com/tags/Android-Programlama-ve-Oyun/"},{"name":"Android","slug":"Android","permalink":"https://mozanunal.com/tags/Android/"},{"name":"Android Programlama","slug":"Android-Programlama","permalink":"https://mozanunal.com/tags/Android-Programlama/"},{"name":"Droid Script","slug":"Droid-Script","permalink":"https://mozanunal.com/tags/Droid-Script/"},{"name":"JavaScriot","slug":"JavaScriot","permalink":"https://mozanunal.com/tags/JavaScriot/"}]},{"title":"[TR] Bataryalar için Sabit Akım Deşarj Devresi Yapımı","slug":"bataryalar-icin-sabit-akm-desarj","date":"2015-08-05T12:08:00.000Z","updated":"2023-01-18T11:16:34.252Z","comments":true,"path":"2015/08/bataryalar-icin-sabit-akm-desarj/","link":"","permalink":"https://mozanunal.com/2015/08/bataryalar-icin-sabit-akm-desarj/","excerpt":"","text":"Herkese Merhabalar, Batarya kapasite testi için çeşitli yöntemler geliştirilmiştir. Bunlardan ilk akıla geleni bataryanın uçlarına sabit direnç bağlayıp çekilen akım ve zaman üzerinden kapasite hesabı yapmaktır. Fakat bataryaların zamanla deşarj oldukça voltajı azalır bu da akımın değişmesine yol açacaktır. Bu sorunu çözmek için ise deşarj esnasında mümkün olduğunca çok voltaj örneklenerek anlık akım hesaplanıp interpolasyon yöntemleriyle kapasiteye ulaşılabilir. Fakat bu sıkıntıları aşmak için ikinci bir ölçüm yöntemi vardır; Sabit akım deşarj devresi. Sabit akım deşarj devresi bataryadan sabit akım çekerek deşarj olmasını sağlar. Bu sayede doğrudan akımın çekildiği toplam zaman tutularak pilin kapasitesi kolayca hesaplanır. Devremize geçecek olursak gerekli malzemeler; Irfz44N mosfet lt1001 ya da lm358 opamp 9 voltluk pil 0.5 volt en az 1W direnç 100k (büyüklüğü çok kritik değil) Diyot (benimkiyle aynı değerleri almak için 1N914) Devreyi açıklamak gerekirse; 9 voltluk pil opampı sürmek ve referans voltajını oluşturmak için kullanılır. R2 direnci ve diyot sayesinde referans gerilimi oluşturulur. Referans gerilimi R1direncinin voltajına eşit olur böylece Vref / R1 = I akımı mosfet üzerinden dolayısıyla bataryadan çekilen akım olmuş olur. Bu yüzden Vref gerilimi sabit olmalıdır ki akım da sabit olsun. Bir diyot üzerinden akım geçirirken (diyota göre değişmekle birlikte) üzerinde 0.7 civarı voltaj düşümü yaşanır. Üzerinden geçen akım değiştikçe bu değer çok olmamakla birlikte değişir. Bu değerin etkisi ihmal edilebilecek seviyededir. Bu devre standart voltajı 3.7 volt civarı olan lithium ion veya li po bataryaların testi için tasarlanmıştır. O voltajda bir batarya tam dolu iken 4.2 volt boş iken ise 3 volt civarında voltaja sahiptir. Aşağıda bataryanın voltajı 4.2 volttan 3 volta giderken akım grafiğini bulabilirsiniz. Bataryadan çekilen akım 965 mA seviyesindedir. Neredeyse hiç değişmez. Bunun nedeni aşağıda görüldüğü gibi diyotun uçları arasındaki gerilimin de sabit olmasıdır. Bu devrenin sıkıntılı yanlarından biri mosfet üzerinde çok fazla voltaj düşümü olmasıdır. Bu da mosfetin aşırı derecede ısınmasına yol açar. Bu sorun için mosfete ilave olarak kocaman bir heat sink takılması gerekir. Yine de tehlikeli olabilir devreyi yapacaklar için tavsiyem devre çalışmakta iken mosfete dokunmamalarıdır. Dikkat edeceğimiz bir diğer nokta ise 9 voltluk pilden çekilen akım. R2 direnci yüksek tutularak 9 voltluk pilden çekilen akım azaltılır. Devrenin ömrü uzatılır.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Analog","slug":"Electronics/Analog","permalink":"https://mozanunal.com/categories/Electronics/Analog/"}],"tags":[{"name":"Electronics Devreler ve Teorik Yazılar","slug":"Electronics-Devreler-ve-Teorik-Yazilar","permalink":"https://mozanunal.com/tags/Electronics-Devreler-ve-Teorik-Yazilar/"},{"name":"Düşük Voltaj Koruma Devresi","slug":"Dusuk-Voltaj-Koruma-Devresi","permalink":"https://mozanunal.com/tags/Dusuk-Voltaj-Koruma-Devresi/"},{"name":"Sabit Akım Kaynağı","slug":"Sabit-Akim-Kaynagi","permalink":"https://mozanunal.com/tags/Sabit-Akim-Kaynagi/"}]},{"title":"[TR] Multikopterler için PID kontrol","slug":"multikopterler-icin-pid-kontrol","date":"2015-07-29T12:44:00.000Z","updated":"2023-04-09T21:12:57.033Z","comments":true,"path":"2015/07/multikopterler-icin-pid-kontrol/","link":"","permalink":"https://mozanunal.com/2015/07/multikopterler-icin-pid-kontrol/","excerpt":"","text":"Herkese Merhabalar, Bu yazımda PID kontrol algoritmalarından bahsetmek istiyorum. Bu yazıyı yazmamın 2 sebebi var. PID algoritmaları hakkında bir çok yazı okudum fakat coğu akademik ve karmaşık yazılar. Benim amacım anlaşılırlığı ve ayrıntıyı dengeli bir şekilde maximum değerlerinde kullanmak. İkincisi ise bu algoritmanın özel olarak multikopterlerde kullanımını basit bir şekilde açıklayan bir yazıya rastlamadım. Bu yüzden bu yazıyı yazmaya karar verdim. Bir otopilotun en temel 2 bileşeni hava aracının yönelimini tespit eden IMU sensörü ve PID algoritmasıdır. IMU sensörü içinde bir kaç sensör barındırır ve amacı hava aracının 3 boyutlu uzaydaki yönelimini bulmaktır. IMU konusundan bu yazımda bahsetmiştim. PID algoritmasının görevi ise temel olarak şöyledir: Yönelimi (3 eksendeki yere göre açılar) sensörler üzerinden alır, istenen açıları da kullanıcıdan alır. Bu ikisi arasındaki farkı en düşük seviyeye düşürmeyi amaçlar. İşte PID algoritmasının görevi bu farkı minimuma indirmek için gerekli motor hız değerlerini hesaplamaktır. Multikopterler için her 3 için ayrı ayrı PID kontrol algoritmaları uygulanır. İstenilen değer ile şu anki değerin farkı alınarak hata elde edilir. PID algoritması bu hata değerlerine uygulandıktan sonra motorların çıkış değerleri hesaplanır. Sonra bu verilen çıkış hata değişkenini bulmak üzere tekrar girişe yönlendirilir. Böylece döngü tamamlanmış olur. PID, Proportional, Integral ve Derivative olmak üzere 3 farklı algoritmanın uygulanmasıyla elde edilir. Örnekle açıklamak gerekirse: Multikopterimizin pitch açısı için kullnılan PID kontrol algoritmasını ele alalım. P algoritmasından gelen değer, multikopterimizin şu anki pitch açısı ile kontrol edenin istediği pitch açısı arasındaki farka yani anlık hataya bağlıdır. I algoritmasından gelen değer, pitch açısının geçmiş hatalarının toplamına bağlıdır. D algoritmasından gelen değer ise gelecek açı hatalarının tahminine bağlıdır. Bu algoritmalardan elde edilen değerler belli katsayılarla(Kp, Ki, Kd) çarpılarak son çıkış değişkeni elde edilir. Bu katsayılara PID katsayıları denir. PID tuning olayı bu katsayıların uygun stabiliteyi sağlayacak şekilde ayarlanmasıdır. Simdi bu 3 PID algoritmasının nasıl çalıştığını daha ayrıntılı inceleyelim. ProportionalProportional, ana kontrol algoritmamızdır. Diğer katsayılar 0 olsa bile sadece bu algoritmayla (stabilite düşük de olsa) hover yapabilir. Proportional, hava aracımızın şu anki açı hatasını baz alarak ilerler. Basitçe anlatmak gerekirse Kp katsayısı ne kadar yüksek olursa multikopter o kadar fazla kendini düzeltmeye çalışır. Eğer olması gerekenden yüksek Kp katsayısı seçilirse kendini fazla düzeltecek ve “overshoot” denen kavram ortaya çıkacaktır. Multikopter oldukça fazla duyarlı olacak ve yüksek frekansta titremeye başlayacaktır. IntegralIntegral, geçmiş hataların toplamını baz alarak ilerleyen algoritmadır. P genellikle hatayı yok etmek için tek başına yeterli değildir. Basitçe, istenen I değeri hataların zamanla çarpılıp toplanmasıyla elde edilir. Yani hatanın sayısal integrali hesaplanmış olur. I algoritması sayesinde multikopterimizin tam istediğimiz değere gelme özelliği artar fakat aynı zamanda istenilen değere gelme zamanı artar. Özellikle düzensiz rüzgarda ve ağırlık merkezi bozukluğu, tribulans gibi olumsuz etkenleri yok etmek için oldukça yararlıdır. Ki katsayısı artırıldığında daha yumuşak ve daha az agresif bir uçuş karakteristiği elde edilir. Yüksek Ki yine titreşimlere neden olur ama daha düşük frekanstadır böylece Kp’den kaynaklanan sorundan ayrılabilir. DerivativeD parametresi gelecek hata tahminini baz alan bir parametredir. Etkisini ise istenilen açı değeri ile şuanki açı değeri arasındaki bir yay olarak düşünebiliriz. Görevi şokları absorbe ederek sonradan oluşabilecek hataları, “overshootları” baştan engellemektir. Bazı uçuş kontrolcüler bu parametreyi kullanmaz(Örnek: KK 2.0). PID Tuning İpuçları Ayarlamaya P parametresinden başlanır. P parametresini ayarlamak için düşük bir değerden başlanır ve titreşim ve osilasyonlar görmeye başlayana kadar artırılır. Düşük frekanstaki osilasyonları Ki parametresine, Yüksek frekanstakiler is genellikle Kp veya Kd bağlıdır. Eğer aracınızda titreşimler görüyorsanız Kp parametresini azaltmak için acele etmeyin. İlk olarak Kd parametresini artırmayı deneyebilirsiniz. Akrobasi modu için; Birazcık yüksek P Birazcık düşük I D artırılır. Yumuşak akıcı uçuş için; Birazcık düşük P Birazcık yüksek I D azaltılır. Son olarak farklı PID ayarlarının stabiliteye etkisi hakkında açıklayıcı bir video göz atmanızı tavsiye ederim. Tekrar görüşmek üzere.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Drone","slug":"Electronics/Drone","permalink":"https://mozanunal.com/categories/Electronics/Drone/"}],"tags":[{"name":"Electronics Devreler ve Teorik Yazılar","slug":"Electronics-Devreler-ve-Teorik-Yazilar","permalink":"https://mozanunal.com/tags/Electronics-Devreler-ve-Teorik-Yazilar/"},{"name":"Hava Araçları","slug":"Hava-Araclari","permalink":"https://mozanunal.com/tags/Hava-Araclari/"},{"name":"Multikopter uçuş prensibi","slug":"Multikopter-ucus-prensibi","permalink":"https://mozanunal.com/tags/Multikopter-ucus-prensibi/"},{"name":"Multikopterler için PID","slug":"Multikopterler-icin-PID","permalink":"https://mozanunal.com/tags/Multikopterler-icin-PID/"},{"name":"PID kontrol","slug":"PID-kontrol","permalink":"https://mozanunal.com/tags/PID-kontrol/"},{"name":"Quadcopter uçuş prensibi","slug":"Quadcopter-ucus-prensibi","permalink":"https://mozanunal.com/tags/Quadcopter-ucus-prensibi/"}]},{"title":"[TR] Arduino Gimbal Kontrol Kartı","slug":"arduino-gimbal-kontrol-kart","date":"2015-07-04T00:30:00.000Z","updated":"2023-04-09T21:10:33.167Z","comments":true,"path":"2015/07/arduino-gimbal-kontrol-kart/","link":"","permalink":"https://mozanunal.com/2015/07/arduino-gimbal-kontrol-kart/","excerpt":"","text":"Herkese Merhabalar, Daha önce kolay bulunabilecek malzemelerden nasıl gimbal yapılabileceğinden bahsetmiştim (O yazıya buradan ulaşabiliriniz). Kontrol kartını sonra anlatacağım demiştim. Veee bu yazımda arduino ve MPU6050 sensörü kullanarak nasıl bir gimbal kontrol kartı yapabileceğimizden bahsedeceğim. Bu kart sayesinde gimbalin yere göre açısını kontrol edebileceğiz. Yere göre açısının sabit kalmasını da kontrol kartı üzerindeki IMU sensörü ile sağlayacağız(Ayrıntılı bilgi için tıklayınız). Kontrol kartı saniyede 100 değer okuyup servo PWM değerlerini ona göre güncelliyor. Bu sayede oldukça yüksek çözünürlüklü her türlü seviyede kullanılabilecek bir kontrol kartı yapmış oluyoruz. Ayrıca başa koyduğum ayar parametreleri sayesinde her boyutta ve çeşitte servo gimbale kolayca uyumlu hale getirilebilir. Kontrol kartının tanıtım videosu aşağıdadır. Bağlantılara gelecek olursak MPU6050 I2C pinlerinden arduinoya bağlanıyor. Gnd pini gndye, Vcc pini ise 3.3 volta bağlanıyor. Çalışma voltajı 3.3 volt olduğu için. Servoların sinyal pinlerini ayarlardan seçtiğimiz dijital pinlere bağlıyoruz. Servoların beslemesi eğer küçük servolar ise arduino üzerinden eğer yüksek akım çeken servolarsa harici olarak yapabilirsiniz. Fakat harici besleme yaparsanız arduino ve güç kaynağının topraklarını eşitlemeyi unutmayın. 1234567891011121314151617////////////////////Ayarlar//////////////// //pitch int p_pin=8; int p_neturalpos=90; int p_gain=1; int p_min=30; int p_max=150; int p_reverse=0; //roll int r_pin=9; int r_neturalpos=90; int r_gain=1; int r_min=30; int r_max=150; int r_reverse=0; /////////////////////////////////////////////// Bunlar, koddaki ayar parametreleri, çeşitli gimballere kolay adapte edilebilmesi içindir. İlk pozisyonunu, en düşük, en yüksek servo açılarını, kazancını bu parametrelerle kontrol edeceğiz. Kazanç ise kontrol kartındaki açı değişimlerinin servoya kaçla çarpılarak yansıtılacağının parametresidir.”Reverse” değişkeni “1” veya “0” yapılarak yönün ters çevirilmesi sağlanabilir. Benim gimbalim için “Pitch” eksenini ters yapmam gerekmişti. Sistemin Fotoğrafları Projenin full kaynak kodu: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283#include &lt;I2Cdev.h&gt; #include &lt;MPU60X0.h&gt; #include &lt;EEPROM.h&gt; #include \"DebugUtils.h\" #include \"CommunicationUtils.h\" #include \"FreeIMU.h\" #include &lt;Wire.h&gt; #include &lt;SPI.h&gt; #include &lt;Servo.h&gt; ////////////////////Ayarlar//////////////// //pitch int p_pin=8; int p_neturalpos=90; int p_gain=1; int p_min=30; int p_max=150; int p_reverse=0; //roll int r_pin=9; int r_neturalpos=90; int r_gain=1; int r_min=30; int r_max=150; int r_reverse=0; /////////////////////////////////////////////// Servo pitchservo; Servo rollservo; int p_angle=90; int r_angle=90; int raw_values[9]; float ypr[3]; // yaw pitch roll float val[9]; FreeIMU my3IMU = FreeIMU(); void setup() &#123; Serial.begin(115200); pitchservo.attach(p_pin); rollservo.attach(r_pin); Wire.begin(); delay(5); my3IMU.init(); delay(5); &#125; void loop() &#123; my3IMU.getYawPitchRoll(ypr); Serial.print(\"Yaw: \"); Serial.print(ypr[0]); Serial.print(\" Pitch: \"); Serial.print(ypr[1]); Serial.print(\" Roll: \"); Serial.print(ypr[2]); Serial.println(\"\"); p_angle=p_neturalpos+ypr[1]*p_gain; if(p_angle&gt;p_max)&#123; p_angle=p_max; &#125; if(p_angle&lt;p_min)&#123; p_angle=p_min; &#125; if(p_reverse=1)&#123; p_angle=180-p_angle; &#125; pitchservo.write(p_angle); r_angle=r_neturalpos+ypr[2]*r_gain; if(r_angle&gt;r_max)&#123; r_angle=r_max; &#125; if(r_angle&lt;r_min)&#123; r_angle=r_min; &#125; if(r_reverse=1)&#123; r_angle=180-r_angle; &#125; rollservo.write(r_angle); delay(10); &#125;","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Drone","slug":"Electronics/Drone","permalink":"https://mozanunal.com/categories/Electronics/Drone/"}],"tags":[{"name":"Arduino Gimbal","slug":"Arduino-Gimbal","permalink":"https://mozanunal.com/tags/Arduino-Gimbal/"},{"name":"Arduino Projeleri","slug":"Arduino-Projeleri","permalink":"https://mozanunal.com/tags/Arduino-Projeleri/"},{"name":"arduino mpu6050","slug":"arduino-mpu6050","permalink":"https://mozanunal.com/tags/arduino-mpu6050/"},{"name":"Hava Araçları","slug":"Hava-Araclari","permalink":"https://mozanunal.com/tags/Hava-Araclari/"},{"name":"Imu gimbal stabilizasyonu","slug":"Imu-gimbal-stabilizasyonu","permalink":"https://mozanunal.com/tags/Imu-gimbal-stabilizasyonu/"}]},{"title":"[TR] Youtube Arka Plan Müzik Dinleyici","slug":"youtube-arka-plan-muzik-dinleyici","date":"2015-06-29T00:09:00.000Z","updated":"2023-01-18T11:16:34.260Z","comments":true,"path":"2015/06/youtube-arka-plan-muzik-dinleyici/","link":"","permalink":"https://mozanunal.com/2015/06/youtube-arka-plan-muzik-dinleyici/","excerpt":"Merhaba Arkadaşlar,Bu yazımda kendi yazdığım bir Android uygulamasından bahsedeceğim. Telefonda youtube kullanmanın en sıkıntılı yanlarından biri video açıkken başka uygulamalara geçtiğimiz zaman videonun durdurulmasıdır. Bu uygulama sayesinde program arka plana alınsa bile video oynamaya devam eder ve sesini duyabilirsiniz.Programı burdan indirebilirsiniz.  \nNot: Programı sadece 3 telefonda deneme şansı bulabildim. Belki başka telefonlarda çalışmayabilir şimdiden uyarmak isterim.\nFor foreign visitors:One of the biggest problem about Youtube is that stopping videos when youtube at back ground or screen off. Therefore i decided to develop an app for solving this problem.You can download the app from here. Note: I can try the app only 3 android phone may be it does not work another android phones.","text":"Merhaba Arkadaşlar,Bu yazımda kendi yazdığım bir Android uygulamasından bahsedeceğim. Telefonda youtube kullanmanın en sıkıntılı yanlarından biri video açıkken başka uygulamalara geçtiğimiz zaman videonun durdurulmasıdır. Bu uygulama sayesinde program arka plana alınsa bile video oynamaya devam eder ve sesini duyabilirsiniz.Programı burdan indirebilirsiniz. Not: Programı sadece 3 telefonda deneme şansı bulabildim. Belki başka telefonlarda çalışmayabilir şimdiden uyarmak isterim. For foreign visitors:One of the biggest problem about Youtube is that stopping videos when youtube at back ground or screen off. Therefore i decided to develop an app for solving this problem.You can download the app from here. Note: I can try the app only 3 android phone may be it does not work another android phones. Screenshoots from the app App will continue to work at back ground and can be accessible from notifications menu.","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"Android Programlama ve Oyun","slug":"Android-Programlama-ve-Oyun","permalink":"https://mozanunal.com/tags/Android-Programlama-ve-Oyun/"},{"name":"youtube arkaplan müzik dinleyici.","slug":"youtube-arkaplan-muzik-dinleyici","permalink":"https://mozanunal.com/tags/youtube-arkaplan-muzik-dinleyici/"},{"name":"Youtube background listener","slug":"Youtube-background-listener","permalink":"https://mozanunal.com/tags/Youtube-background-listener/"}]},{"title":"[TR] 2 Eksenli Servo Gimbal Yapımı","slug":"2-eksenli-servo-gimbal-yapm","date":"2015-06-06T01:36:00.000Z","updated":"2023-04-09T21:10:49.355Z","comments":true,"path":"2015/06/2-eksenli-servo-gimbal-yapm/","link":"","permalink":"https://mozanunal.com/2015/06/2-eksenli-servo-gimbal-yapm/","excerpt":"","text":"Herkese Merhabalar,Bu yazımda her yerde temin edilebilecek ve maliyetsiz malzemelerle nasıl mini servo gimbal yapılacağını anlatacağım. Bu arada en baştan belirteyim kontrol kartı ve açı stabilizasyonu için daha sonra bir yazı hazırlayacağım. Proje içi kullandığım malzemeler 2 adet servo, Arduino Nano, mini kamera, yoğurt kabı, ve ataç. Gimbalin yapım aşamaları resimlerde sırasıyla anlatılmıştır. Özetlemek gerekirse; Yoğurt kabından bir köşe 2 kenarıyla beraber çıkarılır. Servolardan bir tanesi için oyuk açılır ve servo oraya vidalanır. Bu servonun koluna ataç vidalanır. Ataç 90 derece büküldükten sonra diğer servo biraz da bant yardımıyla sabitlenir. Burada dikkat etmemiz gereken servoların dönme eksenlerinin kameranın ağırlık merkezinden geçmesidir. Bu sayede servolara binen yükük minimuma düşer. Kamera için yapılan kap vida yardımıyla 2. servonun koluna sabitlenir. Ve son neredeyse hiç maliyetli 2 eksen gimbal yapmış olduk. Biraz titreşim problemi olacaktır diye tahmin ediyorum. Daha az esnek malzemeler kullanılarak bu sorun aşılabilir. Gimbalin servo deneme videosu. Kontrol kartı ve açı stabilizasyonuyla alakalı bir yazı en kısa zamanda yayınlayacağım. Tekrar görüşmek üzere.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Drone","slug":"Electronics/Drone","permalink":"https://mozanunal.com/categories/Electronics/Drone/"}],"tags":[{"name":"2 Eksenli Servo Gimbal","slug":"2-Eksenli-Servo-Gimbal","permalink":"https://mozanunal.com/tags/2-Eksenli-Servo-Gimbal/"},{"name":"Arduino Gimbal","slug":"Arduino-Gimbal","permalink":"https://mozanunal.com/tags/Arduino-Gimbal/"},{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"}]},{"title":"[TR] Android Phone IMU Visualizer","slug":"android-phone-imu-visualizer","date":"2015-05-18T03:23:00.000Z","updated":"2023-01-18T11:16:34.251Z","comments":true,"path":"2015/05/android-phone-imu-visualizer/","link":"","permalink":"https://mozanunal.com/2015/05/android-phone-imu-visualizer/","excerpt":"Hi,  \nI usually write my blog in Turkish but at this project i decided to write it in English. Because I cannot find any successful tutorial about this issue. I took e-mails or contacts from different countries about my projects if they are unusual so i am going to write some of my article in English.  \nAt this project, visualization of android device with IMU sensors will be explained.The orientation of an android device will be shown at PC. Android camera and PC communicate with each other with a WI- FI connection. I wrote 2 program for this project. First one is android app (can download from here). Second one is visualizer program for PC. At android app IMU angles of the","text":"Hi, I usually write my blog in Turkish but at this project i decided to write it in English. Because I cannot find any successful tutorial about this issue. I took e-mails or contacts from different countries about my projects if they are unusual so i am going to write some of my article in English. At this project, visualization of android device with IMU sensors will be explained.The orientation of an android device will be shown at PC. Android camera and PC communicate with each other with a WI- FI connection. I wrote 2 program for this project. First one is android app (can download from here). Second one is visualizer program for PC. At android app IMU angles of theAndroid phone are sent to PC by using UDP network protocol. After you install the app write your PC’s IP to this program. Also you can change the using port. PC program is written in Processing 2. Program firstly take the IMU angles from android phone over wifi connection. Then update the 3 dimensional shape on the screen by this data. To use my processing code Processing UDP library must be downloaded. Consequently, needs for this project: Android device Open Android IMU App Processing 2 for PC Processing UDP Library This code for Processing Finally, it is a video of presentation of my project. I hope you enjoy this.","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"Android Phone IMU Visualizer","slug":"Android-Phone-IMU-Visualizer","permalink":"https://mozanunal.com/tags/Android-Phone-IMU-Visualizer/"},{"name":"Android Programlama ve Oyun","slug":"Android-Programlama-ve-Oyun","permalink":"https://mozanunal.com/tags/Android-Programlama-ve-Oyun/"},{"name":"Android programming. Android IMU","slug":"Android-programming-Android-IMU","permalink":"https://mozanunal.com/tags/Android-programming-Android-IMU/"},{"name":"Processing IMU","slug":"Processing-IMU","permalink":"https://mozanunal.com/tags/Processing-IMU/"},{"name":"Processing UDP","slug":"Processing-UDP","permalink":"https://mozanunal.com/tags/Processing-UDP/"}]},{"title":"[TR] Arduino Due Osiloskop","slug":"arduino-due-osiloskop","date":"2015-05-01T22:38:00.000Z","updated":"2023-01-18T11:16:34.251Z","comments":true,"path":"2015/05/arduino-due-osiloskop/","link":"","permalink":"https://mozanunal.com/2015/05/arduino-due-osiloskop/","excerpt":"Merhaba Arkadaşlar,  \nBugün size Arduino Due ile yaptığım osiloskop bahsedeceğim. Arduino Dueyi seçmemin bir kaç nedeni var tabi. Arduino Duede standart Arduinoların 8 bitlik Atmega işlemcilerinden farklı olarak 32 bitlik Arm Cortex M3 var. Bu işlemcinin 84 Mhzlik saat hızı bu proje için elverişli kılıyor.  \nOsiloskop projesine başlarken amacım Due ile mümkün olan en yüksek örnekleme hızlı osiloskobu yapmaktı. İlk olarak arduinonun standart AnalogRead() fonksiyonunu denedim. Bir örnek alma süresi 40 uS kadar sürdü. Daha sonra bu bağlantıyı buldum ve oradaki ayarları Duenin ADCsine uyguladım. Osiloskobun son kodu aşağıdaki gibidir. Bu kod sayesinde ADClere direk registerlar.","text":"Merhaba Arkadaşlar, Bugün size Arduino Due ile yaptığım osiloskop bahsedeceğim. Arduino Dueyi seçmemin bir kaç nedeni var tabi. Arduino Duede standart Arduinoların 8 bitlik Atmega işlemcilerinden farklı olarak 32 bitlik Arm Cortex M3 var. Bu işlemcinin 84 Mhzlik saat hızı bu proje için elverişli kılıyor. Osiloskop projesine başlarken amacım Due ile mümkün olan en yüksek örnekleme hızlı osiloskobu yapmaktı. İlk olarak arduinonun standart AnalogRead() fonksiyonunu denedim. Bir örnek alma süresi 40 uS kadar sürdü. Daha sonra bu bağlantıyı buldum ve oradaki ayarları Duenin ADCsine uyguladım. Osiloskobun son kodu aşağıdaki gibidir. Bu kod sayesinde ADClere direk registerlar. üzerinden ulaşıyoruz. Arduinonun fonksiyonunda her analog değer alma işleminde ilkönce ADC’yi açıyor, okuduktan sonra ise kapatıyor. Bu kodda ise ADCyi FREE RUN modunda kullanmış oluyoruz. Bu sayede bir örnekleme ortalama 1 uS sürüyor yani 1 Mega Sample Per Second (MSa/s) bir osiloskop yapmış olduk.123456789101112131415161718192021222324252627282930313233unsigned long start_time;unsigned long stop_time;unsigned long values[1000];void setup() &#123; Serial.begin(9600); ADC-&gt;ADC_MR |= 0x80; //FREE RUN Adc moda geçilir. ADC-&gt;ADC_CHER = 0x80; //A0 pinini enable yap&#125;void loop() &#123; unsigned int i; start_time = micros(); for(i=0;i&lt;1000;i++)&#123; while((ADC-&gt;ADC_ISR &amp; 0x80)==0); // örnekleme yapılana kadar bekle values[i]=ADC-&gt;ADC_CDR[7]; //değeri al &#125; stop_time = micros(); Serial.print(\"Total time: \"); Serial.println(stop_time-start_time); Serial.print(\"Average time per conversion: \"); Serial.println((float)(stop_time-start_time)/1000); Serial.print(\"$, \"); for(i=0;i&lt;1000;i++) &#123; Serial.print(values[i]); Serial.print(\",\"); &#125; Serial.println(); delay(2000);&#125; Osiloskop arayüzünü ise C# dilini kullanarak yazdım. Osiloskop için kullunanılan bu kütüphaneyi kullandım. Arayüzden görüntüler de aşağıdadır. Osilopkop denemeleri Com port seçiminin yapıldığı pencere","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"Arduino Due Osiloskop","slug":"Arduino-Due-Osiloskop","permalink":"https://mozanunal.com/tags/Arduino-Due-Osiloskop/"},{"name":"C#","slug":"C","permalink":"https://mozanunal.com/tags/C/"},{"name":"C# Osiloskop","slug":"C-Osiloskop","permalink":"https://mozanunal.com/tags/C-Osiloskop/"}]},{"title":"[TR] Processing ile Artırılmış Gerçeklik","slug":"processing-ile-artrlms-gerceklik","date":"2015-04-25T00:03:00.000Z","updated":"2023-01-18T11:16:34.258Z","comments":true,"path":"2015/04/processing-ile-artrlms-gerceklik/","link":"","permalink":"https://mozanunal.com/2015/04/processing-ile-artrlms-gerceklik/","excerpt":"Merhaba Arkadaşlar,Bugünkü yazımda NyARToolkit’ten bahsedeceğim. Bu toolkit sayesinde kameradan aldığımız görüntüler üzerine 3 Boyutlu nesneler yerleştirebiliyoruz. İstediğimiz 3 boyutlu grafik hatta animasyon yerleştirilebilir. Google Glass tarzı giyilebilir teknolojilerle daha yaratıcı uygulamalar yapılabilir. Simülasyon ve oyun dünyası için çeşitli uygulamalar geliştirilebilir. Hatta hologramlar yapmanın şimdilik en gerçekleştirilebilir yolu olarak gözüküyor. Toolkit bir çok programlama diliyle kullanılabiliyor. Ben Processing ile kullandım basit olduğu için. Toolkiti kullandığım şöyle bir tanıtım videosu hazırladım:  \n\nToolkiti kullanmak için gerekenler:","text":"Merhaba Arkadaşlar,Bugünkü yazımda NyARToolkit’ten bahsedeceğim. Bu toolkit sayesinde kameradan aldığımız görüntüler üzerine 3 Boyutlu nesneler yerleştirebiliyoruz. İstediğimiz 3 boyutlu grafik hatta animasyon yerleştirilebilir. Google Glass tarzı giyilebilir teknolojilerle daha yaratıcı uygulamalar yapılabilir. Simülasyon ve oyun dünyası için çeşitli uygulamalar geliştirilebilir. Hatta hologramlar yapmanın şimdilik en gerçekleştirilebilir yolu olarak gözüküyor. Toolkit bir çok programlama diliyle kullanılabiliyor. Ben Processing ile kullandım basit olduğu için. Toolkiti kullandığım şöyle bir tanıtım videosu hazırladım: Toolkiti kullanmak için gerekenler:1. Processing 22. NyARToolkit Kütüphanesi(Processing içerisinden add library diyerek kurulabilir.)3. Kütüphanemizin tanıyabileceği patternlar(kendiniz de üretebilirsiniz)4. Bu kaynak kod 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667import processing.video.*;import jp.nyatla.nyar4psg.*;Capture cam;MultiMarker nya_r;MultiMarker nya_l;PFont font=createFont(\"FFScala\", 32);void setup() &#123; size(640,480,P3D); colorMode(RGB, 100); println(MultiMarker.VERSION); cam=new Capture(this,640,480); nya_l=new MultiMarker(this,width,height,\"camera_para.dat\",new NyAR4PsgConfig(NyAR4PsgConfig.CS_LEFT_HAND,NyAR4PsgConfig.TM_NYARTK)); nya_l.addARMarker(\"patt.hiro\",80); nya_r=new MultiMarker(this,width,height,\"camera_para.dat\",new NyAR4PsgConfig(NyAR4PsgConfig.CS_RIGHT_HAND,NyAR4PsgConfig.TM_NYARTK)); nya_r.addARMarker(\"patt.kanji\",80); cam.start();&#125;int c=0;void drawgrid()&#123; pushMatrix(); stroke(0); strokeWeight(2); line(0,0,0,100,0,0); textFont(font,20.0); text(\"X\",100,0,0); line(0,0,0,0,100,0); textFont(font,20.0); text(\"Y\",0,100,0); line(0,0,0,0,0,100); textFont(font,20.0); text(\"Z\",0,0,100); popMatrix();&#125;void draw()&#123; c++; if (cam.available() !=true) &#123; return; &#125; cam.read(); nya_r.detect(cam); nya_l.detect(cam); background(0); nya_r.drawBackground(cam); //right if((nya_r.isExistMarker(0))) &#123; nya_r.beginTransform(0); fill(0,0,255); drawgrid(); translate(0,0,20); rotate((float)c/100); sphere(40); nya_r.endTransform(); &#125; //left if((nya_l.isExistMarker(0))) &#123; nya_l.beginTransform(0); fill(0,255,0); drawgrid(); translate(0,0,20); rotate((float)c/100); box(40); nya_l.endTransform(); &#125;&#125;","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"Image Processing","slug":"Signal-Processing/Image-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/Image-Processing/"}],"tags":[{"name":"Image Processing","slug":"Image-Processing","permalink":"https://mozanunal.com/tags/Image-Processing/"},{"name":"Processing","slug":"Processing","permalink":"https://mozanunal.com/tags/Processing/"},{"name":"Artırılmış gerçeklik","slug":"Artirilmis-gerceklik","permalink":"https://mozanunal.com/tags/Artirilmis-gerceklik/"},{"name":"marker tabanlı vr","slug":"marker-tabanli-vr","permalink":"https://mozanunal.com/tags/marker-tabanli-vr/"},{"name":"market tabanlı ar","slug":"market-tabanli-ar","permalink":"https://mozanunal.com/tags/market-tabanli-ar/"}]},{"title":"[TR] Bakış Açısı Tabanlı 3 Boyutlu Görüş Versiyon 2.00","slug":"baks-acs-tabanl-3-boyutlu-gorus2","date":"2015-03-31T03:55:00.000Z","updated":"2023-01-18T11:16:34.252Z","comments":true,"path":"2015/03/baks-acs-tabanl-3-boyutlu-gorus2/","link":"","permalink":"https://mozanunal.com/2015/03/baks-acs-tabanl-3-boyutlu-gorus2/","excerpt":"","text":"Herkese Merhabalar, Bu yazımda daha önce yaptığım bir uygulamanın 2. versiyonundan bahsedeceğim. Programımı daha önce şöyle anlatmıştım:Bu program sayesinde ekstra hiç bir ekipman kullanmadan 2 boyutlu bilgisayar ekranını 3 boyutlu görme uygulamasını gerçekleştirebileceğimiz bir şeye dönüştürüyoruz. Bunu nasıl yapıyor diye soracak olursanız görüntü işleme sayesinde!.Programda webcam üzerinden yüz tespiti yapılıyor ve ekrana nereden baktığı tespit ediliyor. Hesaplanan bu açı daha sonra kullandığım 3 boyut kütüphanesi olan OpenGL’in kamerasını ayarlamak için kullanılıyor. böylece ekrana bakış yönünüze göre değişen bir 3D görme uygulaması hazırlanmış oluyor. Bu versiyonla gelen yeniliklere gelecek olursak en büyük değişiklik artık bilgisayardan uzaklığımıza göre cisim yakınlaşıp uzaklaşıyor. Biraz da grafiklerde değişiklik yapmak istedim yaptığım performans iyileştirmesi sayesinde programın çözünürlüğü artık 720p. Eklediğim diğer şeyse Low Pass Filter. Peki nedir diyecek olursanız; sisteme eski giren verilerle şu anki verilerin ortalamasını alır(ne kadar geriden alınacağı, ne kadar ağırlıklı bir ortalama olacağı değişebilir) bu sayede daha “smooth” sonuçlar elde edilebilir.","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"Image Processing","slug":"Signal-Processing/Image-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/Image-Processing/"}],"tags":[{"name":"3D görüş","slug":"3D-gorus","permalink":"https://mozanunal.com/tags/3D-gorus/"},{"name":"3D view","slug":"3D-view","permalink":"https://mozanunal.com/tags/3D-view/"},{"name":"Image Processing","slug":"Image-Processing","permalink":"https://mozanunal.com/tags/Image-Processing/"},{"name":"Opencv 3 boyutlu görme","slug":"Opencv-3-boyutlu-gorme","permalink":"https://mozanunal.com/tags/Opencv-3-boyutlu-gorme/"},{"name":"Processing","slug":"Processing","permalink":"https://mozanunal.com/tags/Processing/"}]},{"title":"[TR] All Terrain Rover Version 1.00","slug":"all-terrain-rover-version100","date":"2015-03-23T00:09:00.000Z","updated":"2023-01-18T11:16:34.251Z","comments":true,"path":"2015/03/all-terrain-rover-version100/","link":"","permalink":"https://mozanunal.com/2015/03/all-terrain-rover-version100/","excerpt":"","text":"Herkese Merhabalar, Bugünkü yazımda, uzun süreli bir geliştirme düşündüğüm All Terrain Rover projemin ilk denemesini sizlerle paylaşıyorum. Bu isim için oldukça basit bir başlangıç oldu tabi ama malzemelerim gelene kadar bir deneme yapayım diyerek yola çıktım ve ortaya çıkan sonuç beni bile şaşırttı. Robotumun şimdilik hiç bir kontrolü yok sadece pili takıp bırakıyorum. ATR’nin gövdesi hafif ve dayanıklı olması için karbon bir plakadan yapıldı. Ayakları ataç ve silikondan yapıldı bu sayede esnek ve maksimum sürtünmeyi sağlıyor. Motor olarak 2 adet, 360 derece dönmesi için modifiye edilmiş servo (1.8kg*cm torklu) kullanıldı.Yüksek tork tırmanma olayının artırmasını sağladı. ATR’ yi bir kaç farklı zeminlerde ve engellerle denedim. Sonuçlarla alakalı video ve ATR’nin resimleri aşağıdadır.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"All Terrain Rover","slug":"All-Terrain-Rover","permalink":"https://mozanunal.com/tags/All-Terrain-Rover/"},{"name":"Robot","slug":"Robot","permalink":"https://mozanunal.com/tags/Robot/"}]},{"title":"[TR] HC-SR501 PIR Sensörü","slug":"hc-sr501-pir-sensoru","date":"2015-03-14T23:36:00.000Z","updated":"2023-01-18T11:16:34.255Z","comments":true,"path":"2015/03/hc-sr501-pir-sensoru/","link":"","permalink":"https://mozanunal.com/2015/03/hc-sr501-pir-sensoru/","excerpt":"","text":"Merhaba arkadaşlar,Bugünkü yazımda bir PIR sensörü olan HC-SR501 inceleyeceğiz. PIR sensörünün açılımı Passive Infrared Sensor. Son 4- 5 yılda çok hızlı bir yayılım gösterdi bu sensörler ve insan algılayınca çalışan lambalar, otomatik el kurutma vb makinalar olarak hayatımıza girdi. Modulumüzden bahsetmeden önce PIR sensör nedir onu açıklamak istiyorum. PIR sensör ortamdaki kızılötesi ışınları ölçer. Alıcılarda çok farklı yere doğru odaklanan frensel lensi bulunur bu sayede belli bir alandaki tüm enerji ölçülmüş olur. Canlıların sıcaklığı ortalama 36 derece civarlarında olduğundan merceğin üzerine düşen kızılötesi ışınların toplam enerjisi y ir. Böylece canlı varlığı tespit edilmiş olur. Gelelim modülümüze. Çalışma voltajı 3.6- 20 volt arasında. Resimde gösterilen “Sensivity Adjust” tripotundan hassasiyet ayarlanıyor. Diğer trimpottan ise 0.5 -300 saniye ayarını yapabiliriz. Modül bir cisim algılayınca “Output” pininden çıkış veriyor. Test etmek için bir Arduino kodu yazdım.Koddaki yaptığım tek şey dijital veriyi okuyup ekrana seri port üzerinden bilgisayara yollatmak. Zaten sadece lamba çalıştırmak için Arduino kullanmak gereksiz olur. Bir transistör ile çıkış güçlendirilip röle sürmek daha mantıklı olacaktır. Benim bilgileri aldığım modulün datasheet’i de burada. https://www.mpja.com/download/31227sc.pdf","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"HC-SR501","slug":"HC-SR501","permalink":"https://mozanunal.com/tags/HC-SR501/"}]},{"title":"[TR] ESP8266 Modulü Web Server","slug":"esp8266-modulu-html-server","date":"2015-03-11T22:49:00.000Z","updated":"2023-04-09T21:02:57.281Z","comments":true,"path":"2015/03/esp8266-modulu-html-server/","link":"","permalink":"https://mozanunal.com/2015/03/esp8266-modulu-html-server/","excerpt":"Merhaba arkadaşlar,\nBugünkü yazımda ESP8266 modüllerinden bahsetmek istiyorum. Bu modül seri port üzerinden haberleşen wifi modülü. Fiyatı yaklaşık 5 $ özelliklerini gördüğünüz fiyatından çok daha fazlasını hakkettiğini göreceksiniz. Özelliklerine geçecek olursak;","text":"Merhaba arkadaşlar, Bugünkü yazımda ESP8266 modüllerinden bahsetmek istiyorum. Bu modül seri port üzerinden haberleşen wifi modülü. Fiyatı yaklaşık 5 $ özelliklerini gördüğünüz fiyatından çok daha fazlasını hakkettiğini göreceksiniz. Özelliklerine geçecek olursak; 802.11 b/g/n desteği Wi-Fi Direct (P2P) Desteği Dahili TCP/IP protokol yığını +19,5dBm çıkış gücü (802.11b modunda) Kaçak akım &lt; 10uA Dahili düşük güç tüketimine sahip 32-bit’lik işlemci SDIO 1.1/2.0, SPI ve UART desteği STBC, 1x1 MIMO, 2x1 MIMO Uyanma ve veri paketi alma süresi &lt; 2ms Stand-by durumunda güç tüketimi &lt; 1mW Modülümüz yaygın tüm wifi protokollerini destekliyor, yerel ağdan ve internet üzerinden yapabileceğimiz binlerce çeşit uygulama için oldukça elverişli. Üzerinde 32 bitlik işlemci mevcut. 19.5 dBm çıkış gücüne sahip, full güç ile çalıştırılırsa antensiz 400 metreden fazla antenli ise 4km’den fazla uzaklıktan sinyal alınabildiği test edilmiş bu fiyat ve bu boyutta bir modül için rakamlar çok iyi.Buradan mesafe testi videosunu izleyebilirsiniz. Boyut konusuna gelecek olursak boyutları 2.1 cmX 1.3 cm, üzerinde dahili PCB anten bulunuyor. Internet of Things Esp8266’nın özellikleri böyle fakat biz ne için kullanacağız. 1999 yılında ortaya atılan son yıllarda ise popülerleşen bir kavram var, “Internet of Things” yani Türkçesi” Nesnelerin İnterneti” kavramı, insanlar dışında diğer eşyaların da (buz dolabı, ocak, klima, evin kapısı…) bir iletişim ağına sahip olup, birbiriyle haberleşmesi. İşte bu küçük wifi modülleri bu noktada devreye giriyor. Kullanımları basit, düşük maliyetli, enerji tüketimleri düzenlenebilir olan bu modüller, kolayca herhangi bir eşyamızı “Online” hale getirebilir, bilgisayar telefon gibi herhangi bir ağa bağlanabilen aletlerle kontrol edebilen şeylere dönüştürebilir. “Online” eşyalarımızı haberleştirerek daha akıllı, daha efektif hale getirebilir.Aynı zamanda hali hazırda var olan wifi ağlarını kullanmaları modullerin entegre edilebilirliğini artırıyor. Bu yazıda Esp8266 modülünün kullanımına sadece bir giriş yapacağız, modülümüzle HTML sayfası oluşturup, bilgisayarımızdan bağlanacağız. Modülümüzün kullanımına gelecek olursak pin dizilimi aşağıdaki gibidir. Bizim yapacağımız bağlantılar ise şu şekilde olmalıdır. VCC—&gt; Arduino 3.3 V GND—&gt; Arduino GND RX—–&gt;Serial 1 TX TX—–&gt;Serial 1 RX CH_PD&gt; Arduino 3.3 V Önemli Uyarı: Bu modül 3.3 volt ile çalışmaktadır ve rx tx pini de 5 volta dayanıklı değildir. Ben bu projede Arduino DUE kullandığım için problem yaşamadım fakat diğer Arduino modellerinin 5 voltlukları kullanılacağı zaman level shifter entegrelerine ihtiyaç duyulur. Arduino kodu aşağıdadır eğer başka bir Arduino ile kullanacaksanız “Serial1” yerine “SoftwareSerial” kullanmanızı öneririm. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778#include &lt;Wire.h&gt; #define DEBUG true void setup()&#123; Serial.begin(9600);// Arduino-Pc haberleşmesi Debug için kullanacağım Serial1.begin(9600); // Arduinoyu Esp8266 bağladığımız serial port sendData(\"AT+RST\\r\\n\",2000,DEBUG); // reset sendData(\"AT+CWMODE=3\\r\\n\",1000,DEBUG); // MOde olarak access point seçilir sendData(\"AT+CIFSR\\r\\n\",1000,DEBUG); // Modulün ip adresi alınır sendData(\"AT+CIPMUX=1\\r\\n\",1000,DEBUG); // birden fazla bağlantıya izin ver sendData(\"AT+CIPSERVER=1,80\\r\\n\",1000,DEBUG); // Port= 80 yapılır&#125;int sayi=0;void loop()&#123; if(Serial1.available()) &#123; if(Serial1.find(\"+IPD,\")) &#123; delay(300); int connectionId = Serial1.read()-48; // 48 çıkarılır çünkü char to int fönüşümü yapmamız gerek // ASCCI table da 0 sayısı 48 ile ifade edilir yani: // '0' - 48 = 0 // '1' - 48 = 1 String webpage = \"&lt;head&gt;&lt;meta http-equiv=\"\"refresh\"\" content=\"\"10\"\"&gt;&lt;/head&gt;\"; webpage+=\"&lt;h1&gt;Esp8266 Html Testi&lt;/h1&gt;&lt;h2&gt;\"; webpage+= \"mozanunal.com\"; webpage+=\"&lt;/h2&gt;\"; String cipSend = \"AT+CIPSEND=\"; cipSend += connectionId; cipSend += \",\"; cipSend +=webpage.length(); cipSend +=\"\\r\\n\"; sendData(cipSend,1000,DEBUG); sendData(webpage,1000,DEBUG); String closeCommand = \"AT+CIPCLOSE=\"; closeCommand+=connectionId; closeCommand+=\"\\r\\n\"; sendData(closeCommand,3000,DEBUG); &#125; &#125;&#125; String sendData(String command, const int timeout, boolean debug)&#123; String response = \"\"; Serial1.print(command); // send the read character to the esp8266 long int time = millis(); while( (time+timeout) &gt; millis()) &#123; while(Serial1.available()) &#123; // The esp has data so display its output to the serial window char c = Serial1.read(); // read the next character. response+=c; &#125; &#125; if(debug) &#123; Serial.print(response); &#125; return response;&#125; Esp8266yı Acces Point olarak kullanıyoruz. Yani bizim için wifi ağı kurar kodu yükledikten sonra ağa bağlanın. Serial porttan gelen veriler bu şekilde olmalıdır. Problem yaşadığımızda buradan kontrol edip DEBUG yapabiliriz. Programımızın çıktısı bu şekilde olacaktır. String halinde Arduino’ya yüklediğimiz HTML dosyasını modül wifi ağında paylaşır.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"IoT","slug":"Electronics/IoT","permalink":"https://mozanunal.com/categories/Electronics/IoT/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"ESP8266","slug":"ESP8266","permalink":"https://mozanunal.com/tags/ESP8266/"},{"name":"Arduino Wifi Modulü","slug":"Arduino-Wifi-Modulu","permalink":"https://mozanunal.com/tags/Arduino-Wifi-Modulu/"},{"name":"internet of Things","slug":"internet-of-Things","permalink":"https://mozanunal.com/tags/internet-of-Things/"}]},{"title":"[TR] PIC İçin In Circuit Serial Programming (ICSP)","slug":"pic-icin-in-circuit-serial","date":"2015-01-31T18:34:00.000Z","updated":"2023-01-18T11:16:34.257Z","comments":true,"path":"2015/01/pic-icin-in-circuit-serial/","link":"","permalink":"https://mozanunal.com/2015/01/pic-icin-in-circuit-serial/","excerpt":"Herkese Merhabalar,\nBugünkü yazımda ICSP olarak kısaltıllan “In Circuit Serial Programing”ten bahsedeceğim. Türkçeye devre içerisinde programlama olarak çevrilebilir. Oldukça avantajlı bir programlama şeklidir. Özellikle Pic programlarken sıkça kullanılır. Devresi hazır hale getirilmiş lehimlenmiş Picleri bu yöntem ile devreden sökmeden programlayabiliriz.PIC KIT 2, ICSP","text":"Herkese Merhabalar, Bugünkü yazımda ICSP olarak kısaltıllan “In Circuit Serial Programing”ten bahsedeceğim. Türkçeye devre içerisinde programlama olarak çevrilebilir. Oldukça avantajlı bir programlama şeklidir. Özellikle Pic programlarken sıkça kullanılır. Devresi hazır hale getirilmiş lehimlenmiş Picleri bu yöntem ile devreden sökmeden programlayabiliriz.PIC KIT 2, ICSPprogramlama için en çok kullanılan modullerden biridir. Ben de onu kullandım, kullandığım Pic ise PIC16f877a’dır. Bağlantılar ise okla işaretletli yönden diğer tarafa doğru şu şekildedir; MCRL(VPP) VDD GND ICSPDAT/PGD ICSPCLK/PGK Auxiliary Programınızı pic için geliştirilmiş bir dilde yazmanız gerekiyor. Seçeneklerinizden bazıları, Pic C, Pic Basic Pro, Assembly, Mikro C. Bu yazdığımız programı derleyip .hex formatına çeviriyoruz. Başka bir program kullanarak da derlediğimiz .hex formatındaki dosyaları Pic’e aktarıyoruz. Önemli not: Hazır oluşturulmuş bir devredeki Pic programlayacaksanız devrenin çektiği akıma dikkat etmeniz gerekli. Çünkü PIC KIT 2(ve ya benzeri programlayıcılar) verebileceği maximum akım çok yüksek değildir. Ortak Gnd’li harici beslemeler sorunumuzu çözecektir.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Microcontrollers","slug":"Electronics/Microcontrollers","permalink":"https://mozanunal.com/categories/Electronics/Microcontrollers/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Microcontrollers","slug":"Microcontrollers","permalink":"https://mozanunal.com/tags/Microcontrollers/"},{"name":"ICSP","slug":"ICSP","permalink":"https://mozanunal.com/tags/ICSP/"},{"name":"In Circuit Serial Programing","slug":"In-Circuit-Serial-Programing","permalink":"https://mozanunal.com/tags/In-Circuit-Serial-Programing/"},{"name":"Pic programlama","slug":"Pic-programlama","permalink":"https://mozanunal.com/tags/Pic-programlama/"}]},{"title":"[TR] Arduino İle Super Mario Melodisi Çalmak","slug":"arduino-ile-super-mario-melodisi-calmak","date":"2015-01-25T18:03:00.000Z","updated":"2023-01-18T11:16:34.252Z","comments":true,"path":"2015/01/arduino-ile-super-mario-melodisi-calmak/","link":"","permalink":"https://mozanunal.com/2015/01/arduino-ile-super-mario-melodisi-calmak/","excerpt":"Merhaba ArkadaşlarBugünkü yazımda Arduino ile melodi çalma uygulamasından bahsedeceğim. Kullandığım malzemeler Arduino ve bir buzzer. Pin bağlantıları da oldukça basit buzzerın eksi ucu GND’ye,  + ucu da 12. pine bağlanıyor. 12. Pin dijital pin, farklı frekanslarda 1-0 yapılarak notaların çalınması sağlanır. Notaların çalınma süreleri de nota frekansının verilme süresi değiştirilerek arduino tarafından ayarlanıyor. Böylece istediğimiz melodiyi elde etmiş oluyoruz. Ayrıntılı bilgiye buradan ulaşabilirsiniz. Arduino koduna aşağıdan ulaşabilirsiniz(Kod alıntıdır. Tek tek notalarla uğraşmamak için notaları çıkarılmış bir koddan aldım.). Tekrar görüşmek üzere.","text":"Merhaba ArkadaşlarBugünkü yazımda Arduino ile melodi çalma uygulamasından bahsedeceğim. Kullandığım malzemeler Arduino ve bir buzzer. Pin bağlantıları da oldukça basit buzzerın eksi ucu GND’ye, + ucu da 12. pine bağlanıyor. 12. Pin dijital pin, farklı frekanslarda 1-0 yapılarak notaların çalınması sağlanır. Notaların çalınma süreleri de nota frekansının verilme süresi değiştirilerek arduino tarafından ayarlanıyor. Böylece istediğimiz melodiyi elde etmiş oluyoruz. Ayrıntılı bilgiye buradan ulaşabilirsiniz. Arduino koduna aşağıdan ulaşabilirsiniz(Kod alıntıdır. Tek tek notalarla uğraşmamak için notaları çıkarılmış bir koddan aldım.). Tekrar görüşmek üzere. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576/* This example uses a piezo speaker to play melodies. It sends * a square wave of the appropriate frequency to the piezo, generating * the corresponding tone. * * The calculation of the tones is made following the mathematical * operation: * * timeHigh = period / 2 = 1 / (2 * toneFrequency) * * where the different tones are described as in the table: * * note frequency period timeHigh * c 261 Hz 3830 1915 * d 294 Hz 3400 1700 * e 329 Hz 3038 1519 * f 349 Hz 2864 1432 * g 392 Hz 2550 1275 * a 440 Hz 2272 1136 * b 493 Hz 2028 1014 * C 523 Hz 1912 956 * * https://www.arduino.cc/en/Tutorial/Melody */ int speakerPin = 12; int length = 295; // the number of notes char notes[] = \"EE E CE G g C g e a b ia gEGA FG E CDb C g e a b ia gEGA FG E CDb GNFR E uaC aCD GNFR E 1 11 GNFR E uaC aCD L D C CC C CD EC ag CC C CDE CC C CD EC ag EE E CE G g C g e a b ia gEGA FG E CDb C g e a b ia gEGA FG E CDb EC g u aF Fa bAAAGFEC ag EC g u aF Fa bF FFEDCe ec \"; // a space represents a rest float beats[] = &#123; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, //Page 1 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 4, //Page 2 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, //Page4 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, //Page 5 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1.3, 1.3, 1.3, 1.3, 1.3, 1.3, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1.3, 1.3, 1.3, 1, 1, 1, 1, 1, 1, 2 &#125;; //Page 6 int tempo = 95; void playTone(int ton1, int duration) &#123; for (long i = 0; i &lt; duration * 1000L; i += ton1) &#123; tone(speakerPin, ton1); delayMicroseconds(ton1); &#125; noTone(speakerPin); &#125; void playNote(char note, int duration) &#123; // c c# d d# e f f# g g# a a# b char names[] = &#123; ' ', '!', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'c', 'd', 'e', 'f', 'g', 'a', 'b', 'C', 'D', 'E', 'F', 'G', 'A', 'B', 'i', 'N', 'R', 'u', '1', 'L', 'k'&#125;; // [i = b flat] [N = G flat] [R = D#] [u = g#] [1 = C oct. 5] [L = E flat] int tones[] = &#123; 0, 1046, 138, 146, 155, 164, 174, 184, 195, 207, 220, 233, 246, 261, 293, 329, 349, 391, 440, 493, 523, 587, 659, 698, 783, 880, 987, 466, 740, 622, 415, 1046, 622u, 227&#125;; // play the tone corresponding to the note name for (int i = 0; i &lt; 34; i++) &#123; if (names[i] == note) &#123; playTone(tones[i], duration); &#125; &#125; &#125; void setup() &#123; pinMode(speakerPin, OUTPUT); &#125; void loop() &#123; for (int i = 0; i &lt; length; i++) &#123; if (notes[i] == ' ') &#123; delay(beats[i] * tempo); // rest &#125; else &#123; playNote(notes[i], beats[i] * tempo); &#125; // pause between notes delay(tempo / 2); &#125; &#125;","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"Arduino Müzik","slug":"Arduino-Muzik","permalink":"https://mozanunal.com/tags/Arduino-Muzik/"},{"name":"Super Mario Melodisi","slug":"Super-Mario-Melodisi","permalink":"https://mozanunal.com/tags/Super-Mario-Melodisi/"}]},{"title":"[TR] Robot Kol","slug":"robot-kol","date":"2015-01-16T13:07:00.000Z","updated":"2023-01-18T11:16:34.258Z","comments":true,"path":"2015/01/robot-kol/","link":"","permalink":"https://mozanunal.com/2015/01/robot-kol/","excerpt":"","text":"Merhabalar, Bugünkü yazımda yaptığım robot koldan bahsedeceğim. Robot kolum Arduino kontrollü. Mekanik aksamında 4 adet servo kullandım. Alt kısmını 2 eksenli mini kamera gimbalinden yaptım. Kalan kısmı ise plastik bir kapı keserek yaptım. Servoları plastik parçalara vidaladım. Kullandığım servolar 9 gramlık mikro servolar. Verebilecekleri tork 1.8 kg.cm . Ben robot kola kesme şeker ve kalemtıraş gibi küçük nesneler taşıttım. Onlar için yeterli oldu. Kolun kontrolü için 2 tane 2 eksenli joystick kullandım. Arduinonun 4 analog pininden joystickleri bağladım. 4 servonun kontrolü için de 4 dijital pini kullandım. Tutma mekanizması olarak ise ataçtan bir kıskaç yaptım. Servolara güç uygulatıp sıkıştırınca esnekliği sayesinde oldukça iyi sonuç verdi. Aşağıda resimleri ve tanıtım videosu bulunmaktadır. Tekrar görüşmek üzere.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"arduino servo kontrol","slug":"arduino-servo-kontrol","permalink":"https://mozanunal.com/tags/arduino-servo-kontrol/"},{"name":"Arduino Robotik Kol","slug":"Arduino-Robotik-Kol","permalink":"https://mozanunal.com/tags/Arduino-Robotik-Kol/"},{"name":"Arduino Robotik Kontrol","slug":"Arduino-Robotik-Kontrol","permalink":"https://mozanunal.com/tags/Arduino-Robotik-Kontrol/"},{"name":"DIY Robotic Hand","slug":"DIY-Robotic-Hand","permalink":"https://mozanunal.com/tags/DIY-Robotic-Hand/"}]},{"title":"[TR] LM78XX Voltaj Regülatörü Entegrelerini Kullanma","slug":"lm78xx-voltaj-regulatoru-entegrelerini","date":"2015-01-11T21:30:00.000Z","updated":"2023-01-18T11:16:34.256Z","comments":true,"path":"2015/01/lm78xx-voltaj-regulatoru-entegrelerini/","link":"","permalink":"https://mozanunal.com/2015/01/lm78xx-voltaj-regulatoru-entegrelerini/","excerpt":"","text":"Tekrardan Merhabalar, Voltaj regülatörleri elektronik devrelerde büyük önem taşır. Çoğu mikroişlemci, entegre belli bir voltajda çalışır. Aynı zamanda bir devrede farklı voltajlarda çalışan bölümler olabilir. Bu gibi durumlarda regülatör kullanırız.Yazıda konumuz LM78XX entegreleri. LM78XX entegreleri, voltaj regülatörü entegreleridir. Geniş voltaj aralığında voltajı regüle edebilirler. Entegrelerin ismindeki son 2 rakam hangi voltaja regüle ettiğini gösterirler. Örneğin; LM7805 5 volta, LM7812 12 volta regüle eder. Kullanımı oldukça kolay olduğu için sıklıkla kullanılırlar. Kullanımını 7805 üzerinden aşağıda anlattım. LM7805 Entegresi Kullanımı 7805 entegresi sabit 5 volt gerilim almamızı sağlayan bir devre elemanıdır. bu devre elemanımız şekilde görüldüğü gibi 3 bacaklıdır.1. bacağı yüksek volt girişi, 2. bacağı GND ve 3. bacağı 5 volt çıkışıdır. 7 - 35 volt arası girişi 5 volta regüle eder. Eğer 400 miliamperden fazla akım alacaksınız soğutucu kullanmanızı tavsiye ederim.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Analog","slug":"Electronics/Analog","permalink":"https://mozanunal.com/categories/Electronics/Analog/"}],"tags":[{"name":"Electronics Devreler","slug":"Electronics-Devreler","permalink":"https://mozanunal.com/tags/Electronics-Devreler/"},{"name":"LM7805","slug":"LM7805","permalink":"https://mozanunal.com/tags/LM7805/"},{"name":"Voltaj Regülatörü","slug":"Voltaj-Regulatoru","permalink":"https://mozanunal.com/tags/Voltaj-Regulatoru/"}]},{"title":"[TR] LCD Göstergeli Mesafe Ölçer","slug":"lcd-gostergeli-mesafe-olcer","date":"2015-01-11T18:57:00.000Z","updated":"2023-01-18T11:16:34.256Z","comments":true,"path":"2015/01/lcd-gostergeli-mesafe-olcer/","link":"","permalink":"https://mozanunal.com/2015/01/lcd-gostergeli-mesafe-olcer/","excerpt":"","text":"Merhabalar! Bugünkü yazımda LCD göstergeli bir mesafe ölçerin nasıl yapılabileceğini anlatacağım. Projede Arduino, LCD modülü ve HC-SR04 modülü kullandım. Mesafe hesaplama işini “NewPing” isimli kütüphaneye yaptırdım. Bu aldığım mesafe verilerini de LCD ekrana bastırıyorum kod bu kadar basit. HC-SR04 ultrasonik mesafe hesaplama modulü. Mesafe hesabı için ses dalgalarını kullanıyor. Ses hızına göre geri dönüş süresini hesaplıyor bu sayede uzaklık hakkında bilgi sahibi olmuş oluyoruz. Uygulamanın Arduino Kodunu paylaşıyorum. Bağlantılar da kod içerisinde verilmiştir. 12345678910111213141516171819202122232425262728293031323334353637383940/* The circuit: * LCD RS pin to digital pin 12 * LCD Enable pin to digital pin 11 * LCD D4 pin to digital pin 5 * LCD D5 pin to digital pin 4 * LCD D6 pin to digital pin 3 * LCD D7 pin to digital pin 2 * LCD R/W pin to ground * 10K resistor: * ends to +5V and ground * wiper to LCD VO pin (pin 3) */// include the library code:#include &lt;LiquidCrystal.h&gt;#include &lt;NewPing.h&gt;#define TRIGGER_PIN 7 // Arduino pin tied to trigger pin on the ultrasonic sensor.#define ECHO_PIN 6 // Arduino pin tied to echo pin on the ultrasonic sensor.#define MAX_DISTANCE 200 // Maximum distance we want to ping for (in centimeters). Maximum sensor distance is rated at 400-500cm.// initialize the library with the numbers of the interface pinsLiquidCrystal lcd(12, 11, 5, 4, 3, 2);NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE);void setup() &#123; lcd.begin(16, 2); lcd.print(\"UZAKLIK\"); Serial.begin(115200); // Open serial monitor at 115200 baud to see ping results.&#125;void loop() &#123; delay(1000); unsigned int uS = sonar.ping(); Serial.print(\"Ping: \"); Serial.print(uS / US_ROUNDTRIP_CM); Serial.println(\"cm\"); lcd.setCursor(0, 1); lcd.print(uS / US_ROUNDTRIP_CM);&#125;","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"HC-SR04","slug":"HC-SR04","permalink":"https://mozanunal.com/tags/HC-SR04/"},{"name":"LCD Arduino","slug":"LCD-Arduino","permalink":"https://mozanunal.com/tags/LCD-Arduino/"},{"name":"Mesafe ölçer","slug":"Mesafe-olcer","permalink":"https://mozanunal.com/tags/Mesafe-olcer/"}]},{"title":"[TR] SDR ile Uçakların Yayınlarından Yerlerini Tespit Etmek","slug":"sdr-ile-ucaklarn-yaynlarndan-yerlerini","date":"2015-01-09T21:35:00.000Z","updated":"2023-01-18T11:16:34.258Z","comments":true,"path":"2015/01/sdr-ile-ucaklarn-yaynlarndan-yerlerini/","link":"","permalink":"https://mozanunal.com/2015/01/sdr-ile-ucaklarn-yaynlarndan-yerlerini/","excerpt":"","text":"Merhabalar! Bugünkü yazımda SDR ile uçaklardan veri alıp onları haritada takip etmeyi anlatacağım. Bunun için gerekli olan yazılımlar ADSBsharp ve ADSBScope yazılımlarıdır. Ben donanım olarak 10 $ Çin’den aldığım SDR’yi kullandım. Anten olarak ise 5 TL’lik TV anteni kullandık. Bu anten tabi ki bu iş için uygun anten değil. Çalışacağımız frekans 1090 Mhz benim antenimle sadece yakın çevredeki uçaklardan veri almak mümkün. En kısa zamanda antenlerle ilgili bir yazı yayınlayacağım o zamana kadar şurayı inceleyebilirsiniz. Yapacağımız iş temel olarak söyle: Uçaklar uçarken koordinantları, rotaları vb şeklinde ADSB diye kısaltılan bir bilgilendirme dataları yollayarak uçarlar. Bizim SDR ile yaptığımız şey 1090 Mhz sinyalleri alıp onları decode etmek. Decode işlemi için ADSBSharp (RTL 1090 alternatifidir.) yazılımını kullanabilirsiniz. Daha sonra decode edilen data port üzerinden başka bir programa aktarılır. Bu program ile elde edilen veriler bir arayüze aktarılır ve uçak harita üzerinde gösterilir. Haritada gösterme işi için ADSBScope yazılıımını kullandım. Aşağıda yazılımların nasıl kullanıldığını anlatığım videoyu paylaşıyorum 2 adet fotoğrafla beraber. Görüşmek üzere…","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"DSP","slug":"Signal-Processing/DSP","permalink":"https://mozanunal.com/categories/Signal-Processing/DSP/"}],"tags":[{"name":"Hava Araçları","slug":"Hava-Araclari","permalink":"https://mozanunal.com/tags/Hava-Araclari/"},{"name":"Software Defined Radio","slug":"Software-Defined-Radio","permalink":"https://mozanunal.com/tags/Software-Defined-Radio/"},{"name":"Adsb","slug":"Adsb","permalink":"https://mozanunal.com/tags/Adsb/"},{"name":"Sdr ile uçak takibi","slug":"Sdr-ile-ucak-takibi","permalink":"https://mozanunal.com/tags/Sdr-ile-ucak-takibi/"}]},{"title":"[TR] SDR ile Bilgisayardan TV izlemek","slug":"sdr-ile-bilgisayardan-tv-izlemek","date":"2015-01-09T01:14:00.000Z","updated":"2023-01-18T11:16:34.258Z","comments":true,"path":"2015/01/sdr-ile-bilgisayardan-tv-izlemek/","link":"","permalink":"https://mozanunal.com/2015/01/sdr-ile-bilgisayardan-tv-izlemek/","excerpt":"","text":"Herkese Merhabalar! SDR için ilk uygulama olarak TV izleme uygulamasını seçtim. Çünkü bu modüller Tv alıcı modülleri olarak satılıyorlar. Bunu yapmak için 2 program seçeneğiniz var 1.si TVSharp, ikincisi ise SDR# + PAL / SECAM TV plugin. Program ve plugin aynı kişi tarafından yazılmıştır ve kullanımları benzerdir. Aşağıda programların kullanıldığı bir video hazırladım. Antenim ve evimin konumu kötü olduğu için yayın kalitesi çok kötü ama en azından yazılımsal olarak nasıl hazırlık yapılması gerektiğini anlatmaya çalıştım. Tekrar görüşmek üzere…","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"DSP","slug":"Signal-Processing/DSP","permalink":"https://mozanunal.com/categories/Signal-Processing/DSP/"}],"tags":[{"name":"Software Defined Radio","slug":"Software-Defined-Radio","permalink":"https://mozanunal.com/tags/Software-Defined-Radio/"},{"name":"SDR#","slug":"SDR","permalink":"https://mozanunal.com/tags/SDR/"},{"name":"SDR- Pal NTSC","slug":"SDR-Pal-NTSC","permalink":"https://mozanunal.com/tags/SDR-Pal-NTSC/"},{"name":"TVSharp","slug":"TVSharp","permalink":"https://mozanunal.com/tags/TVSharp/"}]},{"title":"[TR] Yeni Android Programım: Adres Defteri","slug":"yeni-android-programm-adres-defteri","date":"2015-01-08T00:46:00.000Z","updated":"2023-01-18T11:16:34.260Z","comments":true,"path":"2015/01/yeni-android-programm-adres-defteri/","link":"","permalink":"https://mozanunal.com/2015/01/yeni-android-programm-adres-defteri/","excerpt":"","text":"Herkese Merhabalar! Bu yazımda yaptığım Android programı sizlerle paylaşmak istiyorum. Programımın adı Adres Defteri, Size gerekli olan adresleri kolayca kaydetmenize daha sonra navigasyon için kullanmanızı veya başkalarıyla paylaşmanızı sağlayan ve bunu çok kolaylaştıran bir program. Adres Defteri Programımını buradan indirebilirsiniz.HProgramın kullanımını aşağıdan öğrenebilirsiniz. Gps bağlanınca GPS: yazan yerde bulunduğunuz yerin koordinantları çıkar. Daha sonra adresin ismi yazılır ve kaydet butonuna basılır. Kaydınız başarılı ise böyle bir mesaj alırsınız. Daha sonraki “Kaydedilmiş Adresi Aç” butonuna basarak daha önce kaydettiğiniz adresleri görebilirsiniz. Adresi seçecek olursanız bu şekilde ismi ve koordinatlarının ekranda çıktığını göreceksiniz. Haritada göstere basarak koordinatlarına Google Maps üzerinden ulaşıp navigasyon için kullanabilirsiniz. Ya da “Adresi Paylaş” butonuna basarak istediğiniz program üzerinden arkadaşlarınızla paylaşabilirsiniz","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"Android Programlama ve Oyun","slug":"Android-Programlama-ve-Oyun","permalink":"https://mozanunal.com/tags/Android-Programlama-ve-Oyun/"},{"name":"Adres Defteri","slug":"Adres-Defteri","permalink":"https://mozanunal.com/tags/Adres-Defteri/"},{"name":"Android program","slug":"Android-program","permalink":"https://mozanunal.com/tags/Android-program/"},{"name":"Navigasyon","slug":"Navigasyon","permalink":"https://mozanunal.com/tags/Navigasyon/"}]},{"title":"[TR] Software Defined Radioya Giriş","slug":"software-defined-radioya-giris","date":"2015-01-02T20:55:00.000Z","updated":"2023-01-18T11:16:34.259Z","comments":true,"path":"2015/01/software-defined-radioya-giris/","link":"","permalink":"https://mozanunal.com/2015/01/software-defined-radioya-giris/","excerpt":"Herkese Merhabalar!  \nBugünkü yazımda yeni bir hobimden bahsetmet istiyorum. Yeni hobim, “Software defined radio”. Bu aslında bir rf modulü, Farkı ise belli frekans aralığında dinleme yapabilmesi. Yani bu sayede farklı frekanslardaki radyo dalgalarını alıp inceleyebilir, çözümleyebilirsiniz. SDR hakkında deneysel bir şeyler yapmak isterseniz en iyi yöntem bilgisayar için ucuz tv alıcılarından almak.","text":"Herkese Merhabalar! Bugünkü yazımda yeni bir hobimden bahsetmet istiyorum. Yeni hobim, “Software defined radio”. Bu aslında bir rf modulü, Farkı ise belli frekans aralığında dinleme yapabilmesi. Yani bu sayede farklı frekanslardaki radyo dalgalarını alıp inceleyebilir, çözümleyebilirsiniz. SDR hakkında deneysel bir şeyler yapmak isterseniz en iyi yöntem bilgisayar için ucuz tv alıcılarından almak. Ben Aliexpress sitesinden 10 $ aldım. En ucuz SDR’ler genelde RTL2832U+R820T çip setlidir. Benim aldığım modül 25MHz - 1700MHz arası tarama yapabiliyor. Kendi anteni ve kumandasıyla beraber geldi. Genelde bu modullerle gelen antenlerle FMden başka bi şey dinleyebilmek pek mümkün olmuyor. Fakat geliştirilen uygun antenlerle Uluslararası Uzay İstasyonundan(ISS) bile veri alabilmek mümkün. Bunlardan kurulumdan sonra bahsedeceğim. Evet gelelim kullanma kısmına. Genelde yazılım olarak SDR# Programı kullanılıyor. Programın kullanımı oldukça kolay ve bir çok eklentisi bulunuyor. Bu yüzden ben de SDR# seçtim. Programı buradan indirebilirsiniz. Programın kurulumu oldukça basit o yüzden bu kısmı geçiyorum. Kurduktan sonra Driver değişimi yapmamız gerekiyor. Bunun için ise Zadig isimli programı kuallnabilirsiniz. Options’tan “Show All Devices” seçilir. Daha sonra “Bulk-In,Interface(Interface 0)” seçilir. Sağ taraftaki driver olarak “WinUSB” seçilir “Reinstall Driver” tıklanır ve uzun bir yükleme sürecinin ardından SDR# programı kullanıma hazırdır.İlk uygulama olarak FM dinleme uygulaması yaptım çünkü ekstra anten gerektirmiyor. Modulü denemek için ideal bir uygulama. Ayar butonuna tıklayıp ayarları aşağıdaki gibi yapıyoruz. Radio sekmesinin altına WFM seçilir. Alttaki ayarları bu uygulama için değiştirmeye gerek yok. Gerekli ayarlar yapıldığında SDR# görüntüsü bu şekilde olacak. Sinyalin yüksek olduğu yerleri kırmızı renkten farkedebilirsiniz. Farklı kanallar ayrı ayrı gözükecektir. Gelelim Sdr ile yapabileceklerinize: FM radio dinlenebilir, karasal TV yayınına bağlanabilir, ISS den veri almak, NOAA Hava durumu uydularından veri ve resim almak(Wxtoimg), amatör radyo bandında iletişim kurmak, uçakların koordinant verilerini almak, GPS uydularına bağlanmak gibi uygun frekans aralığında iletişim kurulabilir. Tabi ki uygun anten gereklidir. Bunlardan sonraki yazılarımda bahsedeceğim. Tekrar görüşmek üzere..","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"DSP","slug":"Signal-Processing/DSP","permalink":"https://mozanunal.com/categories/Signal-Processing/DSP/"}],"tags":[{"name":"Software Defined Radio","slug":"Software-Defined-Radio","permalink":"https://mozanunal.com/tags/Software-Defined-Radio/"},{"name":"SDR#","slug":"SDR","permalink":"https://mozanunal.com/tags/SDR/"},{"name":"SDR FM","slug":"SDR-FM","permalink":"https://mozanunal.com/tags/SDR-FM/"},{"name":"SDR Nedir","slug":"SDR-Nedir","permalink":"https://mozanunal.com/tags/SDR-Nedir/"}]},{"title":"[TR] Serial Port Grapher","slug":"serial-port-grapher","date":"2014-12-23T00:59:00.000Z","updated":"2023-01-18T11:16:34.258Z","comments":true,"path":"2014/12/serial-port-grapher/","link":"","permalink":"https://mozanunal.com/2014/12/serial-port-grapher/","excerpt":"","text":"Herkese Merhabalar,İlk yazılarımdan birinde seri port üzerinden grafik çizen bir programın C#’ta nasıl yazılabileceğini anlatmıştım(Buradan ulaşabilirsiniz.) Bu yazımda ise programın derlenmiş ve setup haline getirilmiş halini paylaşıyorum. Fark ettim ki bir sürü insan böyle bir programa ihtiyaç duyuyormuş. Bu program sayesinde Arduinonuzdan(başka işlemciler veya boardlar da olabilir.) veya herhangi bir serial port cihazından gönderdiğiniz “string” formattındaki verilerin gerçek zamanlı olarak grafiğini çizdirebilirsiniz. Tek dikkat etmeniz gereken gelen verinin1$,data1,data2,data3, şeklinde olmasıdır aksi takdirde program gelen veriyi dikkate almaz. Programla alakalı iyi, kötü görüşlerinizi veya sorunları, bugları bana yollayabilirsiniz.Programı buradan indirebiliriniz Programın kaynak koduna buradan ulaşabilirsiniz.","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"C#","slug":"C","permalink":"https://mozanunal.com/tags/C/"},{"name":"Arduino grafik","slug":"Arduino-grafik","permalink":"https://mozanunal.com/tags/Arduino-grafik/"},{"name":"C# gerçek zamanlı grafik","slug":"C-gercek-zamanli-grafik","permalink":"https://mozanunal.com/tags/C-gercek-zamanli-grafik/"},{"name":"C# grafik","slug":"C-grafik","permalink":"https://mozanunal.com/tags/C-grafik/"},{"name":"Serial Port","slug":"Serial-Port","permalink":"https://mozanunal.com/tags/Serial-Port/"}]},{"title":"[TR] Bakış Açısı Tabanlı 3 Boyutlu Görüş","slug":"baks-acs-tabanl-3-boyutlu-gorus","date":"2014-12-09T16:13:00.000Z","updated":"2023-01-18T11:16:34.252Z","comments":true,"path":"2014/12/baks-acs-tabanl-3-boyutlu-gorus/","link":"","permalink":"https://mozanunal.com/2014/12/baks-acs-tabanl-3-boyutlu-gorus/","excerpt":"","text":"Herkese Merhabalar, Bu yazımda size uzun zamandır üzerinde araştırmalar yaptığım ve bir şeyler üretmek istediğim 3 boyutlu görme konusunda yaptığım programdan bahsedeceğim. Bu program sayesinde ekstra hiç bir ekipman kullanmadan 2 boyutlu bilgisayar ekranını 3 boyutlu görme uygulamasını gerçekleştirebileceğimiz bir şeye dönüştürüyoruz. Bunu nasıl yapıyor diye soracak olursanız görüntü işleme sayesinde!. Programda webcam üzerinden yüz tespiti yapılıyor ve ekrana nereden baktığı tespit ediliyor. Hesaplanan bu açı daha sonra kullandığım 3 boyut kütüphanesi olan OpenGL’in kamerasını ayarlamak için kullanılıyor. böylece ekrana bakış yönünüze göre değişen bir 3D görme uygulaması hazırlanmış oluyor. Programın tanıtım videosu aşağıdadır. Çizdiğim grafikler çok iyi değil malesef bu konuda çok bilgili olmadığımdan. Programın çalışma mantığını anlatmak için küpün arkasına webcamden aldığım görüntüyü koydum. Açının tam olarak nasıl değiştiğini anlatmak için. Tekrar görüşmek üzere…","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"Image Processing","slug":"Signal-Processing/Image-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/Image-Processing/"}],"tags":[{"name":"3D görüş","slug":"3D-gorus","permalink":"https://mozanunal.com/tags/3D-gorus/"},{"name":"3D view","slug":"3D-view","permalink":"https://mozanunal.com/tags/3D-view/"},{"name":"Image Processing","slug":"Image-Processing","permalink":"https://mozanunal.com/tags/Image-Processing/"},{"name":"Opencv 3 boyutlu görme","slug":"Opencv-3-boyutlu-gorme","permalink":"https://mozanunal.com/tags/Opencv-3-boyutlu-gorme/"},{"name":"Processing","slug":"Processing","permalink":"https://mozanunal.com/tags/Processing/"}]},{"title":"[TR] Linuxta Kullanabileceğiniz 10 Yararlı Program","slug":"linuxta-kullanabileceginiz-10-yararl","date":"2014-12-03T04:30:00.000Z","updated":"2023-01-18T11:16:34.256Z","comments":true,"path":"2014/12/linuxta-kullanabileceginiz-10-yararl/","link":"","permalink":"https://mozanunal.com/2014/12/linuxta-kullanabileceginiz-10-yararl/","excerpt":"Herkese Merhabalar,\nBugünkü yazımda Linuxta kullanabileceğiniz bir kaç yararlı programdan bahsetmek istiyorum. Bu programlar windows kullanıcılarının aşina olduğu, güzel alternatif programlar. Ben de kullandığım bu programları sizinle paylaşmak istedim. Yani öyle Linux’taki en iyi 10 program bunlar, hepsi sıfır hatalı diye iddalı bir başlıkla çıkmıyorum kaşınıza :D. Neyse programlara geçelim.","text":"Herkese Merhabalar, Bugünkü yazımda Linuxta kullanabileceğiniz bir kaç yararlı programdan bahsetmek istiyorum. Bu programlar windows kullanıcılarının aşina olduğu, güzel alternatif programlar. Ben de kullandığım bu programları sizinle paylaşmak istedim. Yani öyle Linux’taki en iyi 10 program bunlar, hepsi sıfır hatalı diye iddalı bir başlıkla çıkmıyorum kaşınıza :D. Neyse programlara geçelim. İlk program Ubuntu Software Center. Bu program üzerinden Ubuntu’da çalışabilen bir çok programa ulaşabiliyorsunuz ve onları indirip kurabiliyorsunuz. Güzel şekilde kategorize edilmiş ve eklenti seçeneklerini seçme özelliği eklenmiş gerçekten hoş ve işleri kolaylaştıran bir program. İkincisi, olmazsa olmaz programımız Mozilla Firefox. İnternete girmek tabi ki Ubuntu’da da sıkça kullanılan bir eylem. Mozilla bu iş için en iyi araçlardan biri. Bir tarayıcıdan istenilen tüm özelliklere sahip. Sıradaki programımız GIMP. Bu bir resim düzenleme programı. Özellikleri ise ünlü Photoshop programı ile yarışır düzeyde. Efektleri, filtreleri, layerlarla çalışabilme özellikleri hoş gerçekten. Evveeet! 4. Sıradaki programımız Phyton IDLE. Phyton 2 ve 3 için ayrı versiyonları mevcut. Linuxun anadillerinden biri olan Phyton’da kod yazmak için sayısız IDE seçeneğinizden biri. Basitliğiyle beni cezbetti. Programı açmışken de bir “Hello World” yazmamak olmaz dedim, yazdım. Programımız Libre Office. Bu program Microsoft Office alternatifi olarak düşünülmüş. Onun dosyalarını açabiliyor, değiştirebiliyor. Nerdeyse tüm Office dosya türlerini destekliyor. ] Programımız gerçekten bedava alternatifleri arasında en iyi program. İsmi Blender. Bu programla 3D modelleme, animasyonlar, efektler yapabilirsiniz. Hatta mevcut oyun motoru ile kendi 3D oyununuzu yapabilirsiniz. Program gerçekten çok professyonel, modelleme, texturing, animasyon yapma konusunda çok başarılı. Başka platformların kullanıcısı olsanız bile denemenizi şiddetle tavsiye ediyorum. Arduino, Open Source camiasının en popüler platformlarından biri. Arduinoyu bilmeyenler için anlatayım. Hobi elektronikçileri için üretilmiş mikro denetleyici kartı. Oldukça popüler ve çok çeşitli uygulamaları mevcut. Bu program ise o karta kod yazmaya ve derleyip yüklemeye yarıyor. Java tabanlı bir program olduğu için Linux’ta sorunsuz çalışıyor. Vlc player medya dosyaları oynatmada (her türlü video ve ses dosyası) Windows’ta olduğu gibi Ubuntu’da da yanımızda. 9.Programımız Ubuntu terminal programı. Linux tabanlı işletim sistemlerinde aslında çoğu iş terminalden yapılıyor. Ubuntuda bu biraz azaltılmış fakat yine de oldukça lazım olan bir program zaten dahili olarak bulunuyor. Bir çok işlem buradan yürütülüyor. Mesela aşağıdaki kodda ben ekran görüntüsünü almıştım. Ve son programımız, Eclipse. Bu program açık kaynak kodlu bir IDE. Bir çok programlama dilini destekliyor. En çok Java dilinde program geliştirmek için kullanılıyor. Oldukça kullanışlı ve güçlü bir yazılım geliştirme aracı son olarak, bunu da tavsiye ediyorum. Tekrar görüşmek üzeree… Not: Bu arada geçen yazımda Flash belleğe ubuntu kurmaktan bahsetmiştim fakat o şekilde kurduktan sonra Türkçe klavye ayarlamasını manuel yapmak gerekiyor. Ben de bu eksik olmuş gibi hissettim.Anlatayım o zaman;İlk önce En yazan yere tıklayıp oradan “Text Entry” seçiyoruz. Daha sonra + tuşuna basıp kullandığımız klavyeyi “Add” tuşu ile ekliyoruz. Yine aynı yere tıklayarak En ile Tr’yi değiştiriyoruz böylece klavye girişimiz Türkçe klavye olmuş oluyor. Masaüstümüzün son hali böyle oluyor. Güle güle kullanın.","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://mozanunal.com/tags/Linux/"},{"name":"Blender","slug":"Blender","permalink":"https://mozanunal.com/tags/Blender/"},{"name":"Code Blocks","slug":"Code-Blocks","permalink":"https://mozanunal.com/tags/Code-Blocks/"},{"name":"Eclipse","slug":"Eclipse","permalink":"https://mozanunal.com/tags/Eclipse/"},{"name":"Linux Türkçe Klavye","slug":"Linux-Turkce-Klavye","permalink":"https://mozanunal.com/tags/Linux-Turkce-Klavye/"},{"name":"Linuxta Kullanabileceğiniz 10 Yararlı Program","slug":"Linuxta-Kullanabileceginiz-10-Yararli-Program","permalink":"https://mozanunal.com/tags/Linuxta-Kullanabileceginiz-10-Yararli-Program/"},{"name":"VLC player","slug":"VLC-player","permalink":"https://mozanunal.com/tags/VLC-player/"}]},{"title":"[TR] Flash Belleğe Ubuntu Kurmak","slug":"flash-bellege-ubuntu-kurmak","date":"2014-12-03T01:28:00.000Z","updated":"2023-01-18T11:16:34.254Z","comments":true,"path":"2014/12/flash-bellege-ubuntu-kurmak/","link":"","permalink":"https://mozanunal.com/2014/12/flash-bellege-ubuntu-kurmak/","excerpt":"","text":"Merhabalar,Bugün size flash belleğe ubuntu kurmaktan bahsedeceğim. Open source seven insanlar için Linux her zaman en çekici gelen işletim sistemi olmuştur. Fakat program desteği, driver sorunları derken linux tek işletim sistemi olarak kullanmak oldukça zor bir olay haline geliyor. İşte bunun için çok güzel çözümler var. Bunlardan bir tanesi aynı hard disk üzerine ikinci bir işletim sistemi kurmak. Bu çözüm bana daha zor ve karışık geliyor, benim tercih ettiğim ise bir flash belleğe Ubuntu kurup gerekli zamanlarda bilgisayarı onun üzerinden boot ederek Linuxun özgür dünyasına dalmak. Evet anlatıma geçersem aslında çok basit olduğunu göreceksiniz. Gerekenler Universal USB Installer Programı (indirmek için tıklayınız.) Ubuntu ISO Dosyası(indirmek için tıklayınız.) Flash bellek en az 2 GB Universal Usb Installer programı kurulum gerektirmiyor ve neredeyse tüm Linux dağıtımlarını destekliyor diğer dağıtımları da deneyebilirsiniz. Belleğinizi takıp ve gerekli dosyaları indirdikten sonra programı çalıştırabilirsiniz. Şöyle bir pencere sizi karşılayacak; Aşağıdakine benzer şekilde doldurabilirsiniz. 1. Boşluğa istediğiniz linux dağıtımı 2. Boşluğa ISO dosyasını gösteriyoruz. 3. Boşluğa ise üzerinde linux kurmak istediğiniz flash belleği seçiyorsunuz. Bu adımda dikkatli olmanız şiddetle tavsiye olunur. 4. Olarak da depolama boyutunu flash diskinizin boyutu-2 GB seçebilirsiniz. Formata basarsanız daha iyi olur ama içindeki dosyalarınız gider Az kaldı bitiyor sabredin :) Eveet artık Linux’unuzu açabilirsiniz. Bilgisayarınızı yeniden başlatın ve anakart ayarlarınıza girip boot device olarak flash belleğinizi seçebilirsiniz. Artık yanında taşıyabileceğiniz ve bu ayarı yapabileceğiniz her yerde kullanabileceğiniz bir bilgisayarınız var. Güle güle kullanın… Not: Beğendiniz mi o zaman Linux’ta kullanabileceğiniz 10 güzel program yazımı buradan ziyaret edin.","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://mozanunal.com/tags/Linux/"},{"name":"flash belleğe ubuntu yükleme","slug":"flash-bellege-ubuntu-yukleme","permalink":"https://mozanunal.com/tags/flash-bellege-ubuntu-yukleme/"}]},{"title":"[TR] Kamera ile Araç Sayısı Takibi","slug":"kamera-ile-arac-says-takibi","date":"2014-11-21T01:41:00.000Z","updated":"2023-01-18T11:16:34.256Z","comments":true,"path":"2014/11/kamera-ile-arac-says-takibi/","link":"","permalink":"https://mozanunal.com/2014/11/kamera-ile-arac-says-takibi/","excerpt":"","text":"Herkese Merhabalar! Bugün size uzun süredir üzerinden uğraştığım bir projeden bahsetmek istiyorum. Projenin amacı kamera ile bir yoldan geçen araç sayını saymak. Ben de bunu okulumun önündeki caddeden çektiğim videoda gerçekleştirdim. İleriki aşamalarda insan sayma uygulaması da geliştirmek istiyorum. Araç uygulaması da hız belirleyecek şekilde veya araç büyüklüğüne, markasına göre sınıflandırma yapacak şekilde geliştirilebilir. Proje Emgucv kütüphanesinin Video Survilance modulü kullanılarak yapılmıştır. Tekrar görüşmek dileğiyle…","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"Image Processing","slug":"Signal-Processing/Image-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/Image-Processing/"}],"tags":[{"name":"C#","slug":"C","permalink":"https://mozanunal.com/tags/C/"},{"name":"Image Processing","slug":"Image-Processing","permalink":"https://mozanunal.com/tags/Image-Processing/"},{"name":"EmguCV","slug":"EmguCV","permalink":"https://mozanunal.com/tags/EmguCV/"},{"name":"Araç sayısı saydırma","slug":"Arac-sayisi-saydirma","permalink":"https://mozanunal.com/tags/Arac-sayisi-saydirma/"},{"name":"Kamera ile Araç Sayısı Takibi","slug":"Kamera-ile-Arac-Sayisi-Takibi","permalink":"https://mozanunal.com/tags/Kamera-ile-Arac-Sayisi-Takibi/"},{"name":"opencv","slug":"opencv","permalink":"https://mozanunal.com/tags/opencv/"}]},{"title":"[TR] Processing ile Android Telefonda Uygulama Geliştirme","slug":"processing-ile-android-telefonda","date":"2014-11-09T04:27:00.000Z","updated":"2023-01-18T11:16:34.258Z","comments":true,"path":"2014/11/processing-ile-android-telefonda/","link":"","permalink":"https://mozanunal.com/2014/11/processing-ile-android-telefonda/","excerpt":"","text":"Herkese Merhabalar! Processing dili son yıllarda Arduino ile popülerleşmeye başlayan görsel programlama dilidir. Hızlı prototipleme için geliştirilmiştir Arduinoya görsel arayüz hazırlama için sıklıkla kullanılmaktadır. Processing Windows, Linux, Android, Mac her platformda çalışmaktadır. Kendi program geliştirme arayüzü bulunmaktadır. Bu programlama diliyle kolay bir şekilde 2D, 3D görsel uygulamalar yapılabilir. Ben bugünkü yazımda nasıl Android telefonda Android için nasıl Processing diliyle görsel uygulama yapılacağını anlatacağım. Öncelikle Google Playden uygulama geliştirmek için gerekli IDE’yi(geliştirme ortamını) indiriyoruz. Bir çok çeşit geliştirme ortamı var fakat ben APDE uygulamasını tercih ettim. Bu uygulama ile processing kodu yazıp onu derleyip telefon üzerinde deneyebiliyoruz. APDE programını Android telefonumuza indirip kuruyoruz. Program kurulunca açıp sağ üst köşedeki butondan “new sketch” seçebilirsiniz. Yeni bir sketch açtıktan sonra aşağıdaki fonksiyonları yazabilirsiniz. Bu fonksiyonlar Processing dilinin temel fonksiyonları ve her sketchte var olur. Ayarla alakalı kodlar “setup” kısmına, her zaman dönecek kodlar ise “draw” kısmına yazılır. İlk uygulamamızı yazmaya hazırız. İlk önce setup kısmında pencere büyüklüğümüzü ayarladık. Draw kısmına ise sürekli dönecek kodu yazıyoruz. Bu kodda dokunduğumuz yere bir elips çizmesini istemiş oluyoruz. Çalıştırma tuşuna basıyoruz. Programımızı bir .apk dosyası haline getirip telefonumuza yükleyecek. İlk programımızdan görüntüler. Processing ile 3 boyutlu uygulama yapmak da mümkün, aşağıda bir küp çizmek için gerekli kodu görebilirsiniz. Ayrıca camera değişkenlerini mouseX ve mouseY değerlerine atayarak dokunmatik ekrana dokunma ile küpü görüş açısı değiştirilir. Daha karmaşık şekilleri çizmek için ise vertex ile çizim gibi yöntemler kullanılır. Processing dili Opengl destekli olduğu için çoğu opengl fonksiyonu kullanılabilir. Oldukça güçlü olan bu kütüphane ile sayısız ve karmaşık bir çok görsel uygulama yapılabilir.","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"Android Programlama ve Oyun","slug":"Android-Programlama-ve-Oyun","permalink":"https://mozanunal.com/tags/Android-Programlama-ve-Oyun/"},{"name":"Processing","slug":"Processing","permalink":"https://mozanunal.com/tags/Processing/"},{"name":"Android Processing IDE","slug":"Android-Processing-IDE","permalink":"https://mozanunal.com/tags/Android-Processing-IDE/"},{"name":"Processing Android","slug":"Processing-Android","permalink":"https://mozanunal.com/tags/Processing-Android/"}]},{"title":"[TR] IMU Açılarının 3 Boyutlu Olarak Görsellenmesi","slug":"imu-aclarnn-3-boyutlu-olarak","date":"2014-11-07T12:15:00.000Z","updated":"2023-04-09T21:12:19.966Z","comments":true,"path":"2014/11/imu-aclarnn-3-boyutlu-olarak/","link":"","permalink":"https://mozanunal.com/2014/11/imu-aclarnn-3-boyutlu-olarak/","excerpt":"Herkese Merhabalar!\nBu yazımda size hava araçlarının en temel elektronik ekipmanı olan IMU modullerinden bahsetmek istiyorum. IMU modullerinin hayati önem taşımasının sebebi, modüllerin yönelim açılarını hesaplamak için kullanılmasıdır. En büyük yolcu uçağından, roketten en küçük bir quadrokoptere kadar tüm hava araçları stabil ve sağlıklı bir uçuş için bu modullerden birine sahip olmalıdırlar.","text":"Herkese Merhabalar! Bu yazımda size hava araçlarının en temel elektronik ekipmanı olan IMU modullerinden bahsetmek istiyorum. IMU modullerinin hayati önem taşımasının sebebi, modüllerin yönelim açılarını hesaplamak için kullanılmasıdır. En büyük yolcu uçağından, roketten en küçük bir quadrokoptere kadar tüm hava araçları stabil ve sağlıklı bir uçuş için bu modullerden birine sahip olmalıdırlar.IMU ingilizcedeki “Inertial Mesurament Unit” kelime grubunun kısaltılmış halidir. IMU ile bir cismin uzaydaki 3 boyutlu yönelimi bulunabilir. 3 boyutlu yönelimi anlatmanın en kolay yolu Euler Açılarını kullanmaktır. Havacılık sektöründe sıklıkla Euler açılarının özelleşmiş bir versiyonu olan “Yaw, Pitch, Roll” açıları kullanılmaktadır. Bir nesnenin uzaydaki yönelimini bulmak için 3 temel sensör kullanılır. Bunlar ivmeölçer, gyro ve magnometredir. Bu üç sensörün bir arada kullanılmasının nedeni şudur: İvme ölçer ile Pitch ve Roll açısı tespit edilebilir fakat hareket anında gürültü oluşur ve doğru bilgi elde edilemez, Gyro ise 3 eksendeki açısal hızları verir. Eğer ilk açı bilinmiyorsa sadece gyro ile şu anki açılar hesaplanamaz, sadece açısal hız üzerinden açısal açı değişimi hesaplanabilir. Gyronun ikinci kötü özelliği ise “Drift” özelliğidir. Gyro sabit durun bir cisimde bile küçük de olsa açısal hızlar hesaplar. Bu nedenle sadece Gyroya bağlı sistemlerde hesaplanan açılar yavaş yavaş kayar. Bunu engellemek için bazı filtreler kullanılır. Bu filtrelerin amacı Gyro üzerinden verileri alıp ivme ölçer üzerinden bu verileri düzeltmektir. Böylece drift engellenmiş olur ve sadece ivmeölçere bağlı olunmadığı için hareket halindeki gürültü sonuçlardan kurtulunmuş olur. Fakat ivmeölçer sadece pitch ve roll açılarını hesaplayabildiği için yaw eksenine referans olamaz. Yaw eksenine referans olması için kullanılan modül magnometredir. Bu sayede değişik algoritmalar ve filtreler kullanılarak gyro üzerinden hesaplanan açısal değişimler, pitch ve roll eksenlerinde ivmeölçer, yaw ekseninde ise magnometre tarafından düzeltilerek yönelim açılarının hesaplanması sağlanır. Yaw, Pitch, Roll açıları yani Euler açıları bazı durumlarda 3 boyutlu yönelimi açıklamada yetersiz kalır. Özetlemek gerekirse rotasyonlar sonucu eğer eksenler üst üste gelirse özgürlük derecesi kaybı yaşanır. Rotasyon da 2 boyutlu uzaya sıkışmak zorunda kalır. Bu duruma Gimbal Lock denir. Gimbal Lock kavramının açıklandığı şu videoyu izleyebilirsiniz. İşte bu gimbal lock sorunu ortadan kaldırmak için 3 boyutlu yönelimi göstermek için yeni yöntemler bulunmuştur. Bunlardan başlıcaları “Quaternion “ ve “ Direction Cosine Matrix” yöntemleridir. Artık yönelimi göstermek için 3 açı yerine “Quaternion”da 4 değişkenli bir vektör ve “Direction Cosine Matrix”te 3x3’lük bir matris ve çok daha karışık algoritmalar kullanılır. IMU sensörlerin beraber çalışması için kullanılan bazı algoritmaları aşağıda kısa bilgilerle birlikte yazacağım. Complementary Filter: Sabit bir ağırlıklı ortalama oranıyla gyro verileri ile referans verilerin ortalaması alınması yöntemidir. En basit algoritmadır. Genelde hobi amaçlı ve işin mantığını kavrama amaçlı uygulamalarda kullanılır. Kalman Filter: Karmaşık bir algoritması vardır değişken ağırlıklı ortalama oranıyla hesaplama yapar, bu oranı hesaplamak için çok farklı yöntemler kullanabilir. Mahony Madwick Filter: 3 sensörden alınan verilerle quaternion hesaplamak için kullanılan filtredir. Direction Cosine Matrix: Basitçe yönelim vektörü ile 3 koordinat ekseni arasındaki açıların kosinüslerinden oluşan matristir. Ben de bu anlattıklarımı somutlaştırmak adına İmu açılarının 3 boyutlu görsellenmesi üzerine bir proje yaptım. Bu projede ne yazık ki Imu değerlerini kendim hesaplamadım FreeIMU kütüphanesini kullandım. Görselleme Gimbal Lock sorunundan açınmak için Quaternion kullanılarak yapıldı. Sensör olarak MPU6050 sensörünü kullandım. İçinde 3 eksen gyro ve 3 eksen ivme ölçer bulundurmakta. 3 boyutlu görselleme için processing programa dilinde yazılan bir uygulamayı kullandım. Projenin kaynak kodunu buradan indirebilirsiniz.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Drone","slug":"Electronics/Drone","permalink":"https://mozanunal.com/categories/Electronics/Drone/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"Hava Araçları","slug":"Hava-Araclari","permalink":"https://mozanunal.com/tags/Hava-Araclari/"},{"name":"IMU Açılarının 3 Boyutlu Olarak Görsellenmesi","slug":"IMU-Acilarinin-3-Boyutlu-Olarak-Gorsellenmesi","permalink":"https://mozanunal.com/tags/IMU-Acilarinin-3-Boyutlu-Olarak-Gorsellenmesi/"},{"name":"IMU nedir","slug":"IMU-nedir","permalink":"https://mozanunal.com/tags/IMU-nedir/"},{"name":"Inertial measurement unit","slug":"Inertial-measurement-unit","permalink":"https://mozanunal.com/tags/Inertial-measurement-unit/"},{"name":"mpu6050","slug":"mpu6050","permalink":"https://mozanunal.com/tags/mpu6050/"}]},{"title":"[TR] Arduino Joystick Kontrol","slug":"arduino-joystick-kontrol","date":"2014-10-28T22:21:00.000Z","updated":"2023-01-18T11:16:34.252Z","comments":true,"path":"2014/10/arduino-joystick-kontrol/","link":"","permalink":"https://mozanunal.com/2014/10/arduino-joystick-kontrol/","excerpt":"Herkese Merhabalar!Bugünkü yazımda Arduino ile Joystick Kontrol projemden bahsetmek istiyorum. Bu projede, 2 eksenli bir joystick ile 2 eksenli bir gimbalı kontrol ettim. Kontrolcü olarak Arduino Nano kullandım. Bütün Arduino çeşitleri kullanılabilir Nanoyu küçük olduğu ve usb üzerinden kolay programlanabildiği için tercih ettim.","text":"Herkese Merhabalar!Bugünkü yazımda Arduino ile Joystick Kontrol projemden bahsetmek istiyorum. Bu projede, 2 eksenli bir joystick ile 2 eksenli bir gimbalı kontrol ettim. Kontrolcü olarak Arduino Nano kullandım. Bütün Arduino çeşitleri kullanılabilir Nanoyu küçük olduğu ve usb üzerinden kolay programlanabildiği için tercih ettim.Breadboard üzerine basit bir devre kurdum. Arduinonun standart servo kütüphanesini kullanarak kodu yazdım. Joystickten veri almak için Arduinonun analaog giriş pinlerini kullandım. Analog girişler 1 veya 0 dan farklı değerler okumak için kullanılır. Mesela 10 bitlik bir analog girişten 0-1024 arası değerler okunabilir. Aşağıda bağlantılar ve kaynak kodunu paylaşıyorum. Tekrar görüşmek üzere. Bağlantılar Arduino nano güç için usb üzerinden bilgisayara bağlıservolar; kırmızı kablo&gt; Arduino 5V siyah kablo&gt; GND sarı kablo&gt; Dijital pin 8 ve 9 Joystick modulün; GND&gt; Arduino GND 5V&gt; Arduino 5V X Axis&gt; Analog pin 4 Y Axis&gt; Analog pin 5 Programın arduino kodu: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566#define X_AXIS A4 #define Y_AXIS A5 #include &lt;Servo.h&gt; int Xvalue; int Yvalue; Servo myservo1; double pos1 = 90; Servo myservo2; double pos2 = 90; void setup() &#123; delay(5); myservo1.attach(9); myservo2.attach(8); Serial.begin(9600); &#125; void loop() &#123; Xvalue = analogRead (X_AXIS); Serial.print (Xvalue ); Yvalue = analogRead (Y_AXIS); Serial.print (Yvalue); if(Xvalue&lt;200) &#123; if(pos1&lt;150) &#123; pos1=pos1+2; myservo1.write(pos1); delay(15); &#125; &#125; else if(Xvalue&gt;800) &#123; if(pos1&gt;150) &#123; pos1=pos1-2; myservo1.write(pos1); delay(15); &#125; &#125; if(Yvalue&gt;800) &#123; if(pos2&gt;20) &#123; pos2=pos2-2; myservo2.write(pos2); delay(15); &#125;&#125; else if(Yvalue&lt;200) &#123; if(pos2&lt;160) &#123; pos2=pos2+2; myservo2.write(pos2); delay(15); &#125; &#125; &#125;","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"Arduino Joystick Kontrol","slug":"Arduino-Joystick-Kontrol","permalink":"https://mozanunal.com/tags/Arduino-Joystick-Kontrol/"},{"name":"Full Source code avaible","slug":"Full-Source-code-avaible","permalink":"https://mozanunal.com/tags/Full-Source-code-avaible/"},{"name":"Joystick","slug":"Joystick","permalink":"https://mozanunal.com/tags/Joystick/"}]},{"title":"[TR] Bilgisayardan Gimbal Kontrolü","slug":"bilgisayardan-gimbal-kontrolu","date":"2014-10-20T23:47:00.000Z","updated":"2023-01-18T11:16:34.252Z","comments":true,"path":"2014/10/bilgisayardan-gimbal-kontrolu/","link":"","permalink":"https://mozanunal.com/2014/10/bilgisayardan-gimbal-kontrolu/","excerpt":"Herkese Merhabalar!Bugün size bilgisayardan gimbal kontrolü projemden bahsedeceğim. Bu projedeki amacım C# ile yazdığım bir arayüzde gimbali kontrol etmek. Gimbal ve bilgisayar arasında haberleşmeyi sağlaması ve servoları kontrol etmesi için bir arduino yerleştirdim. C# arayüzünün görevi, tıkladığım butonlara göre arduinoya “serial port” üzerinden gönderilecek karakteri değiştirmesidir.","text":"Herkese Merhabalar!Bugün size bilgisayardan gimbal kontrolü projemden bahsedeceğim. Bu projedeki amacım C# ile yazdığım bir arayüzde gimbali kontrol etmek. Gimbal ve bilgisayar arasında haberleşmeyi sağlaması ve servoları kontrol etmesi için bir arduino yerleştirdim. C# arayüzünün görevi, tıkladığım butonlara göre arduinoya “serial port” üzerinden gönderilecek karakteri değiştirmesidir.Arduino da serial porttan aldığı karaktere göre servoları yönetir. Bilgisayardan Gimbal Kontrolü Arayüz programını C# kodlarının bu proje için örnek kısımlar aşağıdaki gibidir.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263private void timer1_Tick(object sender, EventArgs e)&#123; serialPort1.Write(label1.Text);&#125;private void connect_Click(object sender, EventArgs e)&#123; timer1.Enabled=true; try &#123; serialPort1.Open(); &#125; catch (Exception hata) &#123; MessageBox.Show(“Hata:” + hata.Message); &#125;&#125;private void button5_Click(object sender, EventArgs e)&#123; label1.Text = “O”;&#125;private void button1_MouseUp(object sender, MouseEventArgs e)&#123; label1.Text = “O”;&#125;private void button3_MouseUp(object sender, MouseEventArgs e)&#123; label1.Text = “O”;&#125;private void button4_MouseUp(object sender, MouseEventArgs e)&#123; label1.Text = “O”;&#125;private void button2_MouseUp(object sender, MouseEventArgs e)&#123; label1.Text = “O”;&#125;private void button1_MouseDown(object sender, MouseEventArgs e)&#123; label1.Text = “A”;&#125;private void button3_MouseDown(object sender, MouseEventArgs e)&#123; label1.Text = “B”;&#125;private void button4_MouseDown(object sender, MouseEventArgs e)&#123; label1.Text = “C”;&#125;private void button2_MouseDown(object sender, MouseEventArgs e)&#123; label1.Text = “D”;&#125;","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"C#","slug":"C","permalink":"https://mozanunal.com/tags/C/"},{"name":"Hava Araçları","slug":"Hava-Araclari","permalink":"https://mozanunal.com/tags/Hava-Araclari/"},{"name":"Arduino C#","slug":"Arduino-C","permalink":"https://mozanunal.com/tags/Arduino-C/"},{"name":"Bilgisayardan Kontrol","slug":"Bilgisayardan-Kontrol","permalink":"https://mozanunal.com/tags/Bilgisayardan-Kontrol/"},{"name":"gimbal","slug":"gimbal","permalink":"https://mozanunal.com/tags/gimbal/"}]},{"title":"[TR] IMU ile Kamera Gimbalı Kontrolü","slug":"imu-ile-kamera-gimbal-kontrolu","date":"2014-10-18T15:22:00.000Z","updated":"2023-04-09T21:12:28.946Z","comments":true,"path":"2014/10/imu-ile-kamera-gimbal-kontrolu/","link":"","permalink":"https://mozanunal.com/2014/10/imu-ile-kamera-gimbal-kontrolu/","excerpt":"Herkese Merhabalar! Bu projemin amacı MPU6050 ile hesaplanan pitch ve roll açıları ile 2 eksenli bir gimbalı kontrol etmek. MPU6050 açılarını hesaplamak için FreeIMU kütüphanesini kullandım. Buradan indirebilirsiniz. Aldığım açılar belli bir değerden büyükse servoların açılarını kademeli olarak azalttım veya artırdım.","text":"Herkese Merhabalar! Bu projemin amacı MPU6050 ile hesaplanan pitch ve roll açıları ile 2 eksenli bir gimbalı kontrol etmek. MPU6050 açılarını hesaplamak için FreeIMU kütüphanesini kullandım. Buradan indirebilirsiniz. Aldığım açılar belli bir değerden büyükse servoların açılarını kademeli olarak azalttım veya artırdım.Bu sayede gimbal, MPU6050yi eğdiğim yönde dönmüş oldu. Projemin tanıtım videosunu aşağıdan izleyebilirsiniz. Arkadaşlar projemin Arduino kodunu da paylaşıyorum. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980#include &lt;I2Cdev.h&gt;#include &lt;MPU60X0.h&gt;#include &lt;EEPROM.h&gt;//#define DEBUG#include “DebugUtils.h”#include “CommunicationUtils.h”#include “FreeIMU.h”#include &lt;Wire.h&gt;#include &lt;SPI.h&gt;#include &lt;Servo.h&gt;int raw_values[9];Servo myservo1;int pos1 = 90;Servo myservo2;int pos2 = 90;float ypr[3]; // yaw pitch rollfloat val[9];// Set the FreeIMU objectFreeIMU my3IMU = FreeIMU();void setup() &#123; Serial.begin(115200); Wire.begin(); myservo1.attach(9); myservo2.attach(8); delay(5); my3IMU.init(); // the parameter enable or disable fast mode delay(5);&#125;void loop()&#123; my3IMU.getYawPitchRoll(ypr); Serial.print(“Yaw: “); Serial.print(ypr[0]); Serial.print(“ Pitch: “); Serial.print(ypr[1]); Serial.print(“ Roll: “); Serial.print(ypr[2]); Serial.println(“”); if(ypr[1]&gt;20) &#123; if(pos1&lt;150) &#123; pos1=pos1+2; myservo1.write(pos1); delay(15); &#125; &#125; else if(ypr[1]&lt;-20) &#123; if(pos1&gt;30) &#123; pos1=pos1-2; myservo1.write(pos1); delay(15); &#125; &#125; if(ypr[2]&gt;20) &#123; if(pos2&gt;30) &#123; pos2=pos2-2; myservo2.write(pos2); delay(15); &#125; &#125; if(ypr[2]&lt;-20) &#123; if(pos2&lt;150) &#123; pos2=pos2+2; myservo2.write(pos2); delay(15); &#125; &#125; delay(15);&#125;","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Drone","slug":"Electronics/Drone","permalink":"https://mozanunal.com/categories/Electronics/Drone/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"Hava Araçları","slug":"Hava-Araclari","permalink":"https://mozanunal.com/tags/Hava-Araclari/"},{"name":"mpu6050","slug":"mpu6050","permalink":"https://mozanunal.com/tags/mpu6050/"},{"name":"arduino servo kontrol","slug":"arduino-servo-kontrol","permalink":"https://mozanunal.com/tags/arduino-servo-kontrol/"},{"name":"gimbal kontrol","slug":"gimbal-kontrol","permalink":"https://mozanunal.com/tags/gimbal-kontrol/"},{"name":"IMU","slug":"IMU","permalink":"https://mozanunal.com/tags/IMU/"}]},{"title":"[TR] Yüz Tanıma ile Güvenlik (Passface)","slug":"yuz-tanma-ile-guvenlik-passface","date":"2014-10-14T14:39:00.000Z","updated":"2023-01-18T11:16:34.260Z","comments":true,"path":"2014/10/yuz-tanma-ile-guvenlik-passface/","link":"","permalink":"https://mozanunal.com/2014/10/yuz-tanma-ile-guvenlik-passface/","excerpt":"","text":"Herkese Merhabalar!Bugünkü yazımda kendi ürettiğim bir güvenlik yazılımından bahsetmek istiyorum. Projenin amacı bir yüzü kilit olarak tanımlamak daha sonra güvenlik gerektiren yerlere sadece bu yüz algılandığında izin vermektir. Üretilen programın ismi Passface’dir(pass-word) kelimesinden esinlenilerek yapılmıştır( kelimeyle değil yüzle şifrele!). Proje yine bir görüntü işleme projesidir, şifreleyecek yüzün tespitini otomatik yapar ve daha sonra tanımlanan yüzü aramaya başlar. İlk baştaki yüz tespitini yapmak için Haar Cascade algortması kullanılmıştır. Daha sonraki eşleştirme için ise “SURF Feature Detector” algoritması kullanılmıştır. Projenin tanıtım videosu aşağıdadır. Tekrar görüşmek üzere…","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"Image Processing","slug":"Signal-Processing/Image-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/Image-Processing/"}],"tags":[{"name":"C#","slug":"C","permalink":"https://mozanunal.com/tags/C/"},{"name":"Image Processing","slug":"Image-Processing","permalink":"https://mozanunal.com/tags/Image-Processing/"},{"name":"face recognize","slug":"face-recognize","permalink":"https://mozanunal.com/tags/face-recognize/"},{"name":"Passface","slug":"Passface","permalink":"https://mozanunal.com/tags/Passface/"},{"name":"yüz tanıma","slug":"yuz-tanima","permalink":"https://mozanunal.com/tags/yuz-tanima/"},{"name":"Yüz tanıma ile güvenlik","slug":"Yuz-tanima-ile-guvenlik","permalink":"https://mozanunal.com/tags/Yuz-tanima-ile-guvenlik/"}]},{"title":"[TR] Kamera ile Fare Kontrolü","slug":"kamera-ile-fare-kontrolu","date":"2014-10-09T22:24:00.000Z","updated":"2023-01-18T11:16:34.256Z","comments":true,"path":"2014/10/kamera-ile-fare-kontrolu/","link":"","permalink":"https://mozanunal.com/2014/10/kamera-ile-fare-kontrolu/","excerpt":"Herkese Merhabalar!\nBu yazımda Kamera ile Fare Kontrolü projemden bahsetmek istiyorum. Bu proje aslında bir görüntü işleme projesidir. Eli filtrelerle tespit edip fare gibi kullanmak amaçlanmıştır. El açılınca tıklama sağlanır, tıklama olayı çok hassas değil maalesef arka arkaya çok tıklama yapabiliyor. Biraz daha uzaktan kontrol edilirse gezinme olayı da daha hassas olabilir.\nProgram C# dilinde Emgucv kütüphanesiyle yazılmıştır. Algoritmasına gelecek olursak, Hsv ve Ycbcr renk uzaylarında “skin detection” algoritmaları uygulanmıştır. Bu sayede el “counter” olarak tespit edilmiştir. Merkezi kullanılarak farenin gitmesi","text":"Herkese Merhabalar! Bu yazımda Kamera ile Fare Kontrolü projemden bahsetmek istiyorum. Bu proje aslında bir görüntü işleme projesidir. Eli filtrelerle tespit edip fare gibi kullanmak amaçlanmıştır. El açılınca tıklama sağlanır, tıklama olayı çok hassas değil maalesef arka arkaya çok tıklama yapabiliyor. Biraz daha uzaktan kontrol edilirse gezinme olayı da daha hassas olabilir. Program C# dilinde Emgucv kütüphanesiyle yazılmıştır. Algoritmasına gelecek olursak, Hsv ve Ycbcr renk uzaylarında “skin detection” algoritmaları uygulanmıştır. Bu sayede el “counter” olarak tespit edilmiştir. Merkezi kullanılarak farenin gitmesigereken koordinantlar belirlenmiştir. “convexity defects” methodu kullanılarak da parmak sayısı belirlenmiştir. 5. parmakta pek hassas olarak çalışamamasına rağmen diğer parmakları rahat bir şekilde sayılmasını sağlamaktadır. Kamera ile fare kontrolüParmak SayıcıConvexity Defects Method","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"Image Processing","slug":"Signal-Processing/Image-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/Image-Processing/"}],"tags":[{"name":"C#","slug":"C","permalink":"https://mozanunal.com/tags/C/"},{"name":"Image Processing","slug":"Image-Processing","permalink":"https://mozanunal.com/tags/Image-Processing/"},{"name":"EmguCV","slug":"EmguCV","permalink":"https://mozanunal.com/tags/EmguCV/"},{"name":"opencv","slug":"opencv","permalink":"https://mozanunal.com/tags/opencv/"},{"name":"finger counter","slug":"finger-counter","permalink":"https://mozanunal.com/tags/finger-counter/"},{"name":"kamera ile fare kontrolü","slug":"kamera-ile-fare-kontrolu","permalink":"https://mozanunal.com/tags/kamera-ile-fare-kontrolu/"},{"name":"kamera mause","slug":"kamera-mause","permalink":"https://mozanunal.com/tags/kamera-mause/"},{"name":"parmak sayma","slug":"parmak-sayma","permalink":"https://mozanunal.com/tags/parmak-sayma/"}]},{"title":"[TR] Karanlıkta Yanan Gece Lambası","slug":"karanlkta-yanan-gece-lambas","date":"2014-10-07T16:52:00.000Z","updated":"2023-01-18T11:16:34.256Z","comments":true,"path":"2014/10/karanlkta-yanan-gece-lambas/","link":"","permalink":"https://mozanunal.com/2014/10/karanlkta-yanan-gece-lambas/","excerpt":"","text":"Herkese Merhabalar! Projemin ismi karanlıkta çalışan gece lambası, transistörü teorik olarak öğrendikten sonra bunu uygulamaya geçirmek istedim ve bu devreyi tasarladım. 1 adet transistör, 1 adet ldr, 1 adet led ve bir kaç tane direnç kullandım. LDR ışığa göre direnci değiskenlik gösteren bir devre elemanıdır. Karanlıkta direnci artarken, aydınlıkta direnci azalmaktadır. Aydınlıktan karanlığa geçişte direnci artar ve uçları arasındaki gerilim artar bu sayede transistör aktif olur ve ledin yanmasını sağlar. Devre şeması ve tanıtım videosu aşağıdadır. Tekrar görüşmek üzere…\\","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Analog","slug":"Electronics/Analog","permalink":"https://mozanunal.com/categories/Electronics/Analog/"}],"tags":[{"name":"Karanlıkta Yanan Gece Lambası","slug":"Karanlikta-Yanan-Gece-Lambasi","permalink":"https://mozanunal.com/tags/Karanlikta-Yanan-Gece-Lambasi/"},{"name":"Ldrli Gece Lambası","slug":"Ldrli-Gece-Lambasi","permalink":"https://mozanunal.com/tags/Ldrli-Gece-Lambasi/"}]},{"title":"[TR] 555 Entegresi Tanıtım","slug":"555-entegresi-tantm","date":"2014-10-06T23:49:00.000Z","updated":"2023-01-18T11:16:34.250Z","comments":true,"path":"2014/10/555-entegresi-tantm/","link":"","permalink":"https://mozanunal.com/2014/10/555-entegresi-tantm/","excerpt":"Herkese Merhabalar!Bu yazımda size 555 entegresini tanıtmak istiyorum. Başlamadan önce şunu da belirtmek isterim 555 entegresi benim en çok sempati duyduğum entegrelerden biridir. Bunun nedeni ise 8 bacaklı, çok basit ve küçük bir entegre olmasına rağmen çok yararlı ve kullanım alanı çok geniş bir entegre olmasıdır. İnternette 555 entegresi ile yapılan bir çok proje","text":"Herkese Merhabalar!Bu yazımda size 555 entegresini tanıtmak istiyorum. Başlamadan önce şunu da belirtmek isterim 555 entegresi benim en çok sempati duyduğum entegrelerden biridir. Bunun nedeni ise 8 bacaklı, çok basit ve küçük bir entegre olmasına rağmen çok yararlı ve kullanım alanı çok geniş bir entegre olmasıdır. İnternette 555 entegresi ile yapılan bir çok projebulabilirsiniz.(örneğin ==&gt; https://www.instructables.com/id/47-projects-to-do-with-a-555/ ). Bu video da benim 555 entegresi hakkında tanıtım videom. Teknik detaylarına gelirsek, 555 entegresi aslında tek işlevi kare dalga üretmek olan bir timer devresidir. 555 entegre devresi pin bağlantıları şu şekildedir; Ground: Toprak ayağı Trigger: Bu bacak monostable uygulamalarında tetikleme ayağı olarak kullanılır. Alttaki karşılaştırıcının – girişine bağlanmış olan bu ayakta 1/3 Vcc altında bir gerilim olunca flip-flop un set bacağı lojik 1 olur ve dolayısıyla flip-flop un Q çıkışı lojik 1 olur. Output: Çıkış ayağı Reset: Bu ayak lojik 0 olunca devre reset yapar ve Q çıkışı lojik 0 olur. Reset ayağı diğer pinlere bağlı değildir. Control: 2/3 Vcc gerilim alan noktaya bağlanmış olan bu ayaktaki gerilim değiştirilerek arzu edilirse zamanlama periyodu değiştirilebilir. Normalde küçük bir kapasite ile toprak hattına bağlanır. Threshold: 2/3 Vcc üzerinde gerilim olduğunda flip-flop reset atar. Discharge: npn transistörün kolektör ayağına bağlanmıştır. Transistör iletimde olunca (beyz gerilimi pozitif olunca) bu ayak toprak hattına bağlanır. Vcc: +4.5V ile +16V arasında bir gerilim verilir. 555 entegresi Monostable ve Astable olmak üzere iki faklı çalışma ve bağlantı moduna sahiptir.","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Analog","slug":"Electronics/Analog","permalink":"https://mozanunal.com/categories/Electronics/Analog/"}],"tags":[{"name":"555","slug":"555","permalink":"https://mozanunal.com/tags/555/"},{"name":"555 Entegresi Tanıtım","slug":"555-Entegresi-Tanitim","permalink":"https://mozanunal.com/tags/555-Entegresi-Tanitim/"},{"name":"Electronics Devreler","slug":"Electronics-Devreler","permalink":"https://mozanunal.com/tags/Electronics-Devreler/"},{"name":"Electronics Devreler ve Teorik Yazılar","slug":"Electronics-Devreler-ve-Teorik-Yazilar","permalink":"https://mozanunal.com/tags/Electronics-Devreler-ve-Teorik-Yazilar/"}]},{"title":"[TR] Alkış ile Lamba Kontrolü","slug":"alks-ile-lamba-kontrolu","date":"2014-10-06T22:28:00.000Z","updated":"2023-01-18T11:16:34.251Z","comments":true,"path":"2014/10/alks-ile-lamba-kontrolu/","link":"","permalink":"https://mozanunal.com/2014/10/alks-ile-lamba-kontrolu/","excerpt":"","text":"Herkese Merhabalar!Bu yazımda size, daha önceden yapıp (lise yıllarımda), bloğa koymak icin tekrar tamir ettiğim bir projemden bahsetmek istiyorum. Projenin ismi “Alkış ile lamba kontrolü” amacı ise alkış gibi yüksek bir sesle bir röle kontrol etmek. Bu projede, röleye toplam 12 led bağlayıp aydınlatma sağlanmıştır. Devrenin teknik detaylarına gelirsek temel mantığı şöyle; mikrofondan ses sinyali alınır. alınan ses opamp devrelerle yükseltilir. yükseltilen sinyaller 4011 entegresinde işlenerek yüksek ses geldiğinde çıkış sağlanır. sağlanan çıkışa bağlı olan transistör kontrol edilir. Yüksek ses gelirse transistör aktifleşir ve rölenin çalışmasını sağlar. Projenin tanıtım videosu ve devresinin çizimi aşağıdadır. Tekrar görüşmek üzere… Malzeme Listesi Mikrofon 2,2 k direnç 10 k trimpot 2,2 k direnç 4011 entegresi 1 m direnç 220 nf kapasitör 2,7 k direnç 1 m direnç 220 nf kapasitör BC237 transistör BC237 transistör 4.7 V zener diyot 100 u kapasitör 1,5 k direnç 2,2 k direnç 1N4148 diyot 12 V röle","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Analog","slug":"Electronics/Analog","permalink":"https://mozanunal.com/categories/Electronics/Analog/"}],"tags":[{"name":"Electronics Devreler","slug":"Electronics-Devreler","permalink":"https://mozanunal.com/tags/Electronics-Devreler/"},{"name":"Electronics Devreler ve Teorik Yazılar","slug":"Electronics-Devreler-ve-Teorik-Yazilar","permalink":"https://mozanunal.com/tags/Electronics-Devreler-ve-Teorik-Yazilar/"},{"name":"alkış ile lamba kontolü","slug":"alkis-ile-lamba-kontolu","permalink":"https://mozanunal.com/tags/alkis-ile-lamba-kontolu/"},{"name":"aydınlatma projeleri","slug":"aydinlatma-projeleri","permalink":"https://mozanunal.com/tags/aydinlatma-projeleri/"}]},{"title":"[TR] Gerçek Zamanlı Obje Takibi(EmguCv ile)","slug":"gercek-zamanl-obje-takibiemgucv-ile","date":"2014-09-29T12:54:00.000Z","updated":"2023-01-18T11:16:34.255Z","comments":true,"path":"2014/09/gercek-zamanl-obje-takibiemgucv-ile/","link":"","permalink":"https://mozanunal.com/2014/09/gercek-zamanl-obje-takibiemgucv-ile/","excerpt":"Herkese Merhabalar!\nBu yazımda sizlere EmguCv kütüphanesi ile yazdığım görüntü işleme uygulaması hakkında bilgi vermek istiyorum. Uygulamada ortamdan farklı bir renkte olan nesneyi rengine göre filtre edip onu gerçek zamanlı olarak takip etme amaçlanmıştır. Geliştirme ortamı olarak Microsoft Visual Studio, dil olarak C# programlama","text":"Herkese Merhabalar! Bu yazımda sizlere EmguCv kütüphanesi ile yazdığım görüntü işleme uygulaması hakkında bilgi vermek istiyorum. Uygulamada ortamdan farklı bir renkte olan nesneyi rengine göre filtre edip onu gerçek zamanlı olarak takip etme amaçlanmıştır. Geliştirme ortamı olarak Microsoft Visual Studio, dil olarak C# programlamadili kullanılmıştır.Programın genel algoritmasına gelirsek, şöyle özetleyebiliriz; Görüntü kameradan RGB formatında alınıp başka bir renkli resim görüntüleme yöntemi olan HSV formatına dönüştürülmüştür. HSV filtresi için uygun değerler test edilip bulunmuştur ve renk filtesi uygunlanmıştır. Renk filtresinden kalan gürültüler erode ve dilate morfolojik operatörleriyle azaltılmıştır. Counter Analysis ile görüntü “counter”lara ayrılmıştır. Sadece “counter” alanı belli bir değerden büyük olan “counter”lar dikkat alınmıştır. Bu sayede son kalan gürültüler de engelenmiştir. Projemin tanıtım videosuna aşağıdan ulaşabilirsiniz. Kodlar videoda gösterilmektedir. Tekrar görüşmek üzere…","raw":null,"content":null,"categories":[{"name":"Signal Processing","slug":"Signal-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/"},{"name":"Image Processing","slug":"Signal-Processing/Image-Processing","permalink":"https://mozanunal.com/categories/Signal-Processing/Image-Processing/"}],"tags":[{"name":"C#","slug":"C","permalink":"https://mozanunal.com/tags/C/"},{"name":"Image Processing","slug":"Image-Processing","permalink":"https://mozanunal.com/tags/Image-Processing/"},{"name":"EmguCV","slug":"EmguCV","permalink":"https://mozanunal.com/tags/EmguCV/"},{"name":"Obje Takibi","slug":"Obje-Takibi","permalink":"https://mozanunal.com/tags/Obje-Takibi/"},{"name":"Object Tracking","slug":"Object-Tracking","permalink":"https://mozanunal.com/tags/Object-Tracking/"}]},{"title":"[TR] Ses Kontrollü Robotik El","slug":"ses-kontrollu-robotik-el","date":"2014-09-21T00:57:00.000Z","updated":"2023-01-18T11:16:34.258Z","comments":true,"path":"2014/09/ses-kontrollu-robotik-el/","link":"","permalink":"https://mozanunal.com/2014/09/ses-kontrollu-robotik-el/","excerpt":"","text":"Herkese Merhabalar!Uzun bir aradan sonra bu yazımda “Ses Kontrollü Robotik El” projemden bahsetmek istiyorum. Bu proje tamamen hobi amaçlı bir projedir. Mekanik parçaları, çevreden bulduğum malzemelerden, elektronik kısmı ise çinden aldığım Arduino, HC-06 Bluetooth modulü ve 5 adet servo ile yapmaya çalıştım. Sesle kontrol işini sağlamak için ise android tabanlı bir telefon gerekmektedir. Ses kontrolü için ayrı bir modül eklemememin sebebi ise herkesin akıllı telefona sahip olduğu şu zamanda ekstra maliyetten kaçmaktır. Buradan projenin tanıtım videosunu seyredebilirsiniz. Projelerin teknik detayları yazının devamındadır. Robotik el uygun şekilde kesilmiş balsa ve bahçe hortumundan oluşmaktadır. Balsanın üstüne ipler için yollar açılmıştır sonra ise vidalarla parmakları hareket ettirecek iplerin açıları düzenlenmiştir. Parmaklar balsaya ince vidalarla tutturulmuştur. Sağlamlaştırmak için ağaç tutkalı kullanılmıştır. Bahçe hortumu parmak şeklinde hareket edebilmesi için eklem yerlerinden aradaki açı yaklaşık 90 derece olacak şekilde kesilmiştir. Servonun ipi çekmesiyle parmağın hareket edeceği bir dizayn yapılmıştır. Projenin genel işleyişi şu şekildedir. Android telefon sesi algılar &nbsp;ve yazdığım program sayesinde google ses tanıma sistemini kullanarak komutu algılar. Komutu yorumlayıp bluetooth ile HC-06 bluetooth modulüne aktarır. HC-06 modulü ise gelen komutları serial port üzerinden “arduino pro mini’ye aktarır. Arduino pro mini ile de 5 adet servo kontrol edilir. Tüm devre pertinanks kartın üzerine sabitlenmiş ve lehimlenmiştir. Pinler kullanılarak servolar için uygun beslemeler de devreye dahili olarak eklenip soket haline getirilmiştir. Tüm Malzemeler Son Hali","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Arduino","slug":"Arduino","permalink":"https://mozanunal.com/tags/Arduino/"},{"name":"Android Programlama ve Oyun","slug":"Android-Programlama-ve-Oyun","permalink":"https://mozanunal.com/tags/Android-Programlama-ve-Oyun/"},{"name":"Android","slug":"Android","permalink":"https://mozanunal.com/tags/Android/"},{"name":"bluetooth kontrol","slug":"bluetooth-kontrol","permalink":"https://mozanunal.com/tags/bluetooth-kontrol/"},{"name":"Android Kontrol","slug":"Android-Kontrol","permalink":"https://mozanunal.com/tags/Android-Kontrol/"},{"name":"Ses Kontrollü Robotik El","slug":"Ses-Kontrollu-Robotik-El","permalink":"https://mozanunal.com/tags/Ses-Kontrollu-Robotik-El/"}]},{"title":"[TR] Oyun (First Flight)","slug":"oyunfirst-flight","date":"2014-05-27T03:42:00.000Z","updated":"2023-01-18T11:16:34.257Z","comments":true,"path":"2014/05/oyunfirst-flight/","link":"","permalink":"https://mozanunal.com/2014/05/oyunfirst-flight/","excerpt":"","text":"İlk oyun denememi görsel programlayla çalışan Game Maker ile yaptım. Android oyunu olarak başladım fakat lisans satın almak gerektiğini öğrenince bilgisayar oyunu olarak kaldı. Bu benim ilk oyunumdur. İsmi “First Flight” ilk defa uçan bir kuşun başına gelenlerden oluşuyor (uçaklar, füzeler, kartallar). Ona yardım edenler de var tabi ki Angry Birds :D. Umarım beğenirsiniz. Tekrar görüşmek üzere… Oyunumu buradan indirebilirsiniz","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"Android Programlama ve Oyun","slug":"Android-Programlama-ve-Oyun","permalink":"https://mozanunal.com/tags/Android-Programlama-ve-Oyun/"},{"name":"Gamemaker","slug":"Gamemaker","permalink":"https://mozanunal.com/tags/Gamemaker/"},{"name":"gamemaker ile oyun yapımı","slug":"gamemaker-ile-oyun-yapimi","permalink":"https://mozanunal.com/tags/gamemaker-ile-oyun-yapimi/"}]},{"title":"[TR] C# Gerçek Zamanlı Grafik Çizme Programı","slug":"c-gercek-zamanl-grafik-cizme-program","date":"2014-05-27T02:17:00.000Z","updated":"2023-01-18T11:16:34.252Z","comments":true,"path":"2014/05/c-gercek-zamanl-grafik-cizme-program/","link":"","permalink":"https://mozanunal.com/2014/05/c-gercek-zamanl-grafik-cizme-program/","excerpt":"","text":"Herkese Merhabalar!Programın kaynak koduna buradan ulaşabilirsiniz.İkinci yazımda C# ile gerçek zamanlı grafik çizdirme uygulamasından bahsedeceğim. Bu uygulamada C# programlama dili ve Microsoft Visual Studio 2010 kullanılmıştır. C# ile grafik çizmemize olanak sağlayan zed graph kütüphanesinden yararlanılmıştır.Bu kütüphaneyi buradan indirebilirsiniz. Sistemin genel algoritmasına bakarsak şöyle çalışır; seri porttan veri okunur, veri aralardaki virgüllere göre parse edilip labellera aktarılır, Eklenen “Timer” öğesi ile timerın her periyodunda zaman belirten labela geçen zaman kadar eklenir böylece kaçıncı saniye olduğu tutulur, aynı zamanda timerın her bir periyodunda x değerleri zaman, y değerleri data noktaları olmak üzere grafiğe bir nokta eklenir. Şimdi çalışma şeklini daha ayrıntılı bir şekilde inceleyelim. Mikrodenetleyici-bilgisayar iletişimi projelerinde olmazsa olmazlardan biri Seri porttan veri okumaktır. Bu sayede mikrodenetleyici ile iletişim kurabiliriz ve veri alışverişinde bulunabiliriz. Aynı zamanda bilgisayar kontrollü robotikte de komut vermek için kullanılır. C# üzerinden serial port programı yazma işlemi oldukça kolaylaştırılmıştır. Seri port öğesi eklenir ve ayarları yapılır. Buradaki ayarlar veri transfer hızı hangi Com Portun okunacağının ayarı v.b. “Save to text” özelliği de gelen veriyi saklayıp sonra tekrar inceleme imkanı sunar.Asıl konumuz bu olmadığı için çok ayrıntıya girmiyorum zaten kolayca örnekleri bulunabilir. İkinci kısım seri porttan alınan verinin uygun şekilde parçalandığı ve labellara aktarıldığı bölümdür. Bunun için “Display Text” isimli bir fonksiyon yazılmıştır. Bu fonksiyon ile gelen verinin her satırının şekli1$,data1,data2,data3 olarak belirlenmiştir. Fonksiyonun algoritması şu şekildedir; gelen verinin ilk harfi “\\$” değilse veriyi işlemez, eğer ilk harfi oysa virgül sayısına bakar(Stringin içinden belli bir karakteri arama fonksiyonu kullanılmıştır.), eğer o da 3’e eşit ise gelen veriyi virgüllere göre parçalar ve ilk kısım hariç(“$”) kalan veriyi, tek tek 3 ayrı labela aktarır böylece gelen data1, data2, data3 ayrı labellara aktarılmış olur. Grafik çizdirme kısmına geçmeden önce grafiği çizen timerı açan ve kapatan 2 butondan bahsedeyim. Bunlar sayesinde grafik çizdirme başlatılır ve durdurulur. Yani butonların tıklama “event”lerinde sadece timer1.enable=true; ve timer1.enable=false kodu vardır.(Tabi ayrı ayrı birinde true olan diğerinde false olan ) Resimde altta eklediğimiz SeriPort ve timer1 öğesini görebilirsiniz. “FileDiaglog” öğeleri ise text dosyasına kaydetmek için ve bir text dostasını seri porttan yollamak için kullanılır. ilk önce grafiğin ayarlarından başlayalım. Grafiğe bir çizim alanı yanı “pane” ekleyelim. Çizdiğimiz her şeyi hangi “pane”e çizdiğimizi belirtmek zorundayız. Eksenlere isim koymamız ve daha bir sürü ayar yapmamız mümkün ama ben karışıklık yaratmamak adına sade bir grafik tercih ettim. ZedGraph kütüphanesi yapabileceğiniz diğer ayarlar ile çok farklı grafikler çizdirme imkanı sunar. Grafiğin altını doldurma, nokta grafiği, sütun ve daire grafiği gibi çeşit ve renk opsiyonları mevcuttur. Bu çeşitlerin bazılarına buradan ulaşabilirsiniz. Grafik ayarlarında önemli bir yerlerden biri de “Point pair list”in ve “Line item”ın belirlenmesidir. Çizilecek her eğri için birer tane bunlardan belirlenmelidir. “RolingPointPairList” seçilmesinin sebebi ise “rolling” olduğunda en fazla seçilen kadar(burada en fazla 40 nokta çifti) noktanın hafızada saklaması böylece bir süre sonra biriken noktaların bilgisayarda yavaşlama meydana getirmesinin engellenmesidir. Belli aralıklarla zaten grafik üstüne sağ tıklanarak resim olarak kaydetme opsiyonu da mevcuttur. Gelelim grafiği çizdirme kısmına. İlk önce grafiğe bir “Timer” öğesi eklenir ve periyodu 1000 ms(1 saniye) olarak belirlenir. Bu tamamen opsiyoneldir ne kadarlık zaman aralıklarında grafiğimize nokta eklenmesi istendiğine bağlıdır.İlk 3 satırdaki kodlar ile bir labelda şu anki saniyenin tutulması sağlanır(Zaman bizim x koordinatımız olduğu için anlık olarak kulanılması gereklidir). Sonraki kısımlar ise grafiğe nokta eklenmesi algoritmasıdır. Gelen verileri yukarıda parçalayıp labellara aktarmıştık burda ise o labellar ve zaman labelı kullanılarak nokta çifleri elde edilir. Nokta çiftleri, nokta listelerine aktarılır sonra bunlar birleştirilerek eğri çizilir. myCurveOne = myPane.AddCurve(null, listPointsOne, Color.Blue, SymbolType.Circle) bu satır ile eğrinin hangi “pane”e çizileceği, rengi, noktaların gösteren sembol (yuvarlak,yıldız,kare), eğrinin altının dolu-boş olacağı belirlenir. En alt kısımda grafik yenilerek yeni eğrinin çizilmesi graifğin gördüğümüz yerinin eğrimize paralel olarak uygun şekilde yer değiştirmesi sağlanır. Böylece Bilgisayara hiç değmeden grafiğin takibi otomatik olarak yapılmış olur. Aşağıda programımızın son hali bulunmaktadır. En kısa zamanda videosunu eklemeye çalışacağım. Görselleme, telemetri projelerinde ve bilgisayarla kontrol projelerinde en önemli noktalardan biridir(ya da pid, sensor test ederken). Programımız da bu ihtiyaca yönelik yazılmıştır. Arduino ve ya pic ile (ya da seri porttan haberleşebilen tüm işlemciler) rahatlıkla çalışabilecek bir uygulamadır. C# ile yapılan gerçek zamanlı (real time) uygulama eksikliğinden bu konuyu yapma ihtiyacı hissettim. Ben bu konuyu araştırırken bu uygulamayı gerçek zamanlı yapan ve sonra nasıl yapıldığını anlatan bir kaynak bulamamıştım.Umarım bu bilgiler işinize yarar. Paylaşımlarınızda kaynak belirtirseniz çok iyi olur :). Tekrar görüşmek üzere… Not: Sonradan programın derlenmiş halini de paylaştım indirmek isterseniz buradaki yazıma gitmeniz yeterli olacaktır.","raw":null,"content":null,"categories":[{"name":"Coding","slug":"Coding","permalink":"https://mozanunal.com/categories/Coding/"}],"tags":[{"name":"C#","slug":"C","permalink":"https://mozanunal.com/tags/C/"},{"name":"Arduino C#","slug":"Arduino-C","permalink":"https://mozanunal.com/tags/Arduino-C/"},{"name":"arayüz","slug":"arayuz","permalink":"https://mozanunal.com/tags/arayuz/"},{"name":"Arduino grafik","slug":"Arduino-grafik","permalink":"https://mozanunal.com/tags/Arduino-grafik/"},{"name":"C# gerçek zamanlı grafik","slug":"C-gercek-zamanli-grafik","permalink":"https://mozanunal.com/tags/C-gercek-zamanli-grafik/"},{"name":"C# grafik","slug":"C-grafik","permalink":"https://mozanunal.com/tags/C-grafik/"},{"name":"C# realtime graphs","slug":"C-realtime-graphs","permalink":"https://mozanunal.com/tags/C-realtime-graphs/"},{"name":"Com Port","slug":"Com-Port","permalink":"https://mozanunal.com/tags/Com-Port/"},{"name":"Serial Port","slug":"Serial-Port","permalink":"https://mozanunal.com/tags/Serial-Port/"},{"name":"zedgraph","slug":"zedgraph","permalink":"https://mozanunal.com/tags/zedgraph/"}]},{"title":"[TR] İlk Yayın","slug":"ilk-yayn","date":"2014-05-25T00:44:00.000Z","updated":"2023-01-18T11:16:34.255Z","comments":true,"path":"2014/05/ilk-yayn/","link":"","permalink":"https://mozanunal.com/2014/05/ilk-yayn/","excerpt":"Herkese Merhabalar!    Yaptığım projeleri arşivleyebilmek ve bunlardan herkesin yararlanabilmesi için blog açmaya karar verdim. Blogumda size C# üzerinden arayüz yapımı, bilgisayar mikroişlemci iletişimi, arduino uygulamaları, pic uygulamaları ve basit sensörlü elektronik alanında projeleri fotoğraflarıyla ve işin teorisini de anlatarak paylaşmayı planlıyorum. Aynı zamanda az da olsa Android programlamadan(robotik uygulamalar için gerekli olan kısımdan) ve hobi olarak yaptığım oyunları da buradan sizinle paylaşmayı planlıyorum. Elektroniğe merak salmış arkadaşlarımın elimden geldiğince(ben de yolun çok başındayım) en iyi şekilde bilgilendirmek dileğim :).  Daha önce üniversitemde uzun mesafe takip sistemleri üzerine çalışmalar yaptım. Gps, IMU, ve daha bir sürü sensörden aldığımız verileri, yer istasyonuna iletmek ve arayüz programıyla bunların görsellenmesiydi görevim. Şimdi ise insansız hava araçları ve görüntü işleme üzerine çalışmaktayım. Aynı zamanda hobi olarak pic ve arduino devreleri, çeşitli devreler üretmeye, yapmaya devam ediyorum. Tekrar görüşmek üzere…  ","text":"Herkese Merhabalar! Yaptığım projeleri arşivleyebilmek ve bunlardan herkesin yararlanabilmesi için blog açmaya karar verdim. Blogumda size C# üzerinden arayüz yapımı, bilgisayar mikroişlemci iletişimi, arduino uygulamaları, pic uygulamaları ve basit sensörlü elektronik alanında projeleri fotoğraflarıyla ve işin teorisini de anlatarak paylaşmayı planlıyorum. Aynı zamanda az da olsa Android programlamadan(robotik uygulamalar için gerekli olan kısımdan) ve hobi olarak yaptığım oyunları da buradan sizinle paylaşmayı planlıyorum. Elektroniğe merak salmış arkadaşlarımın elimden geldiğince(ben de yolun çok başındayım) en iyi şekilde bilgilendirmek dileğim :). Daha önce üniversitemde uzun mesafe takip sistemleri üzerine çalışmalar yaptım. Gps, IMU, ve daha bir sürü sensörden aldığımız verileri, yer istasyonuna iletmek ve arayüz programıyla bunların görsellenmesiydi görevim. Şimdi ise insansız hava araçları ve görüntü işleme üzerine çalışmaktayım. Aynı zamanda hobi olarak pic ve arduino devreleri, çeşitli devreler üretmeye, yapmaya devam ediyorum. Tekrar görüşmek üzere…","raw":null,"content":null,"categories":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/categories/Electronics/"},{"name":"Arduino","slug":"Electronics/Arduino","permalink":"https://mozanunal.com/categories/Electronics/Arduino/"}],"tags":[{"name":"Electronics","slug":"Electronics","permalink":"https://mozanunal.com/tags/Electronics/"},{"name":"Microcontrollers","slug":"Microcontrollers","permalink":"https://mozanunal.com/tags/Microcontrollers/"},{"name":"Android Programlama ve Oyun","slug":"Android-Programlama-ve-Oyun","permalink":"https://mozanunal.com/tags/Android-Programlama-ve-Oyun/"},{"name":"C#","slug":"C","permalink":"https://mozanunal.com/tags/C/"},{"name":"Image Processing","slug":"Image-Processing","permalink":"https://mozanunal.com/tags/Image-Processing/"},{"name":"Hava Araçları","slug":"Hava-Araclari","permalink":"https://mozanunal.com/tags/Hava-Araclari/"},{"name":"Linux","slug":"Linux","permalink":"https://mozanunal.com/tags/Linux/"},{"name":"Ana Sayfa","slug":"Ana-Sayfa","permalink":"https://mozanunal.com/tags/Ana-Sayfa/"},{"name":"Software Defined Radio","slug":"Software-Defined-Radio","permalink":"https://mozanunal.com/tags/Software-Defined-Radio/"}]}]}