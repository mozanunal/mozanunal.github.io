[{"content":"I\u0026rsquo;m thrilled to announce the v0.2.0 release of mozanunal/sllm.nvim – a thin Neovim wrapper around Simon Willison’s amazing llm CLI. This release introduces powerful new features, most notably the ability to define LLM tools on-the-fly from your code, and further refines the plugin\u0026rsquo;s core philosophy.\nThe Neovim AI plugin space is indeed bustling! A fair question for any new entry is: where does it fit? This post aims to answer that by exploring the philosophy behind sllm.nvim and detailing what\u0026rsquo;s new in v0.2.0.\nWhy sllm.nvim? The Philosophy of a Focused Co-pilot sllm.nvim isn\u0026rsquo;t designed to be a replacement for feature-rich plugins like CodeCompanion.nvim or Copilot.nvim, but a focused alternative built on a distinct philosophy. It was born from the desire to eliminate the constant context-switching to web UIs, by bringing the power of the llm CLI and its rich context management directly into the editor.\nThe philosophy is built on four key principles:\nOn-the-fly Function Tools: A Game-Changer This is perhaps the most significant differentiator. With \u0026lt;leader\u0026gt;sF, you can visually select a Python function in your buffer and register it instantly as a tool for the LLM to use in the current conversation. No pre-configuration is needed. This is incredibly powerful for interactive development:\nAd-hoc Data Processing: Have the LLM use your own function to parse a log file or reformat a data structure. Live Codebase Interaction: Let the LLM use a function from your project to query a database or check an application\u0026rsquo;s state. This dynamic, ad-hoc workflow provides a level of integration that is unique to sllm.nvim. Radical Simplicity: It\u0026rsquo;s a Wrapper, Not a Monolith sllm.nvim is a thin wrapper around the llm CLI (~500 lines of Lua). It delegates all heavy lifting (API calls, model management, conversation history, and tool integration) to Simon Willison\u0026rsquo;s robust, battle-tested, and community-maintained tool. This keeps sllm.nvim lightweight, transparent, and easy to maintain.\nInstant Access to an Entire CLI Ecosystem By building on llm, this plugin instantly inherits its vast and growing plugin ecosystem.\nWant to use OpenRouter\u0026rsquo;s 300+ models? Just run llm install llm-openrouter. Need to feed a PDF manual or a GitHub repo into context? There are llm plugins for that. This extensibility comes \u0026ldquo;for free\u0026rdquo; and is managed at the llm level, not within the Neovim plugin. Explicit Control: You Are the Co-pilot, Not the Passenger sllm.nvim believes in a co-pilot model where you are always in control. You explicitly provide context: the current file (\u0026lt;leader\u0026gt;sa), diagnostics (\u0026lt;leader\u0026gt;sd), the output of a command like git diff (\u0026lt;leader\u0026gt;sx), a URL, or a new function tool (\u0026lt;leader\u0026gt;sF). The plugin won\u0026rsquo;t guess your intentions, ensuring a predictable, reliable, and secure interaction every time.\nWhat\u0026rsquo;s New in v0.2.0? This release brings a host of improvements that double down on the core philosophy of deep llm integration and user control.\nHeadlining Features Register Tools (Functions) On-The-Fly (\u0026lt;leader\u0026gt;sF) (PR #41): As detailed above, you can now visually select a Python function and make it available to the LLM as a tool for the current session. LLM Tool Context Integration (llm -T) (PR #37): You can now browse your installed llm tools (from the CLI plugin ecosystem) and add them to the context for the LLM to use, all from within Neovim. UI and UX Enhancements Configurable Window Type (PR #33): Choose between \u0026quot;vertical\u0026quot;, \u0026quot;horizontal\u0026quot;, or \u0026quot;float\u0026quot; for the LLM buffer to suit your workflow. UI Picker \u0026amp; Notifier Support (PR #35): Integrates with mini.nvim (pick/notify) and snacks.nvim (picker/notifier) for a more native and configurable UI experience. Better Window UI (PR #43): The LLM buffer now displays the model name and an indicator for running processes, providing more clarity at a glance. Visual Selection for Prompts (PR #51): You can now visually select text and use \u0026lt;leader\u0026gt;ss to send it along with your main prompt, making it easier to focus the LLM\u0026rsquo;s attention. Core Improvements llm Default Model Support (PR #34): The plugin can now use the default model configured in your llm CLI setup, simplifying configuration. vim.ui.input Wrappers (PR #36): Better support for different input handlers for a more consistent experience. Lua Docs (PR #50): Added documentation for better maintainability and to help contributors understand the codebase. More Concise Preface \u0026amp; Agent Opinions (PR #55): The project\u0026rsquo;s philosophy documentation has been updated and clarified. For a complete list of changes, check out the Full Changelog: v0.1.0 -\u0026gt; v0.2.0.\nGet a Taste Here\u0026rsquo;s a quick look at the on-the-fly function registration in action:\nTry It Out! If this CLI-first, co-pilot-centric philosophy resonates with you, I\u0026rsquo;d love for you to give sllm.nvim a try.\nYou can find the plugin, a full README, and installation instructions on GitHub: mozanunal/sllm.nvim\nYour feedback, suggestions, and bug reports are invaluable. Let me know what you think! Thanks for reading.\n","permalink":"https://mozanunal.com/2025/06/sllm.nvim.v020/","summary":"\u003cp\u003eI\u0026rsquo;m thrilled to announce the v0.2.0 release of\n\u003ca href=\"https://github.com/mozanunal/sllm.nvim\"\u003emozanunal/sllm.nvim\u003c/a\u003e – a thin Neovim\nwrapper around Simon Willison’s amazing \u003ccode\u003ellm\u003c/code\u003e CLI. This release introduces\npowerful new features, most notably the ability to define LLM tools on-the-fly\nfrom your code, and further refines the plugin\u0026rsquo;s core philosophy.\u003c/p\u003e\n\u003cp\u003eThe Neovim AI plugin space is indeed bustling! A fair question for any new entry\nis: where does it fit? This post aims to answer that by exploring the philosophy\nbehind \u003ccode\u003esllm.nvim\u003c/code\u003e and detailing what\u0026rsquo;s new in v0.2.0.\u003c/p\u003e","title":"Sllm.nvim v0.2.0: On-the-fly Tools and a CLI-First Philosophy"},{"content":"I\u0026rsquo;m excited to announce the llm-tools-kiwix plugin: now available for llm.datasette.io. This tool allows you to expose offline Kiwix ZIM archives (think Wikipedia, Stack Exchange, DevDocs, etc.) to Large Language Models (LLMs) via the llm command-line tool or Python API.\nWhy llm-tools-kiwix? The ecosystem around LLMs is booming, but most reference tools rely on an internet connection. Enter Kiwix: a project distributing ZIM archives of web sites—like Wikipedia, DevDocs, and Stack Exchange—for true offline access.\nNow, you can enable your LLM to tap into these huge offline knowledge bases, even when you\u0026rsquo;re disconnected, for search and retrieval-augmented generation (RAG) workflows.\nFeatures Automatic ZIM file discovery Finds .zim files in your current working directory or in any folder set by the KIWIX_HOME environment variable.\nDynamic tool descriptions for LLMs The list of available ZIM files is automatically reflected in the LLM tools interface—making tool selection smarter.\nZero network requirement The plugin works entirely offline, leveraging the power of Kiwix archives.\nMultiple retrieval tools\nkiwix_search_and_collect: high-level search and content summarization from a ZIM file. kiwix_search: get search results and metadata. kiwix_read: fetch the content of a specific article. Quickstart Install the plugin directly from PyPI:\n1 llm install llm-tools-kiwix How does it work? Acquire ZIM files Download from Kiwix Downloads. Examples:\nwikipedia_en_all_nopic_2023-10.zim devdocs_en_docker_2025-04.zim askubuntu.com_en_all_2024-10.zim Place ZIM files for discovery Put .zim files in your working directory or set a KIWIX_HOME for auto-discovery.\nList tools and ZIMs See available tools with detected ZIM files:\n1 llm tools list You\u0026rsquo;ll find descriptions like:\n1 Available ZIM files for \u0026#39;zim_file_path\u0026#39; argument: ./askubuntu.com_en_all_2024-10.zim, ./devdocs_en_docker_2025-04.zim... Example: Search Docker DevDocs, Offline Let\u0026rsquo;s imagine you\u0026rsquo;re debugging Docker (rootless) and want fast, offline help:\n1 2 3 llm -m gpt-4o-mini --tool kiwix_search_and_collect \\ \u0026#34;I\u0026#39;m getting a permission error while trying to run Docker in rootless mode. Please search and provide relevant information from the Docker devdocs.\u0026#34; \\ --tools-debug Swap gpt-4o-mini for your model of choice. The LLM will pick up the right ZIM (devdocs_en_docker_2025-04.zim) and walk through the available docs—all offline. Dev \u0026amp; Contribution Clone the repo and create a virtual environment: 1 2 3 4 5 git clone https://github.com/mozanunal/llm-tools-kiwix.git cd llm-tools-kiwix python -m venv venv source venv/bin/activate pip install -e \u0026#39;.[test]\u0026#39; Run the tests: 1 python -m pytest Place ZIM files in your project root or under KIWIX_HOME, or mock the Kiwix backend for test development. llm-tools-kiwix is open-source (Apache 2.0). Read more or contribute on GitHub.\nUnplug, empower your LLM, and take Wikipedia anywhere!\nGet the code on PyPI View source and docs ","permalink":"https://mozanunal.com/2025/06/llm-tools-kiwix-v0.1.0/","summary":"\u003cp\u003eI\u0026rsquo;m excited to announce the \u003cstrong\u003ellm-tools-kiwix\u003c/strong\u003e plugin: now available for\n\u003ca href=\"https://llm.datasette.io/\"\u003ellm.datasette.io\u003c/a\u003e. This tool allows you to expose\noffline \u003ca href=\"https://www.kiwix.org/\"\u003eKiwix\u003c/a\u003e ZIM archives (think Wikipedia, Stack\nExchange, DevDocs, etc.) to Large Language Models (LLMs) via the \u003ccode\u003ellm\u003c/code\u003e\ncommand-line tool or Python API.\u003c/p\u003e","title":"Llm Tools Kiwix V0.1.0"},{"content":"Long-Lasting, Framework-Free Web Apps with Preact, HTM, and Page.js Are you tired of:\nRelearning your static site generator every 6 months? Chasing backwards-incompatible updates from Astro, Next.js, or Fresh? Deploying full Node.js stacks just to serve a couple buttons and forms? What if you could build fast, reactive web apps that:\nRun forever without framework churn Need no build tools or hydration pipelines Use your favorite backend (Go, Rust, Java, Python\u0026hellip;) without coupling to JS frameworks? Welcome to No-Build Client Islands — a practical, zero-build architecture for interactive SPAs using native JavaScript modules, Preact + HTM for rendering, and Page.js for routing.\n🧭 Who Is This For? This approach is designed for developers who:\nDon’t want to deploy Node.js just to render routes Don’t want to chase framework updates every few months (👋 Astro 1 → 2, Next.js App Router, Fresh rewrites…) Prefer stability, clarity, and no build chains Are okay serving static HTML and JS and letting the client do just enough work Want to connect to backends built in Go, Rust, Java, or any language Build it once. Ship it. Don’t touch it again unless you choose to.\n⚙️ The Stack (Tiny, Stable, and Built to Last) Tool Purpose page.js Client-side routing (2.5 KB) preact Fast rendering engine (4 KB gzipped) htm JSX-like syntax without Babel @preact/signals Fine-grained reactivity (1.3 KB gzipped) Everything is served as native ES modules via CDN — no bundler, no dev server, no tooling required.\n🧪 What It Looks Like 🗂 Project Structure:\n1 2 3 4 5 6 7 index.html index.js views/ ├─ home.js └─ profile.js islands/ └─ profileDetails.js Each page renders its own shell, and \u0026ldquo;islands\u0026rdquo; of interactivity are mounted selectively.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // index.js page(\u0026#34;/\u0026#34;, () =\u0026gt; render( html` \u0026lt;${Home} /\u0026gt; `, root, )); page(\u0026#34;/profile/:id\u0026#34;, (ctx) =\u0026gt; render( html` \u0026lt;${Profile} id=\u0026#34;${ctx.params.id}\u0026#34; /\u0026gt; `, root, )); Inside Home.js:\n1 2 3 4 5 6 7 8 export default function Home() { return html` \u0026lt;section\u0026gt; \u0026lt;h1\u0026gt;🏠 Home\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;This page is static and fast.\u0026lt;/p\u0026gt; \u0026lt;/section\u0026gt; `; } And Profile.js fetches data and renders:\n1 2 3 4 5 6 7 8 9 10 11 12 export async function loadAndRenderProfile(id) { const res = await fetch(`https://api.example.com/users/${id}`); const profile = await res.json(); return html` \u0026lt;section\u0026gt; \u0026lt;h1\u0026gt;👤 Profile: ${profile.name}\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;${profile.bio}\u0026lt;/p\u0026gt; \u0026lt;${ProfileDetails} name=\u0026#34;${profile.name}\u0026#34; /\u0026gt; \u0026lt;/section\u0026gt; `; } 📄 islands/profileDetails.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import { h } from \u0026#34;https://esm.sh/preact\u0026#34;; import htm from \u0026#34;https://esm.sh/htm\u0026#34;; import { signal } from \u0026#34;https://esm.sh/@preact/signals\u0026#34;; const html = htm.bind(h); export default function ProfileDetails({ name }) { const toggle = signal(false); return html` \u0026lt;div style=\u0026#34;margin-top:1em;\u0026#34;\u0026gt; \u0026lt;button @click=\u0026#34;${() =\u0026gt; toggle.value = !toggle.value}\u0026#34;\u0026gt; ${toggle.value ? \u0026#34;Hide\u0026#34; : \u0026#34;Show\u0026#34;} details for ${name} \u0026lt;/button\u0026gt; ${toggle.value \u0026amp;\u0026amp; html` \u0026lt;p\u0026gt;🔍 Detailed info for ${name}\u0026lt;/p\u0026gt; `} \u0026lt;/div\u0026gt; `; } This lets you mount a reactive island inside a data-driven route.\n🆚 How It Compares Feature No-Build Client Islands Next.js Astro Fresh Build Step Required ❌ Never ✅ Yes ✅ Yes ✅ Yes Node.js Server Needed ❌ Static only ✅ Usually ✅ (build-time) ✅ Deno runtime Partial Hydration ✅ Manual, controlled ⚠️ Complex ✅ Built-in ✅ Built-in Framework Updates Break Apps ❌ Never ✅ Often ✅ Frequent ✅ Early-stage Bundle Size (Runtime) 🟢 ~6 KB total 🔴 100+ KB 🟡 Medium 🟡 Medium Backend Agnostic ✅ Yes ⚠️ Tight coupling ⚠️ Content-first ⚠️ Deno-focused Updatable in 2030? ✅ Yes ❌ Probably not ❌ Maybe not ❌ Unclear 🔐 Add Your Favorite Backend Want authentication, storage, or live APIs? Just plug in:\n🔧 PocketBase 🐳 Your own Go/Fiber/Actix server 🐍 Flask or FastAPI ☕ Spring Boot There’s zero lock-in. The frontend ships as static files — no server-side JS needed.\n🔥 Why Use No-Build Client Islands? 💡 Zero tooling required — no npm, no vite.config.js, no webpack nightmares ⚡ Fast load times — render only what you need, when you need it 🧠 No rehydration pain — everything starts fresh on the client 🧩 Modular by design — each interactive unit is its own reactive component 🧘 No churn — once deployed, it’ll work next year and the one after that ✨ Real-World Use Cases Internal tools and dashboards Control panels for IoT or admin UIs Lightweight apps served from a CDN Frontends talking to Rust/Go APIs 🧭 Final Thoughts Framework churn is real. Tooling fatigue is real. But you can ship interactive, modular, reactive frontends today with nothing but:\nA browser A text editor A few stable, fast libraries from CDN It’s time to build software that stays simple and runs forever.\n","permalink":"https://mozanunal.com/2025/05/client-islands/","summary":"\u003ch2 id=\"long-lasting-framework-free-web-apps-with-preact-htm-and-pagejs\"\u003eLong-Lasting, Framework-Free Web Apps with Preact, HTM, and Page.js\u003c/h2\u003e\n\u003cp\u003eAre you tired of:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRelearning your static site generator every 6 months?\u003c/li\u003e\n\u003cli\u003eChasing backwards-incompatible updates from Astro, Next.js, or Fresh?\u003c/li\u003e\n\u003cli\u003eDeploying full Node.js stacks just to serve a couple buttons and forms?\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWhat if you could build fast, reactive web apps that:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRun forever without framework churn\u003c/li\u003e\n\u003cli\u003eNeed no build tools or hydration pipelines\u003c/li\u003e\n\u003cli\u003eUse your favorite backend (Go, Rust, Java, Python\u0026hellip;) without coupling to JS\nframeworks?\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWelcome to \u003cstrong\u003eNo-Build Client Islands\u003c/strong\u003e — a practical, zero-build architecture\nfor interactive SPAs using native JavaScript modules, Preact + HTM for\nrendering, and Page.js for routing.\u003c/p\u003e","title":"🏝️ No-Build Client Islands"},{"content":"As developers, we all know the pain of context-switching between our code editor and separate AI interfaces just to ask a question, get code completion, or analyze an error message. What if you could bring the power of Large Language Models—powered by the incredibly flexible llm CLI by Simon Willison—directly inside Neovim, with streaming replies, model/tool selection, and one-key context management?\nToday, I’m excited to announce sllm.nvim: a (roughly 500-line) Lua plugin that brings deep llm CLI integration to Neovim in an asynchronous, focused, and highly hackable way.\nWhy sllm.nvim? llm is a CLI Swiss Army knife for working with LLMs, built by Simon Willison (creator of Django, Datasette, and sqlite-utils). It supports hundreds of models (via plugins like llm-openrouter), files, tools, and arbitrary context tricks.\nBut until now, integrating llm CLI into your real coding environment required a lot of copy-paste—and breaking flow by toggling terminals, browsers, and buffers.\nI built sllm.nvim so you can:\nChat with models in a streaming popup buffer (no annoying freezes or waiting) Add files, URLs, shell output, code selections, diagnostics—and even tools!—to the LLM context… in one keystroke Switch models and tools on the fly Get token usage/cost feedback and never overrun your limits …all without leaving Neovim. No more copy-paste error traces. No more browser tab juggling. Just ask, code, and iterate, staying in the flow.\nKey Features Interactive Chat: Ask questions and see responses stream directly into a live, markdown-formatted Neovim buffer. Context Management: In one keystroke, you can add the current file, an arbitrary URL, visual selections, diagnostics, shell command outputs, or LLM tools to be considered in your next prompt. Model \u0026amp; Tool Selection: Instantly pick from any installed llm model/plugins/tools and add them to context. Async, Non-blocking: Let LLM jobs run in the background—you keep editing or exploring. Usage Feedback: Optionally show tokens/cost for every request. UI via mini.nvim: Uses proven modules from mini.nvim for notifications and pickers—smooth and minimal. Example Workflow Open a file, highlight some lines, hit \u0026lt;leader\u0026gt;sv to add that code as context. Press \u0026lt;leader\u0026gt;ss and enter your question. Try \u0026lt;leader\u0026gt;sm to switch models, e.g. between GPT-4 and local models. Add a shell command’s output to context with \u0026lt;leader\u0026gt;sx. Add info on a bug by pressing \u0026lt;leader\u0026gt;sd (diagnostics). Need a third-party API or tool integration for your prompt? \u0026lt;leader\u0026gt;se lets you add LLM tools directly. Review token/cost estimates with every response. All responses stream into a markdown buffer—ready to reference, copy, or save.\nWant to Try It? Check it out here: https://github.com/mozanunal/sllm.nvim\nI’d love to hear feedback, issues, and wishes. PRs and suggestions are very welcome!\nCredits LLM engine: llm CLI by Simon Willison UI/pickers: mini.nvim by echanovski Plugin: mozanunal/sllm.nvim (MIT/Apache-2.0) Enjoy chatting and coding—without ever leaving Neovim!\n","permalink":"https://mozanunal.com/2025/05/sllm.nvim/","summary":"\u003cp\u003eAs developers, we all know the pain of context-switching between our code editor\nand separate AI interfaces just to ask a question, get code completion, or\nanalyze an error message. What if you could bring the power of Large Language\nModels—powered by the incredibly flexible\n\u003ca href=\"https://llm.datasette.io/en/stable/\"\u003e\u003ccode\u003ellm\u003c/code\u003e CLI by Simon Willison\u003c/a\u003e—\u003cstrong\u003edirectly\ninside Neovim\u003c/strong\u003e, with streaming replies, model/tool selection, and one-key\ncontext management?\u003c/p\u003e\n\u003cp\u003eToday, I’m excited to announce\n\u003ca href=\"https://github.com/mozanunal/sllm.nvim\"\u003e\u003ccode\u003esllm.nvim\u003c/code\u003e\u003c/a\u003e: a (roughly 500-line) Lua\nplugin that brings deep \u003ccode\u003ellm\u003c/code\u003e CLI integration to Neovim in an asynchronous,\nfocused, and highly hackable way.\u003c/p\u003e","title":"Introducing sllm.nvim: A Neovim Plugin for Seamless LLM Integration"},{"content":"Hey,\nToday I will come up with a very minimalistic wallpaper automation tool WPCTL. I spend most of my time on the computer. There are not too many options to have fun with while working on the computer. Interesting and colorful photos are one of the favorite entertainment sources for my daily routine. Therefore, I really like auto wallpaper changer programs which surprises me with different photos. I decided to use one of these programs. However, none of them is fulfiled my requirements. I want a wallpaper changer which should be like:\nIt must have beautifull image sources It should be configured easily It should be lightweight and has minimal dependency It should work with multi-monitor and different resolution options In a nutshell, I decided to develop a wallpaper changer script according to my requirements. I started with the image source for my script. There is a website called Unsplash which is a photo sharing website. However, it has a unique feature which differ it from similar apps. It has a very nice and license free API. To keep application similar and with minimum dependency I have written it as a bash scripts. Basically, wpctl script, get image source as argument, read the monitor resolutions and contruct Unsplash url according to them. It download the images from the constructed url and set it as wallpaper using Gnome wallpaper controller. This script also can be add as crontab script. By this, your wallpaper can be changed at the frequency you want. For source there are also 4 options. Details are from readme of Github repository. See you!\nwpctl Wallpaper Control is a minimalist wallpaaper automation tool for linux based on Unsplash\nGetting Started It is working with Unsplash Api\nMinimalist 100 lines of code zero dependency Auto resolution detection Multi monitor handling Tested on Ubuntu 18.04 with GNOME Desktop Prerequisities 1 sudo apt-get install wget notify-send Installing 1 2 3 sudo wget --quiet https://github.com/mozanunal/wpctl/releases/download/0.1.0/wpctl \\ -O /usr/local/bin/wpctl \u0026amp;\u0026amp; \\ sudo chmod +x /usr/local/bin/wpctl Try the application\n1 2 3 4 5 6 7 8 9 10 11 12 user@user:$ wpctl Please provide a valid wallpaper source Usage: wpctl \u0026lt;SOURCE\u0026gt; random daily collection topic1,topic2 user@user:$ wpctl random --\u0026gt; Random is selected as source. https://source.unsplash.com/random/1920x1080 --\u0026gt; From source \u0026#39;random\u0026#39; wallpaper set. 1920 x 1080 Wallpapers can automatically updated using crontab. Write following command and add line according to your favorite configuration\n1 crontab -e Every hours pick a random wallpaper\n1 0 * * * * /usr/local/bin/wpctl random Every day get daily photo as wallpaper\n1 0 10 * * * /usr/local/bin/wpctl daily Every 15 mins pick a cat image as your wallpaper\n1 */15 * * * * /usr/local/bin/wpctl cat Every 3 hours pick a blue image as your wallpaper\n1 0 */3 * * * /usr/local/bin/wpctl blue Uninstalling Remove binaries\n1 sudo rm /usr/local/bin/wpctl Remove picture\n1 rm -rf $HOME/wpctl Authors Mehmet Ozan Ünal License MIT Acknowledgments Unsplash ","permalink":"https://mozanunal.com/2021/10/wpctl-1/","summary":"\u003cp\u003eHey,\u003c/p\u003e\n\u003cp\u003eToday I will come up with a very minimalistic wallpaper automation tool\n\u003ca href=\"https://github.com/mozanunal/wpctl\"\u003e\u003cstrong\u003eWPCTL\u003c/strong\u003e\u003c/a\u003e. I spend most of my time on the\ncomputer. There are not too many options to have fun with while working on the\ncomputer. Interesting and colorful photos are one of the favorite entertainment\nsources for my daily routine. Therefore, I really like auto wallpaper changer\nprograms which surprises me with different photos. I decided to use one of these\nprograms. However, none of them is fulfiled my requirements. I want a wallpaper\nchanger which should be like:\u003c/p\u003e","title":"Wallpaper Automation Tool: WPCTL"},{"content":"What is randomness According to the Oxford Dictionary, \u0026ldquo;the randomness is the apparent lack of pattern or predictability in events\u0026rdquo;. Randomness implies \u0026ldquo;Unpredictability\u0026rdquo;. To practically illustrated it: if a sequence of numbers is given and you have no way to predict what the next number in the sequence will be - then the sequence is random. A single number cannot ever be random. 13…ok…not random. But: 1, 3, 5, 7, 9, 11, 13 …the ‘13’ doesn’t seem very random because you could have predicted it with almost complete certainty.\nTheoretical Approach Central Limit Theorem Mathematically, if $X_{1}, X_{2}, \\ldots, X_{n}$ is a random sample of size $n$ taken from a population with mean $\\mu$ and finite variance $\\sigma^{2}$ and if $\\bar{X}$ is the sample mean, the limiting form of the distribution of $Z=\\left(\\frac{X-\\mu}{\\sigma / N / N}\\right)$ as $n \\rightarrow \\infty$, is the standard normal distribution. There are no constraints on the distribution of the input signal. It can be anything, even if the distribution of the source signal does not seem like the Gaussian Distribution, eventually, the sample means will be converged to Gaussian Distribution.\nBerry-Essen Theorem In probability theory, the central limit theorem states that, under certain circumstances, the probability distribution of the scaled mean of a random sample converges to a normal distribution as the sample size increases to infinity. Under stronger assumptions, the Berry–Esseen theorem, or Berry–Esseen inequality, gives a more quantitative result, because it also specifies the rate at which this convergence takes place by giving a bound on the maximal error of approximation between the normal distribution and the true distribution of the scaled sample mean.\n$$\\left|F_{n}(x)-\\Phi(x)\\right| \\leq \\frac{C \\rho}{\\sigma^{3} \\sqrt{n}}$$\nWhere: C is a constant, Fn is the cumulative distribution function, and $\\theta$ is the cumulative distribution function of the standard normal distribution.\nGödel\u0026rsquo;s Incompleteness Theorems It is not possible at all to say is a finite series of numbers is random or not. It is a consequence of the Gödel\u0026rsquo;s incompleteness theorems 1. For example, if there is a number generators which creates numbers from 1 to 10 and it is creating the sequence of \u0026ldquo;2 2 2 2 2 2 2 2\u0026rdquo;. However it still can be the part of a random series and you just saw a lucky (unlucky) sequence. On the other hand \u0026ldquo;4,9,1,5,5,7,2,1,1,9,5,6\u0026rdquo; is not also indicates randomness. Our source could following a certain sequence and it start to repeat after $(n+1)^{th}$ step.\nPractical Examples Statistical Analysis The histograms of the random sequence can give information about whether the sequence is random or not. Histogram show the discrete distribution the samples. Therefore, according to sample distribution it is possible to make predictions about the randomness of the signal.\nThe second method can be the auto-correlation test. Auto-correlation is a method to calculate the self similarity and repeated patterns of the sequence. For this purpose, the sequence is lagged and correlation coefficient is calculated with the lagged version of itself.\nCompressibility One of the property which indicates the randomness is compressibility. Kolmogorov randomness states that is a signal is not random it should be compressible 2. Furthermore there is a theory depends on this fact which is \u0026ldquo;Compressed Sensing\u0026rdquo;. According to this theory, the natural signals should be compressible. Therefore, for example their total variation should be small. Using this theory, Total variation is used as constraint during the optimization to keep the total variation of the signal smaller. Therefore noisy signals are cleaned with this method.\nTrue Random Generators The true random generator is investigated since it should provide a high amount of randomness. It is a piece of hardware equipment that creates truly random samples when it is needed. Randomness is used in lots of places in computers such as video rendering, cryptography, and programming. Therefore, these devices are developed to feed computer programs with random numbers. When these devices are designed, the pseudo-randomness is generated with high entropy input sources 3. The generated sample at t, should not give any information about the sample before the t or the sample after the t.\nConclusion In the end, according to the probability theory, true randomness can not be proven. For engineering purposes, it is only defined according to requirements and can be measured to detect non-randomness or patterns. This may bring the question \u0026ldquo;Is the true randomness exist?\u0026rdquo;. Maybe one-day physics can answer that question certainly. According to the latest theories, Quantum physics suggests that truly random events occur on the basis of Heisenberg\u0026rsquo;s Uncertainty Principle.\nReferences Arbib, M. A. (1987). G ̈odel’s Incompleteness Theorem, pages 162–188. Springer US, New York, NY.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nMartin-L ̈of, P. (1966). The definition of random sequences. Information and Control, 9(6):602 – 619\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nChaitin, G. J. (2008). Randomness and mathematical proof, pages 31–46.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://mozanunal.com/2020/06/randomness/","summary":"\u003ch1 id=\"what-is-randomness\"\u003eWhat is randomness\u003c/h1\u003e\n\u003cp\u003eAccording to the Oxford Dictionary, \u003cem\u003e\u0026ldquo;the randomness is the apparent lack of\npattern or predictability in events\u0026rdquo;\u003c/em\u003e. Randomness implies \u0026ldquo;Unpredictability\u0026rdquo;. To\npractically illustrated it: if a sequence of numbers is given and you have no\nway to predict what the next number in the sequence will be - then the sequence\nis random. A single number cannot ever be random. 13…ok…not random. But: 1, 3,\n5, 7, 9, 11, 13 …the ‘13’ doesn’t seem very random because you could have\npredicted it with almost complete certainty.\u003c/p\u003e","title":"Rambling On Randomness"},{"content":"Harmonica Note Converter aims to create a python library to convert notes or tabs for different kind of harmonicas. It is based on musthe.\nhttps://github.com/mozanunal/harmonica-note-converter\nStory Some of you know that I am an ameteur harmonica player and I love harmonicas. I usually play diatonic harmonicas but last time I have bought a chromatic harmonica, which has quite different tone and it is hard to find music notes for it.\nI am not the best at playing instruments. However, I am good at coding and music theory. That\u0026rsquo;s why I decide to develop a tool to convert music notes for any instrument to notes for my harmonicas. I also create an modular structure to define new instruments.\nGetting Started Installing First, The source code of the project should be cloned to your PC.\n1 git clone https://github.com/mozanunal/harmonica-note-converter Demo To test this project in your computer, you should run following commands.\n1 2 3 cd harmonica-note-converter python3 test.py #python test.py It is a video to demonstrate the tone shift feature of my code. It is quite easy to use. I suggest you to have a look in this link and test the script with following code. See you!\nUse It For Your Instruments and Notes Defining Instruments Example code of C tone diatonic harmonica. You should add your instrument to harmonica folder and add to init file.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 diatonic_C = { \u0026#34;1\u0026#34;: \u0026#34;C2\u0026#34;, \u0026#34;1*\u0026#34;: \u0026#34;C#2\u0026#34;, \u0026#34;-1\u0026#34;: \u0026#34;D2\u0026#34;, \u0026#34;-1*\u0026#34;: \u0026#34;D#2\u0026#34;, \u0026#34;2\u0026#34;: \u0026#34;E3\u0026#34;, \u0026#34;2*\u0026#34;: \u0026#34;E#3\u0026#34;, \u0026#34;-2\u0026#34;: \u0026#34;G2\u0026#34;, \u0026#34;-2*\u0026#34;: \u0026#34;G#2\u0026#34;, \u0026#34;3\u0026#34;: \u0026#34;G2\u0026#34;, \u0026#34;3*\u0026#34;: \u0026#34;G#2\u0026#34;, \u0026#34;-3\u0026#34;: \u0026#34;B2\u0026#34;, \u0026#34;-3*\u0026#34;: \u0026#34;B#2\u0026#34;, \u0026#34;4\u0026#34;: \u0026#34;C3\u0026#34;, \u0026#34;4*\u0026#34;: \u0026#34;C#3\u0026#34;, \u0026#34;-4\u0026#34;: \u0026#34;D3\u0026#34;, \u0026#34;-4*\u0026#34;: \u0026#34;D#3\u0026#34;, \u0026#34;5\u0026#34;: \u0026#34;E3\u0026#34;, \u0026#34;5*\u0026#34;: \u0026#34;E#3\u0026#34;, \u0026#34;-5\u0026#34;: \u0026#34;F3\u0026#34;, \u0026#34;-5*\u0026#34;: \u0026#34;F#3\u0026#34;, \u0026#34;6\u0026#34;: \u0026#34;G3\u0026#34;, \u0026#34;6*\u0026#34;: \u0026#34;G#3\u0026#34;, \u0026#34;-6\u0026#34;: \u0026#34;A3\u0026#34;, \u0026#34;-6*\u0026#34;: \u0026#34;A#3\u0026#34;, \u0026#34;7\u0026#34;: \u0026#34;C4\u0026#34;, \u0026#34;7*\u0026#34;: \u0026#34;C#4\u0026#34;, \u0026#34;-7\u0026#34;: \u0026#34;B3\u0026#34;, \u0026#34;-7*\u0026#34;: \u0026#34;B#3\u0026#34;, \u0026#34;8\u0026#34;: \u0026#34;E4\u0026#34;, \u0026#34;8*\u0026#34;: \u0026#34;E#4\u0026#34;, \u0026#34;-8\u0026#34;: \u0026#34;D4\u0026#34;, \u0026#34;-8*\u0026#34;: \u0026#34;D#4\u0026#34;, \u0026#34;9\u0026#34;: \u0026#34;G4\u0026#34;, \u0026#34;9*\u0026#34;: \u0026#34;G#4\u0026#34;, \u0026#34;-9\u0026#34;: \u0026#34;F4\u0026#34;, \u0026#34;-9*\u0026#34;: \u0026#34;F#4\u0026#34;, \u0026#34;10\u0026#34;: \u0026#34;A4\u0026#34;, \u0026#34;10*\u0026#34;: \u0026#34;A#4\u0026#34;, \u0026#34;-10\u0026#34;: \u0026#34;C5\u0026#34;, \u0026#34;-10*\u0026#34;: \u0026#34;C#5\u0026#34; } Converting Tab Between Instruments Following script is written to convert Game of Thrones theme song tabs for diatonic C harmonica to chromatic harmonica tabs. In the first part, the tab string is converted to a song object. Then song exported for swan1040 harmonica. Above this part, you have already learned to implement your instrument. Now, you can export these notes as tab for your instrument.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from harmonica import swan1040, diatonic_C from song import Song gotTheme = Song(\u0026#34;GoT Theme\u0026#34;) gotTheme.getFromTabs( diatonic_C, \u0026#34;\u0026#34;\u0026#34; -6 -4 -5 +6 -6 -4 -5 +6 +5 +6 +4 +5 -5 +6 +4 -5 +5 -4 -6 -4 -5 +6 -6 -4 -5 +6 +5 +6 +4 +5 -5 +5 +4 -4 -8 +7 -4 -6 -3* -5 +6 -6 -8 +7 +6 -6 -3* -5 +5 -4 \u0026#34;\u0026#34;\u0026#34;.replace(\u0026#34;\\t\u0026#34;,\u0026#34; \u0026#34;).replace(\u0026#34;+\u0026#34;,\u0026#34;\u0026#34;) ) gotTheme.exportTabs(swan1040) Script output:\n1 2 3 4 5 6 7 8 9 GoT Theme -------------- -7 -5 -6 7 -7 -5 -6 7 6 7 5 6 -6 7 5 -6 6 -5 -7 -5 -6 7 -7 -5 -6 7 6 7 5 6 -6 6 5 -5 -9 -8* -5 -7 5 -6 7 -7 -9 -8* 7 -7 5 -6 6 -5 -------------- Shifting the Tone The other feature which I implemented is tone shifting. It is possible to shift the tone of the song which you give to the system. Probably, it is quite easy task for real musicians, but it is always a challenge for me. It is quite easy to implememted it with code. In that why, I can easily change the tone of the songs which I want to play with my harmonica.\nTest script:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 from harmonica import swan1040, diatonic_C from song import Song gotTheme = Song(\u0026#34;GoT Theme\u0026#34;) gotTheme.getFromTabs( diatonic_C, \u0026#34;\u0026#34;\u0026#34; -6 -4 -5 +6 -6 -4 -5 +6 +5 +6 +4 +5 -5 +6 +4 -5 +5 -4 -6 -4 -5 +6 -6 -4 -5 +6 +5 +6 +4 +5 -5 +5 +4 -4 -8 +7 -4 -6 -3* -5 +6 -6 -8 +7 +6 -6 -3* -5 +5 -4 \u0026#34;\u0026#34;\u0026#34;.replace(\u0026#34;\\t\u0026#34;,\u0026#34; \u0026#34;).replace(\u0026#34;+\u0026#34;,\u0026#34;\u0026#34;) ) gotTheme.exportTabs(swan1040) gotTheme.shift(-12) gotTheme.exportTabs(swan1040) gotTheme.shift(+14) Output is like:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 GoT Theme -------------- -7 -5 -6 7 -7 -5 -6 7 6 7 5 6 -6 7 5 -6 6 -5 -7 -5 -6 7 -7 -5 -6 7 6 7 5 6 -6 6 5 -5 -9 -8* -5 -7 5 -6 7 -7 -9 -8* 7 -7 5 -6 6 -5 -------------- -------------- GoT Theme -3 -1 -2 3 -3 -1 -2 3 2 3 1 2 -2 3 1 -2 2 -1 -3 -1 -2 3 -3 -1 -2 3 2 3 1 2 -2 2 1 -1 -5 5 -1 -3 1 -2 3 -3 -5 5 3 -3 1 -2 2 -1 -------------- -------------- GoT Theme -8 6 7 -7 -8 6 7 -7 -6* -7 -5 -6* 7 -7 -5 7 -6* 6 -8 6 7 -7 -8 6 7 -7 -6* -7 -5 -6* 7 -6* -5 6 9 -9 6 -8 -5 7 -7 -8 9 -9 -7 -8 -5 7 -6* 6 -------------- Built With Python Python \u0026lt;3 musthe Music Theory Implementation ","permalink":"https://mozanunal.com/2020/05/harmonica-note-conv/","summary":"\u003cp\u003e\u003cstrong\u003eHarmonica Note Converter\u003c/strong\u003e aims to create a python library to convert notes or\ntabs for different kind of harmonicas. It is based on\n\u003ca href=\"https://github.com/gciruelos/musthe\"\u003emusthe\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/mozanunal/harmonica-note-converter\"\u003ehttps://github.com/mozanunal/harmonica-note-converter\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"story\"\u003eStory\u003c/h2\u003e\n\u003cp\u003eSome of you know that I am an ameteur harmonica player and I love harmonicas. I\nusually play diatonic harmonicas but last time I have bought a chromatic\nharmonica, which has quite different tone and it is hard to find music notes for\nit.\u003c/p\u003e\n\u003cp\u003eI am not the best at playing instruments. However, I am good at coding and music\ntheory. That\u0026rsquo;s why I decide to develop a tool to convert music notes for any\ninstrument to notes for my harmonicas. I also create an modular structure to\ndefine new instruments.\u003c/p\u003e","title":"Harmonica Note Converter"},{"content":"Medical Imaging Planes Axial (Transverse) Plane Coronal Plane Sagittal Plane ","permalink":"https://mozanunal.com/2020/04/imaging-axis/","summary":"\u003ch1 id=\"medical-imaging-planes\"\u003eMedical Imaging Planes\u003c/h1\u003e\n\u003cp\u003e\u003cimg alt=\"Source: https://mevislabdownloads.mevis.de/docs/current/MeVisLab/Resources/Documentation/Publish/SDK/GettingStarted/ch12s05.html\" loading=\"lazy\" src=\"/images/imaging/planes.png\"\u003e\u003c/p\u003e\n\u003ch2 id=\"axial-transverse-plane\"\u003eAxial (Transverse) Plane\u003c/h2\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/imaging/axial.gif\"\u003e\u003c/p\u003e\n\u003ch2 id=\"coronal-plane\"\u003eCoronal Plane\u003c/h2\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/imaging/coronal.gif\"\u003e\u003c/p\u003e\n\u003ch2 id=\"sagittal-plane\"\u003eSagittal Plane\u003c/h2\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/imaging/sagittal.gif\"\u003e\u003c/p\u003e","title":"Medical Imaging Planes"},{"content":"Hello Everyone,\nI want to share our solution for Google Hash Code 2020. It is the code repo of team titanium-white for Google Hash Code 2020 Online Qualification Round. We have writen our code in Python.\nCode can be reached from here\nCode Basically, the problem class is the backbone of the system.\nIt handles the inputs and outputs with functions __init__ and dump. It read the input files and creates objects according to that. I think the one of the thing we did well is this __init__ function. It create all the objects like books, libraries even if book2score dictionary. It also handles the solving opeartion. It iterate trough the days and get max predicted score from every library available. When the libraries calculating the max pred scores, they get the current state as input. Therefore their predictionsa are more accurate. After the library is selected the state is updated such as day, already scanned books and state of the selected library. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 # main.py from library import Library, Book import numpy as np class Problem(object): def __init__(self, filename): print(\u0026#39;file--\u0026#39;, filename) f = open(filename) l = f.readline().split(\u0026#39; \u0026#39;) self.filename = filename self.nBooks, self.nLibs, self.nDays = int(l[0]), int(l[1]), int(l[2]) self.books = [ Book(i,int(score)) for i, score in enumerate(f.readline().split(\u0026#39; \u0026#39;))] sumb = 0 for b in self.books: sumb += b.score print( sumb/1000000 ) self.book2Score = {book.id: int(book.score) for book in self.books} self.libs = [] for libId in range(self.nLibs): l = [int(i) for i in f.readline().split(\u0026#39; \u0026#39;)] nBooks, nSign, nScan = l[0], l[1], l[2] books = [ Book(int(i), int(self.book2Score[int(i)])) for i in f.readline().split(\u0026#39; \u0026#39;) ] lib = Library(libId, nBooks, nSign, nScan, books) self.libs.append(lib) self.pri() def solve(self): t = 0 solution = [] readBookSet = set() while t \u0026lt; self.nDays: print(\u0026#39;-----\u0026#39;, t) scoreList = [] readBookList = [] for lib in self.libs: if lib.registered == False: score, curBookList = lib.predMaxScore(self.nDays - t, readBookSet) scoreList.append( score ) readBookList.append( curBookList ) else: scoreList.append(0) readBookList.append( [ ] ) if len(scoreList) == 0: break if max(scoreList) == 0: break libIndex = scoreList.index(max(scoreList)) self.libs[libIndex].registeredDay = t self.libs[libIndex].registered = True self.libs[libIndex].solBooks = readBookList[libIndex] readBookSet = readBookSet.union(readBookList[libIndex]) solution.append(self.libs[libIndex]) t += self.libs[libIndex].nSign print([(lib.id, lib.nSign, lib.registeredDay) for lib in solution]) return solution def dump(self, solution): f = open(self.filename.replace(\u0026#39;data/\u0026#39;, \u0026#39;out/\u0026#39;), \u0026#39;w+\u0026#39;) f.write(\u0026#39;{}\\n\u0026#39;.format(len(solution))) for lib in solution: books = lib.solBooks f.write(\u0026#39;{} {}\\n\u0026#39;.format( lib.id, len(books) )) s = \u0026#34;\u0026#34; for book in books: s+= str(book) + \u0026#39; \u0026#39; s+=\u0026#39;\\n\u0026#39; f.write(s) f.close() def pri(self): print(\u0026#39;------\u0026#39;) print(self.nBooks, self.nLibs, self.nDays) #print(self.libs) print(\u0026#39;------\u0026#39;) if __name__ == \u0026#34;__main__\u0026#34;: p = Problem(\u0026#39;data/a.txt\u0026#39;) solution = p.solve() p.dump(solution) The Second critical class is Library class. The vital function in our implementation is predMaxScore. We are doing calculating this with total book score / (sign day*sign day). Because, during our experiments, we saw that the sign days length is quite important especially for some datasets. Total book score is simply if in that day the library is chosen, how much of the books can be scanned until the end of total days. Of course these books are selecting according to their scores and they should be not scanned before.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 # library.py import operator class Library(object): def __init__(self, idx, nBook, nSign, nScan, books): self.id = idx self.nBook = nBook self.nSign = nSign self.nScan = nScan self.books = list(reversed(sorted(books, key=operator.attrgetter(\u0026#39;score\u0026#39;)) )) self.tempBooks = self.books[:] self.registered = False self.registeredDay = None self.solBooks = [] def predMaxScore(self, nDays, readBookSet): restDays = nDays - self.nSign if restDays \u0026lt; 0: return 0, [] unReadBooks = set([book.id for book in self.tempBooks]) - readBookSet newBooks = [] for book in self.tempBooks: if book.id in unReadBooks: newBooks.append(book) self.tempBooks = newBooks sumScore = 0 bookCap = restDays*self.nScan readBooks= self.tempBooks[:bookCap] readBooksId=[book.id for book in self.tempBooks[:bookCap]] for book in readBooks: sumScore += book.score return float(sumScore)/(float(self.nSign)**2), readBooksId def __repr__(self): return \u0026#34;Lib[{}:{}:{}--{}]\u0026#34;.format(self.nBook, self.nSign, self.nScan, self.books) class Book(object): def __init__(self, id, score, scanned=False): self.id = id self.score = score def __repr__(self): return \u0026#34;Book[{}:{}]\u0026#34;.format(self.id, self.score) Results With these scores, we were 231th in the World and 7th in Turkey.\nYou can check out my posts about Hash Code 2017 and Hash Code 2018:\nhttps://mozanunal.com/2017/07/Google-Hash-Code-2017/ https://mozanunal.com/2018/04/hash-code-2018/\nHopefully, see you again. Thank you!\n","permalink":"https://mozanunal.com/2020/03/hash-code-2020/","summary":"\u003cp\u003e\u003cstrong\u003eHello Everyone,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eI want to share our solution for Google Hash Code 2020. It is the code repo of\nteam titanium-white for Google Hash Code 2020 Online Qualification Round. We\nhave writen our code in Python.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/mozanunal/hashcode2020\"\u003eCode can be reached from here\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"code\"\u003eCode\u003c/h2\u003e\n\u003cp\u003eBasically, the problem class is the backbone of the system.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIt handles the inputs and outputs with functions \u003ccode\u003e__init__\u003c/code\u003e and \u003ccode\u003edump\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eIt read the input files and creates objects according to that. I think the one\nof the thing we did well is this \u003ccode\u003e__init__\u003c/code\u003e function. It create all the\nobjects like books, libraries even if book2score dictionary.\u003c/li\u003e\n\u003cli\u003eIt also handles the solving opeartion. It iterate trough the days and get max\npredicted score from every library available. When the libraries calculating\nthe max pred scores, they get the current state as input. Therefore their\npredictionsa are more accurate. After the library is selected the state is\nupdated such as day, already scanned books and state of the selected library.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e40\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e43\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e44\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e45\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e46\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e47\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e48\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e49\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e50\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e51\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e52\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e53\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e54\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e55\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e56\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e57\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e58\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e59\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e60\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e61\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e62\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e63\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e64\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e65\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e66\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e67\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e68\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e69\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e70\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e71\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e72\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e73\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e74\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e75\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e76\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e77\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e78\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e79\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e80\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e81\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e82\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e83\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e84\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# main.py\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003elibrary\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eLibrary\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eBook\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003enumpy\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nn\"\u003enp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProblem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;file--\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereadline\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efilename\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enBooks\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enLibs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enDays\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]),\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]),\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebooks\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"n\"\u003eBook\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003escore\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003escore\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003eenumerate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereadline\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e))]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003esumb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003esumb\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003escore\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003esumb\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e1000000\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebook2Score\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003ebook\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebook\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003escore\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ebook\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elibs\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003elibId\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enLibs\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereadline\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003enBooks\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enSign\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enScan\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ebooks\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"n\"\u003eBook\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebook2Score\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)]))\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereadline\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003elib\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eLibrary\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elibId\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enBooks\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enSign\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enScan\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elibs\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elib\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epri\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esolve\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003esolution\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ereadBookSet\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enDays\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;-----\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003escoreList\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ereadBookList\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003elib\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elibs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eregistered\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003escore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecurBookList\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epredMaxScore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enDays\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereadBookSet\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003escoreList\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003escore\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003ereadBookList\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003ecurBookList\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003escoreList\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003ereadBookList\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003escoreList\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003escoreList\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003elibIndex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003escoreList\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003escoreList\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elibs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003elibIndex\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eregisteredDay\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elibs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003elibIndex\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eregistered\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elibs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003elibIndex\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esolBooks\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereadBookList\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003elibIndex\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ereadBookSet\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ereadBookSet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunion\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereadBookList\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003elibIndex\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003esolution\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elibs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003elibIndex\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elibs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003elibIndex\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enSign\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e([(\u003c/span\u003e\u003cspan class=\"n\"\u003elib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enSign\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eregisteredDay\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003elib\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003esolution\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003esolution\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edump\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esolution\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;data/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;out/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;w+\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"si\"\u003e{}\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esolution\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003elib\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003esolution\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ebooks\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esolBooks\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"si\"\u003e{}\u003c/span\u003e\u003cspan class=\"s1\"\u003e \u003c/span\u003e\u003cspan class=\"si\"\u003e{}\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003elib\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ebook\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ebooks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebook\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e+=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epri\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;------\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enBooks\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enLibs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enDays\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e#print(self.libs)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;------\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;__main__\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eProblem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;data/a.txt\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esolution\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esolve\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edump\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esolution\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThe Second critical class is \u003ccode\u003eLibrary\u003c/code\u003e class. The vital function in our\nimplementation is predMaxScore. We are doing calculating this with\n\u003ccode\u003etotal book score / (sign day*sign day)\u003c/code\u003e. Because, during our experiments, we\nsaw that the sign days length is quite important especially for some datasets.\nTotal book score is simply if in that day the library is chosen, how much of the\nbooks can be scanned until the end of total days. Of course these books are\nselecting according to their scores and they should be not scanned before.\u003c/p\u003e","title":"Hash Code 2020"},{"content":"Hello Everyone,\nJust a quick post here\u0026hellip;\nToday I have seen a code snippet which makes me quite happy.\n1 2 3 4 5 6 7 8 9 #include \u0026lt;stdio.h\u0026gt; int main() { int x = 10; while (x --\u0026gt; 0) // x goes to 0 { printf(\u0026#34;%d \u0026#34;, x); } } The the output of this is:\n1 9 8 7 6 5 4 3 2 1 0 It was a little suprising for me at first sight. I thought that what the hell is --\u0026gt; operator. After then I understand that it is actually x-- and \u0026gt;. X compared with 0 (cheked if it is bigger than 0) and then it is decremented by 1. Therefore, this loop can be decoded to this:\n1 2 3 4 5 while (x \u0026gt; 0) // x goes to 0 { x = x - 1; printf(\u0026#34;%d \u0026#34;, x); } After the mistery solved, I still like this approach. I am planning to use it in my code.\nHope to see you soon, again.\n","permalink":"https://mozanunal.com/2020/03/coolest-c-trick/","summary":"\u003cp\u003eHello Everyone,\u003c/p\u003e\n\u003cp\u003eJust a quick post here\u0026hellip;\u003c/p\u003e\n\u003cp\u003eToday I have seen a code snippet which makes me quite happy.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e9\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e#include\u003c/span\u003e \u003cspan class=\"cpf\"\u003e\u0026lt;stdio.h\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// x goes to 0\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%d \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThe the output of this is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e9 8 7 6 5 4 3 2 1 0\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eIt was a little suprising for me at first sight. I thought that what the hell is\n\u003ccode\u003e--\u0026gt;\u003c/code\u003e operator. After then I understand that it is actually \u003ccode\u003ex--\u003c/code\u003e and \u003ccode\u003e\u0026gt;\u003c/code\u003e. X\ncompared with 0 (cheked if it is bigger than 0) and then it is decremented by 1.\nTherefore, this loop can be decoded to this:\u003c/p\u003e","title":"Coolest C Trick"},{"content":"Micropython Mqtt Streamer Hello everyone, I have developed a micropython code to stream accelerometer data over mqtt. Also I have created a tool to visualize the data which is transferred from remote MQTT device which is executing micropython code.\nDemo Development The first thing which I tried with micropython is connecting ESP8266 to a WiFi. I have tried the following script which I found from the official documentation of the micropython.\n1 2 3 4 import network wlan = network.WLAN(network.STA_IF) wlan.active(True) wlan.connect(\u0026#39;ssid\u0026#39;, \u0026#39;password\u0026#39;) The wifi ip of the module can be examined with wlan.ifconfig() command. I should say that scripting with a microcontoller is quite fun. ESP8266 was connected over usb over Uart line to my computer and I can scripting using micropython shell. For example: I have used upip module to install umqtt.simple upython module to my ESP8266. After installing the umqtt module, I have tested its basic examples and they worked without any problem.\n1 2 3 4 \u0026gt;\u0026gt;\u0026gt; import upip \u0026gt;\u0026gt;\u0026gt; dir(upip) [\u0026#39;__class__\u0026#39;, \u0026#39;__name__\u0026#39;, \u0026#39;errno\u0026#39;, \u0026#39;gc\u0026#39;, \u0026#39;help\u0026#39;, \u0026#39;json\u0026#39;, \u0026#39;os\u0026#39;, \u0026#39;sys\u0026#39;, \u0026#39;usocket\u0026#39;, \u0026#39;ussl\u0026#39;, \u0026#39;uzlib\u0026#39;, \u0026#39;main\u0026#39;, \u0026#39;debug\u0026#39;, \u0026#39;tarfile\u0026#39;, \u0026#39;install_path\u0026#39;, \u0026#39;cleanup_files\u0026#39;, \u0026#39;gzdict_sz\u0026#39;, \u0026#39;file_buf\u0026#39;, \u0026#39;NotFoundError\u0026#39;, \u0026#39;op_split\u0026#39;, \u0026#39;op_basename\u0026#39;, \u0026#39;_makedirs\u0026#39;, \u0026#39;save_file\u0026#39;, \u0026#39;install_tar\u0026#39;, \u0026#39;expandhome\u0026#39;, \u0026#39;warn_ussl\u0026#39;, \u0026#39;url_open\u0026#39;, \u0026#39;get_pkg_metadata\u0026#39;, \u0026#39;fatal\u0026#39;, \u0026#39;install_pkg\u0026#39;, \u0026#39;install\u0026#39;, \u0026#39;get_install_path\u0026#39;, \u0026#39;cleanup\u0026#39;] \u0026gt;\u0026gt;\u0026gt; upip.install(\u0026#34;umqtt.simple\u0026#34;) Next phase is reading data from accelerometer. I have used MPU6050 as the IMU sensor. It consists a gyro and an accelerometer sensor. I have used i2c scanner example code to detect the i2c address of the device. The address of my MPU6050 is 0x68.\n1 2 3 4 5 6 7 8 9 \u0026gt;\u0026gt;\u0026gt; i2c.scan() # scan for slaves on the bus, # returning a list of valid addresses \u0026gt;\u0026gt;\u0026gt; for device in devices: ... print(\u0026#34;Decimal address: \u0026#34;,device,\u0026#34; | Hexa address: \u0026#34;,hex(device)) ... ... ... Decimal address: 104 | Hexa address: 0x68 The following class is developed to read sensor values directly from MPU6050.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 import machine class accel(): def __init__(self, i2c, addr=0x68): self.iic = i2c self.addr = addr self.iic.start() self.iic.writeto(self.addr, bytearray([107, 0])) self.iic.stop() def get_raw_values(self): self.iic.start() a = self.iic.readfrom_mem(self.addr, 0x3B, 14) self.iic.stop() return a def get_ints(self): b = self.get_raw_values() c = [] for i in b: c.append(i) return c def bytes_toint(self, firstbyte, secondbyte): if not firstbyte \u0026amp; 0x80: return firstbyte \u0026lt;\u0026lt; 8 | secondbyte return - (((firstbyte ^ 255) \u0026lt;\u0026lt; 8) | (secondbyte ^ 255) + 1) def get_values(self): raw_ints = self.get_raw_values() vals = {} vals[\u0026#34;AcX\u0026#34;] = self.bytes_toint(raw_ints[0], raw_ints[1]) vals[\u0026#34;AcY\u0026#34;] = self.bytes_toint(raw_ints[2], raw_ints[3]) vals[\u0026#34;AcZ\u0026#34;] = self.bytes_toint(raw_ints[4], raw_ints[5]) vals[\u0026#34;Tmp\u0026#34;] = self.bytes_toint(raw_ints[6], raw_ints[7]) / 340.00 + 36.53 vals[\u0026#34;GyX\u0026#34;] = self.bytes_toint(raw_ints[8], raw_ints[9]) vals[\u0026#34;GyY\u0026#34;] = self.bytes_toint(raw_ints[10], raw_ints[11]) vals[\u0026#34;GyZ\u0026#34;] = self.bytes_toint(raw_ints[12], raw_ints[13]) return vals # returned in range of Int16 # -32768 to 32767 def val_test(self): # ONLY FOR TESTING! Also, fast reading sometimes crashes IIC from time import sleep while 1: print(self.get_values()) sleep(0.05) Main loop is also quite strait-forward. It read samples from acc and send these over mqtt protocol directly to the server.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from machine import I2C, Pin import mpu6050 from umqtt.simple import MQTTClient import time, json i2c = I2C(scl=Pin(5), sda=Pin(4)) accelerometer = mpu6050.accel(i2c) c = MQTTClient(\u0026#34;umqtt_client\u0026#34;, \u0026#34;iot.eclipse.org\u0026#34;) c.connect() def run(): while True: c.publish( b\u0026#34;micropython/test/mpu6050\u0026#34;, json.dumps(accelerometer.get_values()) ) time.sleep_ms(45) run() The code can be reached from this github repo.\nReferences https://randomnerdtutorials.com/micropython-mqtt-esp32-esp8266/ https://github.com/adamjezek98/MPU6050-ESP8266-MicroPython mpu6050.py https://docs.micropython.org/en/latest/library/network.WLAN.html https://learn.adafruit.com/micropython-basics-esp8266-webrepl/access-webrepl ","permalink":"https://mozanunal.com/2020/02/micropython-mqtt-stream/","summary":"\u003ch1 id=\"micropython-mqtt-streamer\"\u003eMicropython Mqtt Streamer\u003c/h1\u003e\n\u003cp\u003eHello everyone, I have developed a micropython code to stream accelerometer data\nover mqtt. Also I have created a tool to visualize the data which is transferred\nfrom remote MQTT device which is executing micropython code.\u003c/p\u003e\n\u003ch2 id=\"demo\"\u003eDemo\u003c/h2\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube-nocookie.com/embed/5v9RwN818p8?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003ch2 id=\"development\"\u003eDevelopment\u003c/h2\u003e\n\u003cp\u003eThe first thing which I tried with micropython is connecting ESP8266 to a WiFi.\nI have tried the following script which I found from the official documentation\nof the micropython.\u003c/p\u003e","title":"Micropython Mqtt Streamer"},{"content":"Hello everyone, Today, I will show how can you filter out the noise from the raw ECG signal. Let\u0026rsquo;s start!\nWhat is ECG? Electrocardiography (ECG) is the measurement of the bioelectrical activity during the contraction and relaxation stages of the atria and ventricles of the heart, the stimulation of the heart and the conduction of the stimulus. ECG signal has some specific waves which correspond to particular conditions.\nPart of the ECG Signal ECG Circuit During this process, a 9V battery was used as a source to prevent leakage current through the person to whom the electrodes were connected and the sockets to which the oscilloscopes were connected were checked. Also, in case of any leakage, the person was allowed to separate his feet from the floor with the help of the plastic chair he was sitting during the experiment and not to be in physical contact with any person. The electrode attached to the right leg is connected to the low-potential end (ground) of the battery as shown in the figure above. The remaining two electrode terminals were connected to the negative and positive input terminals on pins 2 and 3 of the INA118. A quite simple circuit is created. It is shown in the next image. It basically consists of 3 components: 2 x 9V battery, instrumentation amplifier INA118 with proper connection and a gain resistor, and electrode connections. The circuit is not the main focus of this post. For further information please send me an email. In this post, I will focus on digital filters that can be used to filter out the noise from the ECG signal.\nECG Circuit Schematic Cleaning Noise Scope image of the output signal of the ECG circuit The output of the circuit sampled using a digital oscilloscope and then it is exported as CSV file. The file consists of 8000 samples for 2 seconds time window which means 4 kHz sampling frequency. The raw oscilloscope output can be examined from the next figure.\nRaw ECG Data First, the frequency domain components of the ECG data are examined. FFT transform is applied to data and its frequency components are plotted in the next figure. Since the Nyquist theorem says that maximum frequency can be measured is half of the sampling frequency, the max frequency component is 2 kHz.\n0 - 2 kHz Frequency Spectrum In the next figure, the plot is zoomed to frequency components between 0 - 200 Hz. As you can see from the plot, there is a big noise component at 50 Hz frequency because of the mains electricity. It should be filtered for a cleaner ECG signal.\n0 - 200 Hz Frequency Spectrum A digital IIR filter is designed to filter out a 50 Hz frequency component. It is a Chebyshev Type 2 filter with 16 filter coefficients. It provides -60 dB gain between 47 - 53 Hz.\n50 Hz Band Stop Filter After the filtering, the frequency domain components are examined again. The noise component at 50 Hz is removed from the signal.\nFrequency Domain Result The time-domain result of the filter can be examined in the next figure. As you can see from this figure, the time domain components of the ECG is cleaner.\nTime Domain Result The next filter is designed to remove high-frequency noise from the signal. For this purpose, a 0-200 Hz low pass filter is designed.\n0 - 200 Hz Low Pass Filter Time Domain Result Finally, A simple moving average filter is applied to the signal. The next figure is the final result of our ECG project. After the filtering operations, most of the ECG components are cleaner and now it is easier to extract ECG components from the signal.\n100 Point Simple Moving Average Filtered Signal Test it yourself Click here to download the code and the ECG signal example\n","permalink":"https://mozanunal.com/2019/11/ecg-signal/","summary":"\u003cp\u003eHello everyone, Today, I will show how can you filter out the noise from the raw\nECG signal. Let\u0026rsquo;s start!\u003c/p\u003e\n\u003ch3 id=\"what-is-ecg\"\u003eWhat is ECG?\u003c/h3\u003e\n\u003cp\u003eElectrocardiography (ECG) is the measurement of the bioelectrical activity\nduring the contraction and relaxation stages of the atria and ventricles of the\nheart, the stimulation of the heart and the conduction of the stimulus. ECG\nsignal has some specific waves which correspond to particular conditions.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ePart of the ECG Signal\u003c/strong\u003e \u003cimg loading=\"lazy\" src=\"/images/ekg15.jpg\"\u003e\u003c/p\u003e","title":"Digital Filtering of an ECG Signal"},{"content":"Img2sh Hello there,\nIn this post, I want to tell a brief story of how I have created a tool named img2sh. It is also my first python package which is published over PyPI. In this very post, I will try to answer questions like: How is it developed? What are the challenges? How should a package created and deployed over PyPI? Let\u0026rsquo;s continue!\nImg2sh is a tool to show images directly on the terminal. For colored images, 256 xterm color support is required. This script basically resizes the image with anti-aliasing and quantized its colors to xterm color pallette. Github repository of the project can be reached from here\nDemo Testing the package is super easy. Install using pip and run.\n1 2 pip install img2sh --user img2sh demo.jpeg Result:\nInteractive mode\n1 2 3 4 5 img2sh demo.jpeg -w 80 -i q: quit z: zoom+ x: zoom- c: reset arrow keys for navigation cmd: q For detailed usage arguments:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 $ python img2sh/cli.py --help usage: cli.py [-h] [-w WIDTH] [-i] Image Show images directly on terminal. positional arguments: Image the directory of the image which will be opened optional arguments: -h, --help show this help message and exit -w WIDTH, --width WIDTH image width on the terminal -i, --interactive open image in interactive mode Story As it can be understood from its name, img2sh is a python app to show images directly in the terminal. I think it could be helpful when connected over ssh to a server with no desktop environment. The images can be examined quickly on the terminal screen. While the tool was developed, the followings are the challenges I have encountered.\nImages In the digital world, images are made of pixels. Pixel is the smallest part of the image which can contain only one color. Color changes with the pixel intensity values. To keep it simple, I added a grayscale image to illustrate the pixel concept. It is a quite low resolution, grayscale image. Pixel values are shown in the following image. Pixel intensity values are changing with how far the pixel value close to black or white.\nColored images basically work with the same concept. The difference is colored images are usually indicated with 3 different pixel values which are red, blue and green. By this method, the proportion of these color intensity is changed to show different colors on screen.\nColors in terminal How the coloring mechanism works in the terminal should be figured out to implement this app. I understood clearly how colors are handling in an image using the following link. After that, I have found colored python module which provides support for colored terminal output from python apps. I implement the colors using this library.\nhttp://jafrog.com/2013/11/23/colors-in-terminal.html\nParsing command-line arguments How should the command line arguments be parsed? Actually it is quite easy with python. Let\u0026rsquo;s examine the next code block:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import argparse parser = argparse.ArgumentParser( description=\u0026#39;Show images directly on terminal.\u0026#39;) parser.add_argument(\u0026#34;Image\u0026#34;, help=\u0026#34;the directory of the image which will be opened\u0026#34;) parser.add_argument( \u0026#34;-w\u0026#34;, \u0026#34;--width\u0026#34;, help=\u0026#34;image width on the terminal\u0026#34;, type=int ) parser.add_argument( \u0026#34;-i\u0026#34;, \u0026#34;--interactive\u0026#34;, default=False, action=\u0026#39;store_true\u0026#39;, help=\u0026#34;open image in interactive mode\u0026#34;, ) args = parser.parse_args() After the initialization, arguments can be used with commands like args.width. The arguments can be configured as mandatory or optional and the type of argument also be specified. This package is a pretty useful and standard package that is widely used most of the python projects.\nImage formats For further improvement in the project, it should be solved how different image formats can handle. Fortunately, Pillow package can handle various kinds of image formats such as jpeg, png, tiff. This packet can provide pixel values for different image types using the same get_pixel method interface. However, the problem is the dimension of the color values are representing. At standard jpeg a pixel value is represented with 24 bits which are 3 bytes. Each byte value represents a different color channels Red, Blue, and Green. Png differs from the alpha channel. At PNG images, colors are created with 4 bytes. Red, Blue, Green, and Alpha. Alpha is the transparency channel of the image. So the dimension of the pixel is different. But this problem is easily solved in findNearestColor function. In these functions, the dimension of the pixel is handled.\nSetup.py In this section, I will try to answer the question that how to create a setup.py file which supports also entry point and can be executed without python shell. Setup.py file is used to define the python package metadata and its installation instructions.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 from setuptools import setup, find_packages with open(\u0026#39;requirements.txt\u0026#39;) as f: requirements = f.read().splitlines() setup( name=\u0026#39;img2sh\u0026#39;, version=__import__(\u0026#39;img2sh\u0026#39;).__version__, install_requires=requirements, description=( \u0026#39;Show images directly on terminal using Xterm colors.\u0026#39; ), long_description=open(\u0026#39;README.md\u0026#39;).read(), long_description_content_type=\u0026#39;text/markdown\u0026#39;, author=\u0026#34;Mehmet Ozan Unal\u0026#34;, author_email=\u0026#39;mehmetozanunal@gmail.com\u0026#39;, maintainer=\u0026#34;Mehmet Ozan Unal\u0026#34;, maintainer_email=\u0026#39;mehmetozanunal@gmail.com\u0026#39;, license=\u0026#34;MIT\u0026#34;, packages=find_packages(), platforms=[\u0026#34;all\u0026#34;], url=\u0026#39;https://github.com/mozanunal/img2sh\u0026#39;, classifiers=[ \u0026#39;Development Status :: 4 - Beta\u0026#39;, \u0026#39;Operating System :: OS Independent\u0026#39;, \u0026#39;Intended Audience :: Developers\u0026#39;, \u0026#39;License :: OSI Approved :: BSD License\u0026#39;, \u0026#39;Programming Language :: Python\u0026#39;, \u0026#39;Programming Language :: Python :: Implementation\u0026#39;, \u0026#39;Programming Language :: Python :: 2\u0026#39;, \u0026#39;Programming Language :: Python :: 2.7\u0026#39;, \u0026#39;Programming Language :: Python :: 3\u0026#39;, \u0026#39;Programming Language :: Python :: 3.4\u0026#39;, \u0026#39;Programming Language :: Python :: 3.5\u0026#39;, \u0026#39;Programming Language :: Python :: 3.6\u0026#39;, \u0026#39;Programming Language :: Python :: 3.7\u0026#39;, \u0026#39;Topic :: Software Development :: Libraries\u0026#39; ], entry_points={ \u0026#39;console_scripts\u0026#39;: [\u0026#39;img2sh=img2sh.cli:main\u0026#39;], }, ) The entry points of the module can be specified with specifying entry_points property of the object. It is defined as console script and first, the name of the executable should be written. It should be mapped to the executable python function. In my case, it is img2sh:cli:main.\nThere are useful tricks in the code block also. For example, you do not have to write a whole long description of this file. It can be read from different files like README.md. It is the same for your requirements. It still can be read from requirements.txt but with one condition. These files should be specified in the MANIFEST.in file.\nMANIFEST.in\n1 2 3 include README.md include requirements.txt include LICENCE The following link great resource to create a setup.py file. I learned from here. You should check it out. https://python-packaging.readthedocs.io/en/latest/everything.html\nUploading python package As you may already know, python packages are usually distributed using PyPI servers. When we use the pip package manager in default, packages are downloaded from this server. In this project, I want that my package can be installed over PyPI. So I created a PyPI account and upload my package there.\nto Uploading the PyPI package actually quite simple. The following commands are required to create a package from a module and to upload it to PyPI servers.\n1 2 python setup.py sdist bdist_wheel twine upload --repository-url https://upload.pypi.org/legacy/ dist/* Optimizing performance How can be the performance of the tool optimized? In the first prototype, the code is written with simple logic. This causes too much processing time because of the for loops inside it. The following code part is written to find the nearest color inside a palette. The function loops in pallette and tries to find the smallest distance. In version 2, I implement it using numpy package. The operation executes in vectorial form and its execution time decreased exponentially. v1\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def findNearestColor(color, pallette): distances = [] if len(color) == 3: (colorr, colorg, colorb) = color elif len(color) == 4: (colorr, colorg, colorb, alpha) = color if alpha == 0: return None # pallette.index((255,255,255)) for c in pallette: (cr, cg, cb) = c distances.append( (colorr-cr)**2 + (colorg-cg)**2 + (colorb-cb)**2 ) return distances.index(min(distances)) v2\n1 2 3 4 5 6 7 8 9 10 11 12 def findNearestColor(color, pallette): distances = [] if len(color) == 3: (colorr, colorg, colorb) = color elif len(color) == 4: (colorr, colorg, colorb, alpha) = color if alpha == 0: return None # pallette.index((255,255,255)) c = (colorr, colorg, colorb) diff = pallette - c diffSum = np.sum( np.square(diff), axis=1) return np.argmin(diffSum) 1 2 3 4 5 6 7 8 9 # for v1 real 0m2,618s user 0m2,519s sys 0m0,080s # for v2 real 0m1,690s user 0m1,892s sys 0m0,417s Thank you for your interest. See you later\u0026hellip;\nAcknowledges This package is developed using:\nPillow colored ","permalink":"https://mozanunal.com/2019/11/img2sh/","summary":"\u003ch1 id=\"img2sh\"\u003eImg2sh\u003c/h1\u003e\n\u003cp\u003eHello there,\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eIn this post, I want to tell a brief story of how I have created a tool named\nimg2sh. It is also my first python package which is published over PyPI. In this\nvery post, I will try to answer questions like: How is it developed? What are\nthe challenges? How should a package created and deployed over PyPI? Let\u0026rsquo;s\ncontinue!\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eImg2sh is a tool to show images directly on the terminal. For colored images,\n256 xterm color support is required. This script basically resizes the image\nwith anti-aliasing and quantized its colors to xterm color pallette.\n\u003ca href=\"https://github.com/mozanunal/img2sh\"\u003eGithub repository of the project can be reached from here\u003c/a\u003e\u003c/p\u003e","title":"Show Images Directly on Terminal: img2sh"},{"content":"Run YOLO V3 on Colab for images/videos Hello there, Today, we will be discussing how we can use the Darknet project on Google Colab platform. For those who are not familiar with these terms:\nThe Darknet project is an open-source project written in C, which is a framework to develop deep neural networks. Yolo V3 is an object detection algorithm. It is one of the state of the art solution when accuracy/processing power needed metric is considered. Google Cola is a cloud-based data science workspace similar to the jupyter notebook. Each Collabrotary session is equipped with a virtual machine running 13 GB of ram and either a CPU, GPU, or TPU processor. In most case, all the required packages are already installed on these machines and you can quite easily start development using Google Collaboratory. It saves us from installing process and it provides us easy to accessible GPU\u0026rsquo;s which is also free under some constraints. Have a look Ted Talk by Joseph Redmon the developer of the darknet project. The talk is about Darknet and YOLO projects which titled as “How computers learn to recognize objects instantly” . Darknet project aims to create a new neural network framework which is completely focused on simplicity and performance. The thing which I like about is its clarity and performance. All the code is written in C, to define a deep learning network you should only create a config file which defines the layers. By this way, it does not lose its performance capabilities also it provides us easy to use interface for development with this library.\nSince I love both YOLO project and Google Colab, I decided to create a tutorial to use them together. I create a GitHub repository and a Collaboratory notebook for this purpose\nColab Notebook mozanunal/yoloOnGoogleColab Please check\nYOLO website Darknet website YOLOV3 Paper Install Go to the directory, clear and install everthing\nClone the project Change make file configurations and make OPENCV and GPU enable Install opencv library 1 2 3 import cv2, os import matplotlib.pyplot as plt %matplotlib inline 1 2 3 4 5 6 7 8 9 10 !ls !cd /content !rm -fr darknet !git clone https://github.com/AlexeyAB/darknet/ % cd darknet !sed -i \u0026#39;s/OPENCV=0/OPENCV=1/g\u0026#39; Makefile !sed -i \u0026#39;s/GPU=0/GPU=1/g\u0026#39; Makefile !sed -i \u0026#39;s/CUDNN=0/CUDNN=1/g\u0026#39; Makefile !apt update !apt-get install libopencv-dev Compile and Configure Compile YOLO Download YOLO weights 1 !make \u0026amp;\u0026gt; compile.log 1 !wget https://pjreddie.com/media/files/yolov3.weights --2019-08-11 23:58:44-- https://pjreddie.com/media/files/yolov3.weights Resolving pjreddie.com (pjreddie.com)... 128.208.4.108 Connecting to pjreddie.com (pjreddie.com)|128.208.4.108|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 248007048 (237M) [application/octet-stream] Saving to: ‘yolov3.weights’ yolov3.weights 100%[===================\u0026gt;] 236.52M 62.1MB/s in 4.1s 2019-08-11 23:58:48 (57.7 MB/s) - ‘yolov3.weights’ saved [248007048/248007048] Test An Image 1 2 3 4 5 6 7 8 9 10 11 12 def predictImage(imageDir): os.system(\u0026#34;cd /content/darknet \u0026amp;\u0026amp; ./darknet detect cfg/yolov3.cfg yolov3.weights {}\u0026#34;.format(imageDir)) image = cv2.imread(\u0026#34;/content/darknet/predictions.jpg\u0026#34;) height, width = image.shape[:2] resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC) fig = plt.gcf() fig.set_size_inches(18, 10) plt.axis(\u0026#34;off\u0026#34;) #plt.rcParams[\u0026#39;figure.figsize\u0026#39;] = [10, 5] plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB)) plt.show() 1 2 !wget https://github.com/mozanunal/yoloOnGoogleColab/raw/master/test/test.jpg !ls --2019-08-11 23:58:49-- https://github.com/mozanunal/yoloOnGoogleColab/raw/master/test/test.jpg Resolving github.com (github.com)... 192.30.253.113 Connecting to github.com (github.com)|192.30.253.113|:443... connected. HTTP request sent, awaiting response... 302 Found Location: https://raw.githubusercontent.com/mozanunal/yoloOnGoogleColab/master/test/test.jpg [following] --2019-08-11 23:58:50-- https://raw.githubusercontent.com/mozanunal/yoloOnGoogleColab/master/test/test.jpg Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ... Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 68535 (67K) [image/jpeg] Saving to: ‘test.jpg’ test.jpg 100%[===================\u0026gt;] 66.93K --.-KB/s in 0.05s 2019-08-11 23:58:50 (1.32 MB/s) - ‘test.jpg’ saved [68535/68535] 3rdparty CMakeLists.txt\timage_yolov3.sh\tresults appveyor.yml compile.log\tinclude\tscripts backup\tdarknet\tjson_mjpeg_streams.sh src build\tDarknetConfig.cmake.in LICENSE\ttest.jpg build.ps1 darknet.py\tMakefile\tvideo_v2.sh build.sh darknet_video.py\tnet_cam_v3.sh\tvideo_yolov3.sh cfg\tdata\tobj\tyolov3.weights cmake\timage_yolov2.sh\tREADME.md 1 predictImage(\u0026#34;test.jpg\u0026#34;) Test with Video 1 2 3 4 def predictVideo(videoDir): os.system(\u0026#34;\u0026#34;\u0026#34; cd /content/darknet \u0026amp;\u0026amp; ./darknet detector demo cfg/coco.data cfg/yolov3.cfg yolov3.weights \\ -dont_show {} -i 0 -out_filename res.avi \u0026#34;\u0026#34;\u0026#34;.format(videoDir)) 1 2 !wget https://github.com/mozanunal/yoloOnGoogleColab/raw/master/test/test.avi !ls --2019-08-11 23:59:01-- https://github.com/mozanunal/yoloOnGoogleColab/raw/master/test/test.avi Resolving github.com (github.com)... 192.30.253.113 Connecting to github.com (github.com)|192.30.253.113|:443... connected. HTTP request sent, awaiting response... 302 Found Location: https://raw.githubusercontent.com/mozanunal/yoloOnGoogleColab/master/test/test.avi [following] --2019-08-11 23:59:02-- https://raw.githubusercontent.com/mozanunal/yoloOnGoogleColab/master/test/test.avi Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ... Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 15897530 (15M) [application/octet-stream] Saving to: ‘test.avi’ test.avi 100%[===================\u0026gt;] 15.16M 50.0MB/s in 0.3s 2019-08-11 23:59:02 (50.0 MB/s) - ‘test.avi’ saved [15897530/15897530] 3rdparty\tcompile.log\tjson_mjpeg_streams.sh src appveyor.yml\tdarknet\tLICENSE\ttest.avi backup\tDarknetConfig.cmake.in\tMakefile\ttest.jpg build\tdarknet.py\tnet_cam_v3.sh\tvideo_v2.sh build.ps1\tdarknet_video.py\tobj\tvideo_yolov3.sh build.sh\tdata\tpredictions.jpg yolov3.weights cfg\timage_yolov2.sh\tREADME.md cmake\timage_yolov3.sh\tresults CMakeLists.txt\tinclude\tscripts 1 predictVideo(\u0026#34;test.avi\u0026#34;) 1 !du -h res.avi 93M\tres.avi 1 2 3 from google.colab import files files.download(\u0026#39;/content/darknet/res.avi\u0026#39;) See you later!\n","permalink":"https://mozanunal.com/2019/08/yolocolabdemo/","summary":"\u003ch1 id=\"run-yolo-v3-on-colab-for-imagesvideos\"\u003eRun YOLO V3 on Colab for images/videos\u003c/h1\u003e\n\u003cp\u003eHello there, Today, we will be discussing how we can use the Darknet project on\nGoogle Colab platform. For those who are not familiar with these terms:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"YOLO in action!\" loading=\"lazy\" src=\"/images/yoloroad.gif\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe Darknet project is an open-source project written in C, which is a\nframework to develop deep neural networks.\u003c/li\u003e\n\u003cli\u003eYolo V3 is an object detection algorithm. It is one of the state of the art\nsolution when \u003cstrong\u003eaccuracy/processing power needed\u003c/strong\u003e metric is considered.\u003c/li\u003e\n\u003cli\u003eGoogle Cola is a cloud-based data science workspace similar to the jupyter\nnotebook. Each Collabrotary session is equipped with a virtual machine running\n13 GB of ram and either a CPU, GPU, or TPU processor. In most case, all the\nrequired packages are already installed on these machines and you can quite\neasily start development using Google Collaboratory. It saves us from\ninstalling process and it provides us \u003cstrong\u003eeasy to accessible GPU\u0026rsquo;s\u003c/strong\u003e which is\nalso \u003cstrong\u003efree\u003c/strong\u003e under some constraints.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHave a look Ted Talk by Joseph Redmon the developer of the darknet project. The\ntalk is about Darknet and YOLO projects which titled as “How computers learn to\nrecognize objects instantly” . Darknet project aims to create a new neural\nnetwork framework which is completely focused on simplicity and performance. The\nthing which I like about is its clarity and performance. All the code is written\nin C, to define a deep learning network you should only create a config file\nwhich defines the layers. By this way, it does not lose its performance\ncapabilities also it provides us easy to use interface for development with this\nlibrary.\u003c/p\u003e","title":"Yolo on Google Colab"},{"content":"Manyetik Rezonans Görüntüleme 1.Giriş Normalde vücudumuz RF enerjisine duyarsızdır. Önce veri kaynağımız olan protonların RF enerjisi ile uyarılır hale getirilmesi gerekir. Bunun için hasta çok güçlü bir manyetik alan içerisine yerleştirilir. Bu manyetik etkiyle protonlar manyetik alana uygun şekilde dizilir ve uyarılmaya hazır hale gelirler. Kesit alınacak bölgeye RF enerjisi gönderilir. Protonlar bu enerjiyi alır ve enerjinin miktarına göre konumlarından saparlar. RF enerjisi kesilir. Protonlar eski konumlarına dönerler. Bu dönüş sürecinde aldıkları enerjiyi bir sinyal şeklinde yayarlar. Bu sinyal kayıt edilerek seçilen alanın Hidrojen yoğunluğuyla alakalı bilgi edinilmiş olur.\nTarihi Manyetik Rezonans görüntüleme klasik görüntüleme yöntemleri arasında en son icat edilendir. Eş zamanlı olarak 2 fizikçi tarafından 1947 yılında keşfedilmiştir( Felix Bloch - Edward Mills Purcell). İlk resim 1973 yılında Paul Lauterbur tarafından yapılmıştır. İlk klinik görüntülemeler 1977 yılında yapılmıştır. 2010 yılı itibariyle dünyada toplam 4000 MR Tarayıcı kullanılmaktadır [1].\nŞekil 1: İlk MR makinesi prototipleri\nŞekil 2: İlk Tüm vücut MR prototibi dizaynı\n2. Atomik Partiküller ve Magnetizma Radyo Frekans:\nOsilasyon frekansı 3kHz- 300GHz olan elektromanyetik dalgalara radyo frekans adı verilir.\nManyetik Alan:\nHidrojen atomu, çekirdeğinin tek protondan ibaret olması nedeniyle güçlü manyetik alana sahiptir. İnsan vücudunda bol miktarda bulunan bu çekirdek sinyal kaynağı olarak Idealdir.\nSpin :\nAtomik ve subatomik partiküllerin açısal momentumu.\nMRG Hidrojen atomunun manyetik özelliklerini kullanarak çalışır. Hidrojen atomunda bulunan proton normal şartlarda rastgele spinde döner. Fakat yüksek manyetik alan altında bütün Hidrojen atomlarının spinleri aynı yöne getirilir.\nDevinim (Presesyon), manyetik alan altında sabit manyetik alan altında açısal momentuma sahip anatomik parçacıkların yaptığı harekete denir. Bu yapılan hareketin frekansı manyetik alana ve taneciğin gyromagnetic oranına bağlıdır.\nŞekil 3: Devinim hareketinin gösterimi\nŞekil 4: Farklı elementler için gyromagnetic oranlar\nŞekil 5: Negatif gyrometrik sabiti olan parçacıkların spin yönü ile manyetik moment yönü birbirine zıttır. [2]\nProtonların presesyonlarının frekansı, manyetik alanın gücü ile doğru orantılıdır. Presesyon, manyetik rezonans olayının temelidir. Protonları etkileyebilmek için önce onları manyetik alan içerisine koyarak presesyon yaptırmak gerekir. Ancak bu durumdaki protonlar dışarıdan gönderilecek presesyon frekansındaki bir radyo dalgasıyla (RF) rezonansa girebilirler [3]. Bu rezonans frekansına Larmor frekansı denir ve gyrometric oran ile manyatik alanın çarpımıyla hesaplanır.\nŞekil 6: Farklı elemenletlerin MR görüntülemede oluşturdukları duyarlılık oranları [4]\nŞekil 7: Larmor frekenası formulü\nRezonans durumdaki Hidrojenler uyarıldıktan sonra geri eski durumlarına dönerlerken bir manyetik alanlarındaki değişimden dolayı bir sinyal yayarlar. Bu duruma relaksasyon denir. Bu uyarılma ve devamındaki zayıflarma esnasında sırasıyla aşağıdaki olaylar olur [2].\nDevinim durumundaki hidrojen atomları toplam manyeyik alan B0 manyetik alanı yönünde olacak şekilde hizalanmışlardır. Toplam net manyetik alan longitutunal (Z) düzlemde yukarı doğrudur. Transverse (X-Y) düzlemde ise toplam net manyetik alan sıfırdır. Sistem B0 manyetik alanın dik olacak bir B1 manyetik alanına sahip olan RF palslar ile uyarılır. Uyarılan sistemde net manyetik alan longitutunal düzlem sıfır olmuştur. Bu arada hidrojen atomları infaz durumuna geçer ve Z ekseni etrafında aynı fazda dönmeye başlarlar. Bu da transverse ekseninde sürekli dönen bir net manyetizasyon oluşturur. Uyarmayı yapan B1 manyetik alanı kaldırılır. Sistem eski haline dönmeye başlar. Bu olaya Free Induction Decay adı verilir. Sistemin relaksasyonu sırasında longitutional manyetik alanın eski halin gönmesine T1 relaksasyonu, transverse düzlemdeki dönmekte olan net manyetizasyonun tekrar sıfır olmasına ise T2 relaksasyonu denir. MR görüntüleme de bu iki relaksasyonun süreleri arasında yorumlar yaparak dokular hakkında bilgi edinilmeye çalışılır.\nŞekil 8: Relaksasyon sırasında toplam manyatik alanın zamana göre değişimi, Free Inductıon Decay\n3. Faraday Indüksiyon Akımı Sinyal Kaydı Faraday kanununa göre bir devrede indüklenen emk, devreden geçen manyetik akının zamana göre türevi ile doğru orantılıdır. Bu ifade şöyle yazılabilir [5]: ε: İndüklenen emk (Volt) Φ: Manyetik akı (Weber) t: Zaman (saniye) N sarımlı bir bobinde oluşan emk\nTelin Doğrusal Hareketi B manyetik alanına dik yönde v hızıyla hareket eden, l uzunluğundaki telin uçları arasında indüklenen emk Telin Dairesel Hareketi B manyetik alanına dik yönde w açısal hızıyla hareket eden, l uzunluğundaki telin uçları arasında indüklenen emk Manyetik rezonans görüntülemede faraday yasasından yola çıkararak çeşitli dizaynlar yapılmaktadır. Gradyan magnetlerden manyetik alan elektrik ile değişken olarak indüklenmesi ve vücuttan yapılan radyo dalgaları ışımalarınının rf sargılar ile alınması da bu prensibe dayanarak tasarlanır.\n4. MRG Enstrümanyasyon Şekil 9:MR Enstrümantasyonu genel bakış [6]\nSistem temel olarak aşağıdaki kompenentlerden oluşur.\nBirincil Magnetler: Birincil magnetler güçlü manyetik alanı üretmekten sorumludur. Statik güçte bir manyetik alan üretirler. Seviyeleri 1 Tesladan 3 Teslaya kadar değişebilmektedir. Bu kadar güçlü manyetik alana ulaşabilmek için genelde süper iletken kullanılır. Sürekli açık durumda bırakılırlar sadece bakım olacağı zaman bu magnetler manyetik alan üretmeyi bıraktırılır. 2000lerin başından bu yana 1.5 Teslalık magnetlerin yerini 3 Teslalık magnetler aldı [6].\nŞekil 10: Birincil magnetin oluşturduğu manyetik alanın formulü\nYukarıdaki eşitlikte görüldüğü gibi elde edilen magnetik güç akımın karesi ve direncin çarpımı ile orantılıdır. Isı kaybını önlemek için tellerin dirençleri mümkün olduğunca düşük tutulur. Bu süperiletken kullanmayı zorunlu hale getiren etkendir. Bilinen bazı materyaller çok düşük sıcaklıklarda neredeyse 0 dirence kadar düşerler. MRG\u0026rsquo;de bu teller bir kaç yüz amperi taşıyabilir durumda olmalıdırlar. Niobium ve aluminyom alaşımı bir madde ile bu sağlanabilir. Manyetik alanın homojenliği bu magnet için çok önemlidir. MR makinlerine yıllık yapılan bakımda süperiletkenliği sağlamak için kullanılan soğuk gaz yıllık olarak yenilenir. Magnetlerin dışına yerleştirilen magnetik alan önleyiciler ile bu manyetik alanın dışarıya etkisi sıfırlanmaya çalışılır. Bu kalkan olarak çelik karbon tabanlı pasif zayıflatıcılar ya da tes yönde manyetik alan üreten aktif zayıflatıcılar kullanılır.\nŞekil 11: MR makinesinin 2D kesitinde birincil magnetlerin yeri [1]\nGradyan Magnetler:\nÜç düzlemde yerleştirilmiş bu bobinler sayesinde hastanın pozisyonu değiştirilmeden her üç düzlemde de kesit alınabilir. MR sırasında çıkan yüksek sesten bu bobinler sorumludur. Z ekseninde kullanılan sarglarda 2 ayrı sargı manyetik alanı z eksenin lineer olarak değiştirilebilecek şekilde yerleştirilmiştir. X ve Y ekseninde ise (saddle coin) belirtilen eksenlere dik yönde sarım yapılacak şekide sarımlar sisteme eklenmiştir.\nŞekil 12: X,Y ve Z ekseninde gradyan magnetler\nManyetik alan gradienti manyetik alan değişiminin uzaklık değişimine oranı olarak tanımlanır.\nŞekil 13: Gradyanın Formulü [7]\nGradyan Sargılar güçlü PWM kuvvetlendiriciler ile sürülürler. Anlık olarak 2500 V ve 1000 A gibi değeler görebilirler. Böyle durumlarda iç sıcaklıkları 55 - 60 dereceye kadar ulaşabilir. Bu nedenle gradyan sargıları soğutabilmek için MR cihazlarında gerekli üniteler bulunur.\nŞekil 14: Gradyan sargılar soğutma sistemleri [7]\nRadyo Frekans Bobinleri:\nİki temel görevi vardır. Birincisi manyetik alan altındaki Hidrojen atomlarını uyararak spinlerini değiştirmlerini sağlamak ikinci olarak RF salınımı yaptığında salınan RF enerjisini toplamak için anten görevi görerek görüntünün oluşturulmasını sağlamak. Pulse sekansı oluşturarak belli bir bölgenin aktifleştirilip ölçülmesini sağlar. Genelde bir dizi radya frekans bobinleri bir arada kullanılır. Bu sayede pozisyonun alıcıya etkisindeki farklılıklar kompanze edilmeye çalışılır.\nŞekil 15: RF sargı giriş devresi örneği\nÇevre gürültülerden etkilenmemesi için ve o frekans kanalına kilitlemek için rf sargısının çıkışında aynı frekansta referans clock üretilmelidir. Bunu yapabilmek için kapasitans ve endüktans tabanlı devreler kullanılabilir. Fres frekansında sinyal üretmek için gerekli kapasite ve endüktans değeleri aşağıdaki formüle göre hesaplanabilir.\nAşağıda ise örnek bir devre şeması eklenmiştir. Verimli bir RF sargı devresi için bahsedilen frekanstaki hassasiyet yüksek ve devrenen giriş çıkış verimleri yüksek olmalıdır. Bunu sağlamak için empadans uydurma devreleri gereklidir. Bu devreler sayesinde alınan ya da yollanan sinyal koaksiyel kablonun girişinde 50 Ohm direncine getirilmelidir. Devredeki sanal komponentlerin birbirini yok etmesi de sağlanarak bu aşamada yaşanan hassasiyet kaybı en aza indirilir.\nŞekil 16: RF sargıların elektromanteik koruyucularla kaplanması(shielding)\nRF sargılara gürültü oluşturabilecek bir diğer etken de sistem içerisindeki komponentlerdir. MRG makineleri içerisinde yüksek akımların geçtiği bir çok komponent içerir bu manyetik alan ve rf tarafında kirliğe sebep olur bu gürültülerin azaltıması için sistemdeki farklı komponentler sistemden elektriksel olarak yalıtılmış durumdadır. Simetrik bir dizayn izlenerek bu gürültülerin mümkün olduğunca birbirini yok etkesi de yardımcı olabiliecek yöntemlerdendir [1].\nRf sargıların hem alıcı hem verici olarak kullanılabilmesi için aşağıdaki gibi bir devreye dönüştürümelidir. DC sinya uygulanarak diyotlar aracılığıyla sargıların çalışma yönü seçilir. Diyot olarak genelde PIN diyotlar kullanılır [7].\nŞekil 17: Örnek pals sekansı. Bilgisayar sistemi hepsini senkron olarak çalışmasından sorumludur. [8]\nBilgisayar Sistemi:\nAlınan sinyal yukarıdaki gibi demodule edllir. Demodolasyon sırasında alınan sinyal 90 derece fazı kaydırılmış hali ile çarpılır çıkan sinyalde iki tane belirgin komponent olacaktır. Birincisi sinyalin base banda indilimiş hali ikinci olarak da f0 sinyalinin tam iki katındaki komponent. Sadece basebandaki sinyal istendiği için diğer sinyal alçak geçiren filtre ile gücü azaltılır. Devrenin devamında analog dijital çeviricilerle ile sinyal dijital ortama aktarılır. Genelde örnekleme frekansı 80 MHz örnekleme çözünürlüğü ise 14 bittir [8].\nAlınan sinyallerin toplanıp çeşitli veri işleme ve 3 boyutlu tahmin yöntemleriyle insanın anlayabileceği görüntüler haline çevirildiği yerdir.\nKaynakça [1] N. \u0026amp; W. A. Smith, Introduction to Medical Imaging: Physics, Engineering and Clinical Applications, Cambridge: Cambridge University Press, 2010. [2] P. E. P. R. Bloembergen N, «Relaxation effects in nuclear magnetic resonance absorption,» Phys Rev 1948, pp. 73:679-712, 1948. [3] O. Konez, Manyetik Rezonans Görüntüleme, İstanbul: Nobel Tıp Kitabevleri, 1995. [4] D. Moratal, «Medical Imaging: Principles, Detectors, and Electronics [Book Reviews],» %1 içinde Pulse, IEEE, 2011, p. 227. [5] M. E. Davison, «A Simple Proof that the Lorentz Force, Law Implied Faradays Law of Induction, when B is Time Independent, cilt 41, no. 713, p. American Journal of Physics, 1973. [6] P. Joseph P. Hornak, The Basics of MRI, Cornell, 1996-2018. [7] M. F. Allen D. Elster, «the Questions and Answers in MRI,» [Çevrimiçi]. Available: http://mriquestions.com/index.html. [Erişildi: 5 1 2019]. | [8] Y. Wang, «MRI Instrumentation and Pulse Sequences,» %1 içinde Medical Imaging I, New York. [9] K. Inievski, Medical İmaging Priniples,Detetors and Electronics, Canada: John Wiley Sons, Inc., Hoboken, New Jersey, 2009. ","permalink":"https://mozanunal.com/2019/04/mrg/","summary":"\u003ch1 id=\"manyetik-rezonans-görüntüleme\"\u003eManyetik Rezonans Görüntüleme\u003c/h1\u003e\n\u003ch2 id=\"1giriş\"\u003e1.Giriş\u003c/h2\u003e\n\u003cp\u003eNormalde vücudumuz RF enerjisine duyarsızdır. Önce veri kaynağımız olan\nprotonların RF enerjisi ile uyarılır hale getirilmesi gerekir. Bunun için hasta\nçok güçlü bir manyetik alan içerisine yerleştirilir. Bu manyetik etkiyle\nprotonlar manyetik alana uygun şekilde dizilir ve uyarılmaya hazır hale\ngelirler. Kesit alınacak bölgeye RF enerjisi gönderilir. Protonlar bu enerjiyi\nalır ve enerjinin miktarına göre konumlarından saparlar. RF enerjisi kesilir.\nProtonlar eski konumlarına dönerler. Bu dönüş sürecinde aldıkları enerjiyi bir\nsinyal şeklinde yayarlar. Bu sinyal kayıt edilerek seçilen alanın Hidrojen\nyoğunluğuyla alakalı bilgi edinilmiş olur.\u003c/p\u003e","title":"[TR] Manyetik Rezonans Görüntüleme"},{"content":"Hello, Steam Link is software which provides support to Steam to stream screen view of the games to devices which is on same local area network. In this setup, there are 2 devices. First one is the device to run the Steam and the games which act as a server. The second one is the one which runs Steam Link and acts as a client to this server. By using this technology you can play games directly on a device which is connected to the same router. The connection is also 2 way. Thus, control devices such as keyboard, mouse and game controllers can be connected directly to the client device.\nOn 3rd of December, Steam announced that the Steam Link can work on Raspberry Pi now. After I saw that, I decided to give it a try. I have tried it with my favorite game, Dota 2. Dota 2 can be played on a Raspberry Pi using Steam Link. It basically uses your computer as a game server. Actually, the PC is run the Dota 2 however it casts its screen view to another computer, which in this case is a Raspberry Pi. You can install it to your Raspberry Pi with only 2 shell commands.\nIn this post, installing and running the Steam Link will be discussed. Steam Link is a software which is developed to play high processing power intensive games on low processing power devices. Actually, you should already have enough system requirements for the game and this computer also should be the same local area network.\nInstallation The following link is from Steam Community website. They announced that Steam Link is officially available for Raspberry Pi. The installation process is quite easy but the basic Linux shell knowledge still is a requirement.\nhttps://steamcommunity.com/app/353380/discussions/0/1743353164093954254/\nThe first step, using curl download the required Debian installation package.\n1 2 pi@rpi-:~ $ curl -#Of http://media.steampowered.com/steamlink/rpi/steamlink_1.0.7_armhf.deb ######################################################################## 100.0% After downloading the package, process continues with following one line script. It is installing Steam Link Package to your Raspberry Pi.\n1 2 3 4 5 6 7 8 9 10 11 pi@rpi-:~ $ sudo dpkg -i steamlink_1.0.7_armhf.deb Selecting previously unselected package steamlink. (Reading database ... 129787 files and directories currently installed.) Preparing to unpack steamlink_1.0.7_armhf.deb ... Unpacking steamlink (1.0.7) ... Setting up steamlink (1.0.7) ... Processing triggers for gnome-menus (3.13.3-9) ... Processing triggers for desktop-file-utils (0.23-1) ... Processing triggers for mime-support (3.60) ... Processing triggers for hicolor-icon-theme (0.15-1) ... Processing triggers for man-db (2.7.6.1-2) ... Game Play Demo Some configurations are also should be done to start playing through your Raspberry Pi. However, these steps are quite easy to follow and no prior shell knowledge is required. By the way, ping is around 6 ms with ethernet connection to your router. The ping is heavily depends on your router performance and connection quality. I could not get sufficient results with WiFi connection to Raspberry Pi. Therefore I connect it to external router in order to keep the connection latency as minimum as possible.\n","permalink":"https://mozanunal.com/2019/02/steam-link-on-rpi/","summary":"\u003cp\u003e\u003cstrong\u003eHello,\u003c/strong\u003e Steam Link is software which provides support to Steam to stream\nscreen view of the games to devices which is on same local area network. In this\nsetup, there are 2 devices. First one is the device to run the Steam and the\ngames which act as a server. The second one is the one which runs Steam Link and\nacts as a client to this server. By using this technology you can play games\ndirectly on a device which is connected to the same router. The connection is\nalso 2 way. Thus, control devices such as keyboard, mouse and game controllers\ncan be connected directly to the client device.\u003c/p\u003e","title":"Playing DOTA on Raspberry Pi using Steam Link"},{"content":"SimpleDSP SimpleDSP is a basic DSP library which is for Arduino and most of the microcontrollers which can be programmed in C/C++\nPerformance: Here is some examples for its performance. Actually it is not optimized for performance. Its main focuses are portability and education.\nArduino Nano FFT 16 points: 2 ms FFT 32 points: 6 ms FFT 64 points: 16 ms fir filter 10 coefficients: 190 us fir filter 23 coefficients: 453 us fir filter 46 coefficients: 900 us 10 coefficients FIR filter can be run at 5khz max frequency on an Arduino Nano.\nArduino Due FFT 64 points: 2 ms FFT 128 points: 6 ms FFT 256 points: 10 ms Fast Fourier Transform (FFT) and Inverse Fast Fourier Transform (IFFT) detailed info\nArduino Example FFT and IFFT functions require 2 arguments. data data length Do not forget to add #include \u0026quot;simpleDSP_FFT.h\u0026quot;\nFull example for FFT and IFFT please refer here\nFFT spectrum example\n1 2 3 4 5 FFT(data,DATA_LEN); IFFT(data,DATA_LEN); calcTime = millis()-startTime; Serial.print(\u0026#34;Total calculation time: \u0026#34;); Serial.println(calcTime); FIR Filter Theory detailed info\nArduino Example FIR is filter structure which keep delays and coefficients of filter. There are 2 public functions. firInit initializes the structure according to parameters and makes required memory allocations. Coefficients and its length are given as parameter to this function Do not forget to add #include \u0026quot;simpleDSP_fir.h\u0026quot;\n1 2 void firInit(FIR *fir, int coefBLen, float *coefsB); float firFilt(FIR *fir, int input); FIR Full example\n1 2 3 4 5 6 7 8 9 10 11 12 Serial.begin(9600); firInit(\u0026amp;fir1, 46, coef); Serial.println(\u0026#34;FIR filter initiliaze finished\u0026#34;); float a; startTime = micros(); for (int i = 0; i \u0026lt; 255; i++) { a = firFilt(\u0026amp;fir1, input[i]); } calcTime = micros() - startTime; Serial.print(\u0026#34;Total calculation time: \u0026#34;); Serial.println(calcTime); IIR Filter Theory detailed info\nArduino Example IIR is filter structure which keep delays and coefficient of filter. There are 2 functions to implement IIR filter using SimpleDSP library. initIIR function is the constructor function for the filter. Filter coefficients for a and b should be given as arguments to this function. After init, filtIIR must be used as filtering function. This function requires 2 arguments. Object instance and data. It returns the filtered output.\n1 2 void iirInit(IIR *iir, int coefBLen, float *coefsB, int coefALen, float *coefsA); float iirFilt(IIR *iir, int input); Do not forget to add #include \u0026quot;simpleDSP_iir.h\u0026quot; to your code.\nIIR Full example\n1 2 3 4 5 6 7 8 9 10 11 12 Serial.begin(9600); iirInit(\u0026amp;iir1, 4, coefB, 4, coefA); Serial.println(\u0026#34;IIR filter initiliaze finished\u0026#34;); float a; startTime = micros(); for (int i = 0; i \u0026lt; 255; i++) { a = iirFilt(\u0026amp;iir1, input[i]); } calcTime = micros() - startTime; Serial.print(\u0026#34;Total calculation time: \u0026#34;); Serial.println(calcTime); Octave Test Code This code create sample data and plot the signal and its FFT. The octave code only needed for testing of function. Create sample signal which is at 10 kHz sample rate and it is the combination of 3.2 kHz and 800 Hz sine waves.\n1 2 3 4 5 6 7 8 N=255; f1=800; f2=3200; fo=10000; for i=1:1:N x(i)=1000*cos(2*pi*f1*i/fo)+1000*cos(2*pi*f2*i/fo); printf(\u0026#34;%d\\n\u0026#34;,x(i)); end Calculate and plot x and FFT of x. For fft x axis values are calculated using kor=(1:N)*fo/N;\n1 2 3 4 5 plot(x); X=abs(FFT(x)); figure; kor=(1:N)*fo/N; plot(kor,X); Output from octave\nGraph of Raw Signal\nGraph of FFT Signal\nyou can use octave from here\nFilter Design Using Octave output of fir functions can be used as filter coefficients\nResource for FIR\nExamples:\n1 2 3 freqz (fir1 (40, 0.3)); freqz (fir1 (15, [0.2, 0.5], \u0026#34;stop\u0026#34;)); # note the zero-crossing at 0.1 freqz (fir1 (15, [0.2, 0.5], \u0026#34;stop\u0026#34;, \u0026#34;noscale\u0026#34;)); 1 2 3 4 figure b= fir1 (20, 0.3, \u0026#34;low\u0026#34;); y = filter(b,1,x); plot(y) filter frequency response\nResource for IIR\n1 2 3 4 figure [b, a] = butter(3, 0.3, \u0026#34;low\u0026#34;); y = filter(b,a,x); plot(y) 1 2 3 4 5 6 7 8 octave:\u0026gt; b b = 0.049533 0.1486 0.1486 0.049533 octave:\u0026gt; a a = 1.00000 -1.16192 0.69594 -0.13776 Outputs after filtering\nTime Domain Signal\nFFT of Output Signal\n","permalink":"https://mozanunal.com/2019/01/simpledsp-iir-feature/","summary":"\u003ch1 id=\"simpledsp\"\u003e\u003ca href=\"https://github.com/mozanunal/SimpleDSP\"\u003eSimpleDSP\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/mozanunal/SimpleDSP\"\u003eSimpleDSP\u003c/a\u003e is a basic DSP library which\nis for Arduino and most of the microcontrollers which can be programmed in C/C++\u003c/p\u003e\n\u003ch2 id=\"performance\"\u003ePerformance:\u003c/h2\u003e\n\u003cp\u003eHere is some examples for its performance. Actually it is not optimized for\nperformance. Its main focuses are portability and education.\u003c/p\u003e\n\u003ch3 id=\"arduino-nano\"\u003eArduino Nano\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eFFT 16 points: 2 ms\u003c/li\u003e\n\u003cli\u003eFFT 32 points: 6 ms\u003c/li\u003e\n\u003cli\u003eFFT 64 points: 16 ms\u003c/li\u003e\n\u003cli\u003efir filter 10 coefficients: 190 us\u003c/li\u003e\n\u003cli\u003efir filter 23 coefficients: 453 us\u003c/li\u003e\n\u003cli\u003efir filter 46 coefficients: 900 us\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e10 coefficients FIR filter can be run at 5khz max frequency on an Arduino Nano.\u003c/p\u003e","title":"SimpleDSP: IIR Filter Feature Added"},{"content":"Herkese merhabalar, Bugünkü yazımda dump1090 programını nasıl bir orange pi zero üzerinde çalıştırabiliriz ondan bahsedeceğim. Bildiğiniz gibi dump1090 sdr kullanarak uçakların adsb yayınlarını çözmeye yarayan bir kod parçası. Bu projeyi gerçekleştirdiğim mini pc olarak orange pi zero seçmemin sebebi ise maliyeti ve kompaklığı. 5-10 dolara satın alınabiliniyor ve boyutları gerçekten küçük.\nRtlsdr Sürücüsünün Kurulması Ben orange pi zeroyu armbian işletim sistemi ve mainline kernel ile kullanıyorum. Sistemde uname -a çalıştırdığımda aldığım çıktı aşağıdaki gibi:\n1 Linux orangepizero 3.4.113-sun8i #16 SMP PREEMPT Tue Jun 13 14:15:57 CEST 2017 armv7l armv7l armv7l GNU/Linux İlk olarak rtlsdr orange pi ile sorunsuz çalıştırmalıyız bunun için gerekli kütüphaneleri kuruyoruz.\n1 2 sudo apt install librtlsdr-dev sudo apt install rtl-sdr Sonra linux kernerlındaki generic dvb sürücülerini reaktifleştirmemiz gerekli. Aşağıdaki komut ile değişiklik yapacağımız dosyayı açıyoruz.\n1 nano /etc/modprobe.d/rtl-sdr-blacklist.conf Aşağıdaki satırları açtığımız dosyaya ekleyelim. Burada yapığımız şey aslında şu. Normalde bu cihazlar bilgisayardan tv izlemek için kullanılıyor. Bu driver da linux kernelında zaten var. Eklediğimiz satırlar driverı etkisiz hale getiriyor. Driver olarak cihazı, rtlsdr olarak kullanmak için yazılmış driverı aktif olarak kullanabilmemizi sağlıyor.\n1 2 3 4 5 6 blacklist dvb_usb blacklist dvb_core blacklist dvb_usb_rtl2832u blacklist dvb_usb_rtl28xxu blacklist e4000 blacklist rtl2832 Rtlsdr çalışıp çalışmadığını rtl_test komutu ile test edebiliriz.\nDump1090 kurulumu ve kullanım Dump1090 kurmak çok basit. Bir adet paket gerekli devamında git üzerinden çekip make ile derliyoruz.\n1 2 3 4 sudo apt install pkg-config git clone https://github.com/antirez/dump1090 cd dump1090 make Çalıştırmak için genelde aşağıdaki satırı kullanıyorum.\n1 ./dump1090 --net --interactive --aggressive Bu komut ile web arayüzünü aktifleştirmiş oluyoruz ve interaktif bir terminal çıktımız oluyor. \u0026ldquo;aggressive\u0026rdquo; ile de daha düşük isabet ile tespit etse de arayüzlerde çıktı vermesini istemiş oluyoruz. Orange pi ipsini bulmak için ifconfig komutu kullanılabilir. Web arayüzüne de üzerinden opizeroip:8080 üzerinden ulaşabiliriz. Rtlsdr ile gelen anteni $lambda/4$ uzunlukta keserek daha verimli sonuçlar elde edebilirsiniz. 1090 Mhz için anten boyu 69mm olmalıdır. Ben açık alanda yaklaşık 250 km uzaklıktan veri almayı başardım. Böyle küçük bir kurulum ile bu kadar büyük bir uzaklıktan veri alabilmek gerçekten oldukça keyifliydi. Tekrar görüşmek üzere\u0026hellip;\n","permalink":"https://mozanunal.com/2018/08/opizero-dump1090/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese merhabalar,\u003c/strong\u003e Bugünkü yazımda dump1090 programını nasıl bir orange pi\nzero üzerinde çalıştırabiliriz ondan bahsedeceğim. Bildiğiniz gibi dump1090 sdr\nkullanarak uçakların adsb yayınlarını çözmeye yarayan bir kod parçası. Bu\nprojeyi gerçekleştirdiğim mini pc olarak orange pi zero seçmemin sebebi ise\nmaliyeti ve kompaklığı. 5-10 dolara satın alınabiliniyor ve boyutları gerçekten\nküçük.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/1534768337583.png\"\u003e\u003c/p\u003e\n\u003ch2 id=\"rtlsdr-sürücüsünün-kurulması\"\u003eRtlsdr Sürücüsünün Kurulması\u003c/h2\u003e\n\u003cp\u003eBen orange pi zeroyu armbian işletim sistemi ve mainline kernel ile\nkullanıyorum. Sistemde uname -a çalıştırdığımda aldığım çıktı aşağıdaki gibi:\u003c/p\u003e","title":"[TR] Orange Pi Zero Üzerinde Dump1090 Çalıştırmak"},{"content":"Herkese Merhabalar,\nBenim gibi sıklıkla linuxla uğraşan bir insansanız işinize çok fazla yarıyabilecek bir araçtan bahsedeceğim. Bu Androidte çalışan terminal emülatörü Termux. Termux linux kullanmaya alışık olduğumuz araçları androidde de kullanabilmemizi sağlayan bir android app aslında. Direk play store üzerinden bu link üzerinden yükleyebilirsiniz. Termux aynı zamanda açık kaynaklı bir proje github hesabına buradan ulaşabilirsiniz. Burada android app ve bütün paketlerin kaynak kodu mevcut.\nÖzelliklerine gelecek olursak kendi paket yöneticilerini geliştirmişler. İsmi pkg bir sürü popüler paketi kurabilmeniz mümkün. Programa girdiğinizde direk bir bash terminal karşılıyor bizi. Burada standart bash komutlarının çoğu çalışıyor. Örneğin ls, pwd, cat, echo\u0026hellip;\n1 pkg list-all komutu ile kurulabilecek bütün paketleri görüyoruz. Ben de aklıma gelen bir kaç paketi yükleyip testler yaptım. Şu and en çok ssh için kullanıyorum fakat yüklediğim diğer araçlar ise şöyle:\n1 pkg list-installed Apt kullanır gibi direk paketleri kurabiliyorsunuz. Örneğin şu şekilde htop paketini yükledim.\nHtop çalışır durumdaki hali de aşağıdaki gibi. Sanki bir linux terminaliymiş gibi bütün özellikleri kullanılabiliniyor. Ayrıca telefonunuza python, nodejs, go gibi programlama dili araçlarını kurup sanki bir mini bilgisayardaymış gibi kolaylıkla programlama yapabilirsiniz. Git, svn gibi versiyon yönetimi araçları da çalışıyor. Hatta c/c++ için gerekli derleme ve debug araçları da sorunsuz çalışır durumda (gcc, make, cmake). Denemedim ama telefon üzerinde geliştirme yapmayı bile mümkün kılacak kadar geniş kapsamı. Telefonda bu kadar güzel bir terminal görmek çok hoşuma gitti.\nAyrıca arayüz olarak da dokunmatik ekran için özenle dizayn edilmiş. Klavyenin üzerinden çıkan yardımcı tuş takımı oldukça kullanışlı. Ctrl içeren tuş kombinasyonlarını kolayca yapabiliyorsunuz. Ya da olmazsa olmaz tab ile otomatik tamamlama özelliğini kolayca kullanabiliyorsunuz. Siz de Termux ilk defa görüyorsanız ilk kullanım yorumlarınızı, daha önceden kullanıyorsanız ne için kullandığınızı yorumlarda paylaşırsanız çok mutlu olurum. Özet olarak termux telefonunuza kurup mobil işlerimiz için kullanabileceğimiz güzel bir terminal emülatörü. Denemenizi tavsiye ederim.\n","permalink":"https://mozanunal.com/2018/07/termux/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBenim gibi sıklıkla linuxla uğraşan bir insansanız işinize çok fazla\nyarıyabilecek bir araçtan bahsedeceğim. Bu Androidte çalışan terminal emülatörü\n\u003cstrong\u003eTermux\u003c/strong\u003e. Termux linux kullanmaya alışık olduğumuz araçları androidde de\nkullanabilmemizi sağlayan bir android app aslında. Direk play store üzerinden\n\u003ca href=\"https://play.google.com/store/apps/details?id=com.termux\u0026amp;hl=en\"\u003ebu link\u003c/a\u003e\nüzerinden yükleyebilirsiniz. Termux aynı zamanda açık kaynaklı bir proje github\nhesabına \u003ca href=\"https://github.com/termux\"\u003eburadan\u003c/a\u003e ulaşabilirsiniz. Burada android\napp ve bütün paketlerin kaynak kodu mevcut.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"termux ssh bağlantısı\" loading=\"lazy\" src=\"/images/termux_ssh.jpg\"\u003e\u003c/p\u003e\n\u003cp\u003eÖzelliklerine gelecek olursak kendi paket yöneticilerini geliştirmişler. İsmi\npkg bir sürü popüler paketi kurabilmeniz mümkün. Programa girdiğinizde direk bir\nbash terminal karşılıyor bizi. Burada standart bash komutlarının çoğu çalışıyor.\nÖrneğin ls, pwd, cat, echo\u0026hellip;\u003c/p\u003e","title":"[TR] Android Terminal Emülatörü: Termux"},{"content":"Herkes Merhabalar, Bugün bir \u0026ldquo;hardware description language\u0026rdquo; olan verilog diline giriş yapmak istiyorum. Verilog sayısal dizaynda( ASIC ve FPGA ) kullanılan bir tanımlama dilidir. Verilog dilini Fpga programlamak için bir çok projede kullandım fakat ASIC dizayn konusunda bir tecrübem yok. Fpga programlarken öğrendiğim şeyleri farklı yazılarda paylaşmıştım. Bu yazı da o yazılardan biri diyebiliriz. Verilog ile alakalı daha ileri düzey şeylerden bahsedeceğim yazılar da gelecektir diye düşünüyorum.\nTemel Kullanımlar İlk olarak basit mantık fonksiyonlarının verilog modüllerinin oluşturulmasıyla başlamak istiyorum. Bu fonksiyonları oluşturmak için bir kaç farklı seçeneğimiz var. Ben kısaca hepsinin üzerinden geçmek istiyorum. Bu yöntemlerin hepsine aşina olmak şu açıdan önemlidir: Her projede farklı zorluklar karşımıza çıkabilir. Bu zorluklardan en çok ortaya çıkanlardan biri kaynak yetersizliğidir. Kaynak yetersizliği farklı açılardan ortaya çıkabilir.\nZamanlamanın yetersiz olması Fpgadeki mantık kapılarının yeterli olmaması Performansın yeterli olmaması Bu 3 farklı dar boğaza göre farklı imlemantasyon yöntemini tercih etmeniz gerekebilir. Aritmetik Operatör Kullanarak Aşağıdaki modül OR alan bir modül olarak tasarlanmıştır. Direk OR aritmetik oparatörü kullanarak aşağıdaki gibi oluşturulabilir. Burda dikkat çekmek istediğim ikinci şey bir modülün nasıl tanımlandığıdır. İlk olarak giriş ve çıkışlar tanımlanır. Bu modülde hepsi 1 bit olmak üzere 2 giriş 1 çıkış gereklidir. \u0026ldquo;assign\u0026rdquo; ile gerekli bağlantı yapılır. Hiç \u0026ldquo;clock\u0026rdquo; kullanılmadığı için kombinasyonel (combinational) bir modüldür.\n1 2 3 4 5 6 7 8 9 module OR( input I1, input I2, output O ); assign O = I1 | I2; endmodule LUT Kullanarak LUT, \u0026ldquo;look up table\u0026rdquo; teriminin kısaltmasıdır. FPGA bildiğiniz gibi verilog diliyle tasarladığımız ve zaman-kaynak sınırlamalarını aşmayan her türlü devrenin gerçeklenebildiği çip türüdür. Bu esnekliği uygulanabilir kılan FPGA yapısının en küçük birimlerindeki LUT\u0026rsquo;lardır. Yani nasıl yazarsak yazalım kodu en son LUT dönüştürülüp devre üzerine öyle aktarılır. Verilog diliyle direk olarak LUT tanımlayarak da istediğimiz mantık fonksiyonunu gerçekleyebiliriz. Aşağıda EXNOR fonksiyonu LUT kullanılarak gerçeklenmiştir.\n1 2 3 4 5 6 7 8 9 10 11 module EXNOR( input I1, input I2, output O ); LUT2 #(.INIT(4\u0026#39;b1001) ) LUT2_inst( .O(O), .I0(I1), .I1(I2) ); endmodule Always Kullanarak Always yapısı sadece belli durumlarda çalışan mantık devreleri yazmak için kullanıyoruz. Örneğin \u0026ldquo;if\u0026rdquo; için burada bir \u0026ldquo;always\u0026rdquo; yapısına ihtiyacımız oluyor.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 module NAND( input I1, input I2, output reg O ); always @( I1 or I2 ) begin if( I1==1 \u0026amp;\u0026amp; I2==1) begin O \u0026lt;= 1\u0026#39;b0; end else begin O \u0026lt;= 1\u0026#39;b1; end end endmodule module NOR( input I1, input I2, output reg O ); always @( I1 or I2 ) begin if( I1==0 \u0026amp;\u0026amp; I2==0) begin O \u0026lt;= 1\u0026#39;b1; end else begin O \u0026lt;= 1\u0026#39;b0; end end endmodule Case Kullanarak Case yapısı kullanarak aşağıdaki decoder kolayca gerçeklenebilir. Case kullanımı için de always yapısı gereklidir.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 module DECODER( input[3:0] IN, output reg [15:0] OUT ); always @(*) begin\tcase(IN) 4\u0026#39;b0000: OUT\u0026lt;=16\u0026#39;b0000000000000000; 4\u0026#39;b0001: OUT\u0026lt;=16\u0026#39;b0000000000000010; 4\u0026#39;b0010: OUT\u0026lt;=16\u0026#39;b0000000000000100; 4\u0026#39;b0011: OUT\u0026lt;=16\u0026#39;b0000000000001000; 4\u0026#39;b0100: OUT\u0026lt;=16\u0026#39;b0000000000010000; 4\u0026#39;b0101: OUT\u0026lt;=16\u0026#39;b0000000000100000; 4\u0026#39;b0110: OUT\u0026lt;=16\u0026#39;b0000000001000000; 4\u0026#39;b0111: OUT\u0026lt;=16\u0026#39;b0000000010000000; 4\u0026#39;b1000: OUT\u0026lt;=16\u0026#39;b0000000100000000; 4\u0026#39;b1001: OUT\u0026lt;=16\u0026#39;b0000001000000000; 4\u0026#39;b1010: OUT\u0026lt;=16\u0026#39;b0000010000000000; 4\u0026#39;b1011: OUT\u0026lt;=16\u0026#39;b0000100000000000; 4\u0026#39;b1100: OUT\u0026lt;=16\u0026#39;b0001000000000000; 4\u0026#39;b1101: OUT\u0026lt;=16\u0026#39;b0010000000000000; 4\u0026#39;b1110: OUT\u0026lt;=16\u0026#39;b0100000000000000; 4\u0026#39;b1111: OUT\u0026lt;=16\u0026#39;b1000000000000000; endcase end endmodule Modul Hiyerarşisi Önemli kullanımlardan biri de hiyerarşik modul yapısıdır. Modüller diğer modelleri alt modül olarak çağırabilir bu sayede işlevler birbirinden ayrıştırılır. Örneğin decoder oluşturulduğunda projenin kalanından ayrı olarak test edilir. Çalıştığından emin olunan bir alt parça sağlanmış olur. Diger modulleri aşadaki gibi bir yazım kurallarıyla alt modul olarak çağırabilirsiniz. Modülün giriş ve çıkışlarını üst modüldeki kablolara bağlanmanız gerekir.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 module topmodule( input [7:0]sw, input [3:0]btn, output [7:0]led, output [6:0]seg, output dp, output [3:0]an ); DEMUX demux1 ( .D(sw[0]), .S(btn[1:0]), .O(led[3:0]) ); assign an = 4\u0026#39;b1110; endmodule Aynı alt modülden farklı isimler vererek birden fazla oluşturabilirsiniz. Bu örnekte demux bir veya daha fazla kez oluşturulmuş başka alt modüller kullnarak yapılmıştır. Sonrasında da bu modül başka bir üst modülün parçası olabilir. Bu şekilde hiyerarşik bir yapı vardır.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 `timescale 1ns / 1ps module DEMUX( input D, input [1:0] S, output [3:0] O ); wire W[5:0]; NOT not1(.O(W[0]),.I(S[0])); NOT not2(.O(W[1]),.I(S[1])); AND and1(.O(W[2]),.I1(W[0]),.I2(W[1])); AND and2(.O(W[3]),.I1(S[0]),.I2(W[1])); AND and3(.O(W[4]),.I1(W[0]),.I2(S[1])); AND and4(.O(W[5]),.I1(S[0]),.I2(S[1])); TRI tri00(.O(O[0]),.I(W[2]),.E(D)); TRI tri01(.O(O[1]),.I(W[3]),.E(D)); TRI tri10(.O(O[2]),.I(W[4]),.E(D)); TRI tri11(.O(O[3]),.I(W[5]),.E(D)); endmodule Sıralı (Sequential) Mantık Devreleri Sayısal devrelerin olmazsa olmazlarından biri \u0026ldquo;clock\u0026rdquo; sinyalidir. Peki neden böyle bir şeye ihtiyaç duyulur ? Devrelerde gerçeklenmek istenen işlevler genellikle belli durumların olduğu ve zamana bağlı olarak ard arda belli durumların birbini takip etmesiyle çalışan sistemlerdir. Çoğu durum tek bir kombinasyonel devre olarak gerçeklenemez. Bir çok gerçeklenebilecek durumda da yine de sıralı devreler tercih edilir. Çünkü çok daha az kaynak kullanarak daha stabil şekilde gerçeklemeye uygun devreler bu yöntem ile elde edilebilir.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 module register( input [7:0] SW, input BTN, input CLEAR, output reg [7:0] LED ); always @(posedge BTN , posedge CLEAR) begin case (CLEAR) 1\u0026#39;b1: LED \u0026lt;= 8\u0026#39;b00000000; default: LED \u0026lt;=SW; endcase end endmodule Art-arda 4 tane 1 veya 4 tane 0 gelmesi durumunu tespit eden devrenin verilog kodu aşağıdaki gibidir. Bu devre tipi sıralı mantık devrelerine giriş niteliğinde bir örnektir. Bu devrenin kodu yazılırken ilkönce kağıt üzerinde yapılması gereken işlemler vardır. İlk olarak devrenin durumları çıkarılır. Mealy-Moore diagramı çizilerek durumlar arasındaki geçişler belirlenir ve eğer yapılabiliyorsa gerekli indirgemeler yapılır. Bu işlemlerin sonucuna göre aşağıdaki kod yazılabilir. always @(posedge clk or posedge reset) bu satır sayesinde her \u0026ldquo;clock\u0026rdquo; yükselen kenarında girişlerin değerlerine göre sistem sonraki duruma geçirilir.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 `timescale 1ns / 1ps module FSM1( input x, input reset, input clk, output reg z ); reg q0,q1,q2; wire Q0,Q1,Q2,z_new; assign Q2 = x \u0026amp; q2 | x \u0026amp; q1 \u0026amp; q0; assign Q1 = (q1 \u0026amp; (~q0)) | ((~q2) \u0026amp; (~q1) \u0026amp; q0) | (x \u0026amp; (~q2) \u0026amp; (~q1)); assign Q0 = (x \u0026amp; (~q1)) | (x \u0026amp; (~q0) | (~q2)) \u0026amp; ((~q1) \u0026amp; (~q0)); assign z_new = ((~x) \u0026amp; q1 \u0026amp; (~q0)) | (x \u0026amp; q2 \u0026amp; q0); always @(posedge clk or posedge reset) begin if (reset) begin q0 \u0026lt;= 0; q1 \u0026lt;= 0; q2 \u0026lt;= 0; end else begin q0 \u0026lt;= Q0; q1 \u0026lt;= Q1; q2 \u0026lt;= Q2; z= z_new; end end endmodule ","permalink":"https://mozanunal.com/2018/06/veriloga-giris/","summary":"\u003cp\u003e\u003cstrong\u003eHerkes Merhabalar,\u003c/strong\u003e Bugün bir \u0026ldquo;hardware description language\u0026rdquo; olan verilog\ndiline giriş yapmak istiyorum. Verilog sayısal dizaynda( ASIC ve FPGA )\nkullanılan bir tanımlama dilidir. Verilog dilini Fpga programlamak için bir çok\nprojede kullandım fakat ASIC dizayn konusunda bir tecrübem yok. Fpga\nprogramlarken öğrendiğim şeyleri farklı yazılarda paylaşmıştım. Bu yazı da o\nyazılardan biri diyebiliriz. Verilog ile alakalı daha ileri düzey şeylerden\nbahsedeceğim yazılar da gelecektir diye düşünüyorum.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"ZYBO Fpga Geliştirme Kartı\" loading=\"lazy\" src=\"/images/1527937147117.png\"\u003e\u003c/p\u003e","title":"[TR] Veriloga Giriş"},{"content":"Herkese Merhabalar,\nBugün basit, ilginç ve kullanışlı bir proje ile karşınızdayım. Bulut tabanlı programlar oldukça populer oldu son zamanlarda. Ben bütün ofis programı ihtiyaçlarımı google\u0026rsquo;in çevrimiçi programlarıyla karşılıyorum. Google form da anket yapmanızı sağlayan bu araçlardan biri. Bu aracın olağan kullanımı anket yapmaktır. Bu projede bambaşka bir şey için kullanacağız: IOT sistemler için basit bulut sistemi.\nŞöyle ki normalde anket için yapılmış bu form sistemini IOT cihazımızdan buluta veri göndermek için kullanacağız. Bu sistem sayesinde çok fazla uğraş vermeden cihazımızı uzaktan takip edebiliyor ve verilerini izleyebiliyor olacağız. Hatta direk olarak excel sistemine aktarılacağı için direk oradan analiz bile edebiliriz. Birden fazla cihazlı sistemler bile kurmak mümkün görünüyor. Online olarak takip etmek istediğimiz şeyler olduğunda kullanılabilir gibi gözüküyor.\nBunu yapmamız için biraz olağan dışı işler yapmamız gerekli birazcık. Yapacağımız şeyi özetlemek istersem: Forma tarayıcı üzerinden yaptığımız işlemi IOT bir cihazdan ve \u0026ldquo;curl\u0026rdquo; kullanarak yapacağız.\nİlkönce yeni bir form oluşturuyoruz. Burada cihazımızdan kaç parametre alacaksak onları giriyoruz formun içine.\nBen burada cihazın idsi ve wifi rssi verisini göremek istiyorum onları giriyorum sadece.\nAşağıdaki gibi form linki alıp linke gidiyoruz.\nChrome dev console açıp id ve rssi kutucuklarına rastgele şeyler girip kaydede basıyoruz. Bildiğiniz gibi bizim kaydede basmamız aslında bir \u0026ldquo;web request\u0026rdquo; o google serverına gidip yanıt olarak veri tabanlarına kaydediliyor.\nChrome dev console üzerinden yaptığımız \u0026ldquo;web requesti\u0026rdquo; bulup curl olarak kopyalıyoruz. Bununla tüm gerekli header parametreleriyle forma girdi yapabileceğimiz bir curl komutu oluşturmuş oluyoruz.\nMesela sürekli bulut sistemine göndermek istediğimiz bir veri var. Onu bu şekilde bulut sistemine yollayabiliriz artık. Tek yapmamız gereken basit bir \u0026ldquo;sprintf\u0026rdquo; yapmak. Aldığımız değerleri bu karışık \u0026ldquo;curl request \u0026quot; içinde buluyoruz ve yerine uygun string format aracını koyuyoruz(\u0026quot;%d\u0026rdquo;,\u0026quot;%s\u0026quot;,\u0026quot;%f\u0026quot;).\nGördüğünüz gibi curl komutu oldukça karmaşık. Kodun karıştırmaması için ben bir kısmını sildim yerine 3 nokta koydum. Aşağıdaki gibi formatlayarak o stringi bulut sistemine aktaracak fonksiyonu oluşturabiliriz. Bu fonksiyonu bir döngünün içine alarak 2 dakikada bir CPU sıcaklığını bulut sistemimize aktaran bir kod yazabiliriz.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import os, time def sendData(): val = os.popen(\u0026#34;\u0026#34;\u0026#34;cat /sys/class/thermal/thermal_zone*/temp\u0026#34;\u0026#34;\u0026#34;).read() cmd= \u0026#34;\u0026#34;\u0026#34; curl \u0026#39;https://docs.google.com/forms/d/e/1FAIp... \u0026#39; -H \u0026#39;u729917={}\u0026amp;entry.676449722={}\u0026amp;fvv=\u0026#39; --compressed \u0026gt; /dev/null \u0026#34;\u0026#34;\u0026#34;.format(\u0026#34;moz-rpi\u0026#34;,val) os.system(cmd) while True: try: sendData() time.sleep(120) except: time.sleep(120) Yukarıdaki kodun çıktısı da aşağıdaki ekran alıntısındaki gibi olacaktır. Tüm verilerimiz oluşturduğumuz formun yanıtlar dökümanına aşağıdaki gibi bir formatta düşecektir. Bu noktadan sonra istediğimiz graifiği de çizdirebiliriz ya da filtreler ile verimizi işleyebiliriz. Hatta tahminler bile oluşturabiliriz. Excel oldukça zengin seçenekler sunuyor. Bu yazımım da sonuna geldik. Tekrar görüşmek üzere.\n","permalink":"https://mozanunal.com/2018/04/google-docs-data-collection/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBugün basit, ilginç ve kullanışlı bir proje ile karşınızdayım. Bulut tabanlı\nprogramlar oldukça populer oldu son zamanlarda. Ben bütün ofis programı\nihtiyaçlarımı google\u0026rsquo;in çevrimiçi programlarıyla karşılıyorum. Google form da\nanket yapmanızı sağlayan bu araçlardan biri. Bu aracın olağan kullanımı anket\nyapmaktır. Bu projede bambaşka bir şey için kullanacağız: IOT sistemler için\nbasit bulut sistemi.\u003c/p\u003e\n\u003cp\u003eŞöyle ki normalde anket için yapılmış bu form sistemini IOT cihazımızdan buluta\nveri göndermek için kullanacağız. Bu sistem sayesinde çok fazla uğraş vermeden\ncihazımızı uzaktan takip edebiliyor ve verilerini izleyebiliyor olacağız. Hatta\ndirek olarak excel sistemine aktarılacağı için direk oradan analiz bile\nedebiliriz. Birden fazla cihazlı sistemler bile kurmak mümkün görünüyor. Online\nolarak takip etmek istediğimiz şeyler olduğunda kullanılabilir gibi gözüküyor.\u003c/p\u003e","title":"[TR] En Basit IOT Bulut Sistemi: Google Forms"},{"content":" It is a project developed for BiTaksi Getir Hackathon 2018. Detailed information can be found from below.\nTeam Paketci! Check our app from here which is deployed using heroku.\nCheck github repo of app from here\nGetir Hackhathon 2018 Team Members: Sertan Sezgin Kutlu Ertuğrul Çınar Mehmet Ozan Ünal\nPaketci App Its a work on pack collection and delivery for courier and observer.\nFeatures: By Backend: 1.Assign routes for couries by relate most efficent path. 2.Update states of packets. 3.Update states of couriers.\nBy Frontend 1.Courier see waypoints and pack to collect. 2.Observers see all couriers and pack states. 3.Adding new packs\nUsed Libraries and API in frontend 1.Android Libraries 2.Java 3.Volley 4.Google Maps Directions API 5.Google Maps Javascript API 6.AngularJS\nCompleated Part of Frontend Application is designed for used by cariers. It gave users to see which way courier should go and where to take packs.\nIn order to make it more stable, decions of disturbution made at backend in order to keep system stable for all users, this app communacte with backend by using asyncrounous http requests.\nFor async HTTPS requess, it been used Volley library in JSON Object and String responsed GET and POST requests.\nApp takes missions from backend and by communicating with Google Direcitons API, get caluclations of every shorth path waypoints which collect and carry pointed packs in missions and drawing them on a Map View.\nIn angular web app we see all packs and couriers with their missions and routes. Its allows users to add new packs to environment.\nBackend Data structure and Crud Outputs Sample JSON files, it can be enchance according to packet number and courier number\n/api/courier\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 [{ \u0026#34;_id\u0026#34;: 0, \u0026#34;initLocation\u0026#34;: { \u0026#34;lat\u0026#34;: 40.73726833204571, \u0026#34;long\u0026#34;: -111.86816435821093, }, \u0026#34;curLocation\u0026#34;: { \u0026#34;lat\u0026#34;: 40.73726833204571, \u0026#34;long\u0026#34;: -111.86816435821093, }, \u0026#34;weightCapacity\u0026#34;: 20, \u0026#34;remainingWeightCapacity\u0026#34;: 18.2923904630732, \u0026#34;pieceCapacity\u0026#34;: 8, \u0026#34;remainingPieceCapacity\u0026#34;: 7, \u0026#34;routes\u0026#34;: [ { \u0026#34;_id\u0026#34;: 1, \u0026#34;routeFromGoogle\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;distance\u0026#34;: 0.02248501759660298, \u0026#34;startLoc\u0026#34;: { \u0026#34;lat\u0026#34;: 40.73726833204571, \u0026#34;long\u0026#34;: -111.86816435821093, }, \u0026#34;endLoc\u0026#34;: { \u0026#34;lat\u0026#34;: 40.73287234594392, \u0026#34;long\u0026#34;: -111.84611325115227, }, \u0026#34;nearPacketsDistance\u0026#34;: [ -1, ], \u0026#34;state\u0026#34;: 1, }, { \u0026#34;_id\u0026#34;: 3, \u0026#34;routeFromGoogle\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;distance\u0026#34;: 0.01372524844602735, \u0026#34;startLoc\u0026#34;: { \u0026#34;lat\u0026#34;: 40.73287234594392, \u0026#34;long\u0026#34;: -111.84611325115227, }, \u0026#34;endLoc\u0026#34;: { \u0026#34;lat\u0026#34;: 40.745843583374935, \u0026#34;long\u0026#34;: -111.84162666621344, }, \u0026#34;nearPacketsDistance\u0026#34;: [ -1, ], \u0026#34;state\u0026#34;: 1, }, ], \u0026#34;packets\u0026#34;: [ { \u0026#34;_id\u0026#34;: 0, \u0026#34;initLocation\u0026#34;: { \u0026#34;lat\u0026#34;: 40.73287234594392, \u0026#34;long\u0026#34;: -111.84611325115227, }, \u0026#34;destLocation\u0026#34;: { \u0026#34;lat\u0026#34;: 40.745843583374935, \u0026#34;long\u0026#34;: -111.84162666621344, }, \u0026#34;weight\u0026#34;: 1.707609536926801, \u0026#34;state\u0026#34;: 1, \u0026#34;courier\u0026#34;: {}, }, ], }]; /api/packet\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 [ { \u0026#34;_id\u0026#34;: 0, \u0026#34;initLocation\u0026#34;: { \u0026#34;lat\u0026#34;: 40.73287234594392, \u0026#34;long\u0026#34;: -111.84611325115227, }, \u0026#34;destLocation\u0026#34;: { \u0026#34;lat\u0026#34;: 40.745843583374935, \u0026#34;long\u0026#34;: -111.84162666621344, }, \u0026#34;weight\u0026#34;: 1.707609536926801, \u0026#34;state\u0026#34;: 1, \u0026#34;courier\u0026#34;: {}, }, ]; /api/route\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 [{ \u0026#34;_id\u0026#34;: 0, \u0026#34;routeFromGoogle\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;distance\u0026#34;: 0.027888779677731172, \u0026#34;startLoc\u0026#34;: { \u0026#34;lat\u0026#34;: 40.73726833204571, \u0026#34;long\u0026#34;: -111.86816435821093, }, \u0026#34;endLoc\u0026#34;: { \u0026#34;lat\u0026#34;: 40.745843583374935, \u0026#34;long\u0026#34;: -111.84162666621344, }, \u0026#34;nearPacketsDistance\u0026#34;: [ -1, ], \u0026#34;state\u0026#34;: 0, }, { \u0026#34;_id\u0026#34;: 1, \u0026#34;routeFromGoogle\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;distance\u0026#34;: 0.02248501759660298, \u0026#34;startLoc\u0026#34;: { \u0026#34;lat\u0026#34;: 40.73726833204571, \u0026#34;long\u0026#34;: -111.86816435821093, }, \u0026#34;endLoc\u0026#34;: { \u0026#34;lat\u0026#34;: 40.73287234594392, \u0026#34;long\u0026#34;: -111.84611325115227, }, \u0026#34;nearPacketsDistance\u0026#34;: [ -1, ], \u0026#34;state\u0026#34;: 1, }, { \u0026#34;_id\u0026#34;: 2, \u0026#34;routeFromGoogle\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;distance\u0026#34;: 0, \u0026#34;startLoc\u0026#34;: { \u0026#34;lat\u0026#34;: 40.73287234594392, \u0026#34;long\u0026#34;: -111.84611325115227, }, \u0026#34;endLoc\u0026#34;: { \u0026#34;lat\u0026#34;: 40.73287234594392, \u0026#34;long\u0026#34;: -111.84611325115227, }, \u0026#34;nearPacketsDistance\u0026#34;: [ -1, ], \u0026#34;state\u0026#34;: 0, }, { \u0026#34;_id\u0026#34;: 3, \u0026#34;routeFromGoogle\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;distance\u0026#34;: 0.01372524844602735, \u0026#34;startLoc\u0026#34;: { \u0026#34;lat\u0026#34;: 40.73287234594392, \u0026#34;long\u0026#34;: -111.84611325115227, }, \u0026#34;endLoc\u0026#34;: { \u0026#34;lat\u0026#34;: 40.745843583374935, \u0026#34;long\u0026#34;: -111.84162666621344, }, \u0026#34;nearPacketsDistance\u0026#34;: [ -1, ], \u0026#34;state\u0026#34;: 1, }]; Route Optimization Firstly, every courier has a route to common destination point. Then most efficient package route change apply. It\u0026rsquo;s calculated with change of route distance according to package location. It will iterate until no package will left. But according to courier capacities, some of package can be over couriers' capacities; so you need to go second round.\n1 2 3 4 5 6 7 8 9 10 11 \u0026#34;dependencies\u0026#34;: { \u0026#34;body-parser\u0026#34;: \u0026#34;~1.18.2\u0026#34;, \u0026#34;cookie-parser\u0026#34;: \u0026#34;~1.4.3\u0026#34;, \u0026#34;debug\u0026#34;: \u0026#34;~2.6.9\u0026#34;, \u0026#34;express\u0026#34;: \u0026#34;~4.15.5\u0026#34;, \u0026#34;mathjs\u0026#34;: \u0026#34;^3.20.2\u0026#34;, \u0026#34;point-line-distance\u0026#34;: \u0026#34;^1.0.0\u0026#34;, \u0026#34;google_directions\u0026#34;: \u0026#34;^0.6.0\u0026#34;, \u0026#34;polyline\u0026#34;: \u0026#34;^0.2.0\u0026#34;, \u0026#34;request\u0026#34;: \u0026#34;^2.83.0\u0026#34; } ","permalink":"https://mozanunal.com/2018/04/getir-hackhathon/","summary":"\u003cblockquote\u003e\n\u003cp\u003eIt is a project developed for BiTaksi Getir Hackathon 2018. Detailed\ninformation can be found from below.\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch1 id=\"team-paketci\"\u003eTeam Paketci!\u003c/h1\u003e\n\u003cp\u003e\u003cimg alt=\"image\" loading=\"lazy\" src=\"/images/1523149456799.jpg\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://hackhathon-getir-2018.herokuapp.com/\"\u003eCheck our app from here\u003c/a\u003e which is\ndeployed using heroku.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/mozanunal/paketci-backend\"\u003eCheck github repo of app from here\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Timeline of our little project!\" loading=\"lazy\" src=\"https://github.com/mozanunal/paketci-backend/blob/master/doc/images/timeLine.PNG?raw=true\"\u003e\u003c/p\u003e\n\u003cp\u003eGetir Hackhathon 2018 Team Members: Sertan Sezgin Kutlu Ertuğrul Çınar Mehmet\nOzan Ünal\u003c/p\u003e\n\u003ch1 id=\"paketci-app\"\u003ePaketci App\u003c/h1\u003e\n\u003cp\u003eIts a work on pack collection and delivery for courier and observer.\u003c/p\u003e","title":"[TR] Hackhathon Getir 2018"},{"content":"Herkese Merhabalar, Hash Code Google tarafından dünya çapında düzenlenen bir algoritma yarışmasıdır. Bu yıl itibariyle son 3 tanesine ben de katılmış bulunuyorum. Hatta geçen sene yarışma hakkında bir yazı da yazmıştım. Bu geleneği bu yıl da devam ettirmeye karar verdım.\nBu seneki yarışmada çok başarılı olamadık derece anlamında. Ama yarışmada çalışan, puan alabilen bir çözüm sunmak bile baya zor. O nedenle ben de çözümüzü birazcık açıklamak istiyorum. Aşağıdan direk github reposunu inceleyebilirsiniz. Github Repo\nYarışmada şunu yapmamız istendi: Belli bir zamanda bir yerden bir yere gitmesi gereken yolcular var. Elimizde yolcuları taşımak üzere arabalar var. Hangi araba ne zaman nerede olacak hangi yolcuları alacak bunu optimize etmemiz isteniyor.\nAşağıdaki dosyada point ve map classı tanımlanmış. Bir de mesefa hesaplayan bir fonksiyon eklenmiş durumda.\n1 2 3 4 5 6 7 8 9 10 11 12 13 def calcStep(a,b): return abs(a.x - b.x ) + abs(a.y - b.y) class Point(object): def __init__(self,x,y): self.x = x self.y = y class Map(object): def __init__(self,R,C): self.R = R self.C = C Burada \u0026ldquo;Ride\u0026rdquo; objesi tanımlanmış durumda. \u0026ldquo;Ride\u0026rdquo; için gerekli argumanlar başlangıç-bitiş noktaları ve zamanları. Bu girdilere göre bir kaç tane de daha özellik init fonksiyonunda oluşturuluyor.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 from mapH import * class Ride(object): def __init__(self, ride_id, start_intersection, finish_intersection, earliest_start, latest_finish): self.id = ride_id self.start_intersection = start_intersection self.finish_intersection = finish_intersection self.earliest_start = earliest_start self.latest_finish = latest_finish self.stepSize = calcStep(start_intersection,finish_intersection) self.earliest_finish = self.earliest_start + self.stepSize self.latest_start = self.latest_finish - self.stepSize self.status = 0 def printRide(self): print \u0026#34;-----Ride id: \u0026#34;, self.id print \u0026#34;-start \u0026#34;, self.start_intersection.x, self.start_intersection.y print \u0026#34;-finish: \u0026#34;, self.finish_intersection.x, self.finish_intersection.y print \u0026#34;-start steps: \u0026#34;, self.earliest_start, self.latest_start print \u0026#34;-distance: \u0026#34;, self.stepSize print \u0026#34;-finish steps: \u0026#34;, self.earliest_finish, self.latest_finish Aşağıdaki dosya temel işlemlerimizin yapıldığı araba objesi. Buradaki en kritik fonksiyon \u0026ldquo;findRide\u0026rdquo; fonksiyonu. Biz çözümümüzü şu şekilde tasarladık: Simulasyon benzeri bir şey çalıştırıyoruz t = 0 anından başlanarak tüm arabalara ilk konumlarına ve \u0026ldquo;Ride\u0026rdquo; durumuna göre iş atanıyor. Sonra simulasyon t = 1 anına geçiyor. Eğer boşa çıkmış araba varsa tekrar ona iş atayım sonraki t anına geçiş yapıyor. Bu şekilde zamanı simüle etmiş oluyoruz ve boşa çıkan arabaya hemen iş atanıyor.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 import numpy as np from mapH import * class Car(object): def __init__(self,id): self.id = id self.currentPos = Point(0,0) self.rides = [] self.willBeIdleTime = 0 def printCar(self): print \u0026#34;-----Car id: \u0026#34;, self.id print \u0026#34;-pos \u0026#34;, self.currentPos.x, self.currentPos.y print \u0026#34;-status: \u0026#34;, self.status print \u0026#34;-rides\u0026#34;, self.rides def findRide(self, Rides, stepNow): costs = [] costs_rides = [] for ride in Rides: if ride.status is 0: stepCost = calcStep(self.currentPos, ride.start_intersection) if ( stepNow+(stepCost+ride.stepSize) ) \u0026lt; ride.latest_finish: if (stepNow+stepCost) \u0026gt; ride.earliest_start: # direk al git costs.append(stepCost) costs_rides.append(ride) else: # beklemeli cost costs.append(ride.earliest_start-stepNow) costs_rides.append(ride) if len(costs) \u0026gt; 0: darr = np.array(costs) selected_ride = costs_rides[darr.argmin()] self.rides.append(selected_ride.id) Rides[selected_ride.id].status = 1 self.willBeIdleTime = stepNow+(stepCost+ride.stepSize) else: self.willBeIdleTime = 1000000 Son olarak ana giriş dosyamız. Bu kod ile gerekli veri verilen dataset dosyalarından okunuyor ve kurguladığımız sisteme uygun hale getirilip objeler oluşturuluyor. Daha sonrasında önceden bahsettiğim simülasyon kısmı çalıştırılıyor ve çıktıları çıkış dosyasına yazılıyor yarışma tarafından verilen formatta. Evet bu yazı için benden bu kadar. Eğer anlamadığınız merak ettiğiniz yerler var ise kodla alakalı sorabilirsiniz. Son sözlerim olarak bu yarışmayı herkese tavsiye ediyorum. Gerçekten zorlayıcı ve geliştirici bir yarışma. Süreniz 4 saat oluyor ve stres altında doğru düşünme yeteneğinizi geliştirmeniz için sizi itekliyor. Bir diğer önemli unsur da beraber çalışma. Takımınızla doğru görev paylaşımını yapmanız gerek. Bireysel çalışarak iyi sonuçlar alınabilecek bir yarışma olduğunu düşünmüyorum. Tekrar görüşmek üzere\u0026hellip;\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 from ride import * from car import * from mapH import * #\u0026#34;data/c_no_hurry.in\u0026#34; #\u0026#34;data/b_should_be_easy.in\u0026#34; #\u0026#34;data/a_example.in\u0026#34; #\u0026#34;data/d_metropolis.in\u0026#34; FILENAME = \u0026#34;data/d_metropolis.in\u0026#34; Rides = [] Cars = [] file = open(FILENAME) line1 = file.readline() # R number of rows of the grid # C number of columns of the grid # F number of vehicles in the fleet # N number of rides # B per-ride bonus for starting the ride on time # T number of steps in the simulation values = line1.split(\u0026#34; \u0026#34;) number_of_rows, number_of_columns, number_of_vehicles, number_of_rides, per_ride_bonus, number_of_steps = [int(v) for v in values] print \u0026#39;number_of_rows\u0026#39;, \u0026#39;number_of_columns\u0026#39;, \u0026#39;number_of_vehicles\u0026#39;, \u0026#39;number_of_rides\u0026#39;, \u0026#39;per_ride_bonus\u0026#39;, \u0026#39;number_of_steps\u0026#39; print number_of_rows, number_of_columns, number_of_vehicles, number_of_rides, per_ride_bonus, number_of_steps id = 0 for line in file.readlines(): x1, y1, x2, y2, start, end = [int(i) for i in line.split(\u0026#34; \u0026#34;)] startPoint = Point(x1, y1) endPoint = Point(x2, y2) curRide = Ride(id, startPoint, endPoint, start, end) #curRide.printRide() Rides.append( curRide ) id = id+1 for i in range(number_of_vehicles): Cars.append( Car(i) ) def solve(): for i in range(number_of_steps): stepNow = i if i % 1000 is 0: print \u0026#34;Sim step\u0026#34;, stepNow for car in Cars: if car.willBeIdleTime \u0026lt;= stepNow: car.findRide(Rides,stepNow) def printResult(): print \u0026#34;RESULT_________\u0026#34; result=\u0026#34;\u0026#34; for car in Cars: line = str(len(car.rides)) for i in car.rides: line+=\u0026#34; \u0026#34;+str(i) line+=\u0026#34;\\n\u0026#34; result+=line print result file = open(FILENAME+ \u0026#34;.out\u0026#34;,\u0026#34;w+\u0026#34;) file.write(result) file.close() print \u0026#34;done\u0026#34; solve() printResult() ","permalink":"https://mozanunal.com/2018/04/hash-code-2018/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e Hash Code Google tarafından dünya çapında düzenlenen bir\nalgoritma yarışmasıdır. Bu yıl itibariyle son 3 tanesine ben de katılmış\nbulunuyorum. Hatta geçen sene yarışma hakkında bir yazı da yazmıştım. Bu\ngeleneği bu yıl da devam ettirmeye karar verdım.\u003c/p\u003e\n\u003cp\u003eBu seneki yarışmada çok başarılı olamadık derece anlamında. Ama yarışmada\nçalışan, puan alabilen bir çözüm sunmak bile baya zor. O nedenle ben de çözümüzü\nbirazcık açıklamak istiyorum. Aşağıdan direk github reposunu inceleyebilirsiniz.\n\u003ca href=\"https://github.com/mozanunal/hashcode-2018-qualificationQuestion\"\u003eGithub Repo\u003c/a\u003e\u003c/p\u003e","title":"[TR] Hash Code 2018"},{"content":"Herkese Merhabalar, Gnu Radio son zamanlarda keşfetmekten en çok keyif aldığım program olabilir. İlk defa duyanlar için özetlemem gerekirse içerisinde sinyal işleme ve sayısal haberleşme araçları toplanmış görsel programlama editörü. Sinyal dosyadan veya daha önce bahsettiğim SDR isimli cihazlardan alınabiliyor. Alınan sinyaller sayısız çeşitlilikte araçlar ile işlenebiliyor. Coding, modulasyon, demodulasyon gibi haberleşme işlemlerini sürükle bıraklarla kolayca uygulamak mümkün.\nProgramı kurduktan sonra bizi ilk olarak aşağıdaki gibi bir ekran karşılıyor. Sağ tarafta program içerisindeki araçları görebilirsiniz. Hepsi aslında belli işlevi olan bir kutu. Sürükleyerek yapmak istediğimiz operasyonu gerçekliyoruz.\nPaketlere bir göz atmak isterseniz; üst başlıkları aşağıdaki resimdeki gibi sıralanmış. Gördüğünüz gibi çeşitlilik inanılmaz geniş. Qt veya wx ile görselleme pencereleri de tasarlamak mümkün. Filter dizayn araçlarını da program içinde bulunduruyor. Yazının devamında çok basit bir şeyler yaparak nasıl çalıştığını göstermek istiyorum.\nBasit Sinyal İnceleme Aşağıdaki örnekte sinyal kaynağından 1 khz cosünüs dalga ürettim çıkışını da direk olarak zaman domaini analiz için kullanılan qt görselleştirme aracına bağladım.\nBu programı çalıştırdığımızda aşağıdaki gibi bir çıktı alıyoruz.\nİki Sinyali Toplama Bu sefer çok basit olarak 2 farklı sinyal toplandı ve çıkış çoklanarak zaman ve frekans domaininde analiz edildi. Örnekleme frekansını değiştirdiğim için sinyaldeki kırılmaları zaman domaini grafiğinde görebilirsiniz.\nBeklediğimiz üzere 1khz ve 1.8 khz frekanslarında tepeleri görebilirsiniz. Elimizdeki sinyali kolayca inceleyebiliyoruz.\nGürültü ekleme Son olarak sinyalimize biraz da gürültü ekledim. Giriş frekanslarımızdaki tepeler biraz daha gürüştünün içinde kayboldu ama yine de filtrelenebilecek durumda. Filtreleri de bu yazıda anlatmak isterdim ama onlara da girersem GNU Radio giriş yazısı biraz konu dışına çıkmış olacağımı düşünüyorum. Bu program üzerinde bir şeyler geliştirip bu yazı serisini devam ettirmek istiyorum. Görüşmek üzere\u0026hellip;\n","permalink":"https://mozanunal.com/2018/03/gnu-radio-giris/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e Gnu Radio son zamanlarda keşfetmekten en çok keyif\naldığım program olabilir. İlk defa duyanlar için özetlemem gerekirse içerisinde\nsinyal işleme ve sayısal haberleşme araçları toplanmış görsel programlama\neditörü. Sinyal dosyadan veya daha önce bahsettiğim SDR isimli cihazlardan\nalınabiliyor. Alınan sinyaller sayısız çeşitlilikte araçlar ile işlenebiliyor.\nCoding, modulasyon, demodulasyon gibi haberleşme işlemlerini sürükle bıraklarla\nkolayca uygulamak mümkün.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"gnu-radio-logo\" loading=\"lazy\" src=\"https://aaronscher.com/GNU_Radio_Companion_Collection/GNU_Radio_Companion_Collection_docs/audio_modem_schematic.png\"\u003e\u003c/p\u003e\n\u003cp\u003eProgramı kurduktan sonra bizi ilk olarak aşağıdaki gibi bir ekran karşılıyor.\nSağ tarafta program içerisindeki araçları görebilirsiniz. Hepsi aslında belli\nişlevi olan bir kutu. Sürükleyerek yapmak istediğimiz operasyonu gerçekliyoruz.\u003c/p\u003e","title":"[TR] GNU Radio Giriş"},{"content":"Herkese Merhabalar,\nBildiğiniz üzere gömülü sistemlerde programlama C ile yapılır. Bunun sebebi makine diline en yakın dil olması bu nedenle sistem kaynaklarını az kullanarak programlar geliştirilebilmesi ve gömülü sistemdeki donanımları kolay programlanabilmesidir. Fakat buna rağmen işlemcilerin de güçlenmesiyle ve ihtiyaçların da değişmesiyle farklı diller ile programlama yapabilmek için farklı denemeler yapılmaktadır. Daha önce ESP8266 için scripting dili kullanma denemeleri olmuştu. Bir ara Lua dili ile programlanabiliyordu. Hatta bir ara beklediğimden çok daha popüler hale gelmişti. Lua dili bilmediğim için o firmware test etme şansım olmadı. Fakat yakın zamanda benzer bir projenin favori programlama dilim olan python ile de yapıldığını gördüm. ESP8266\u0026rsquo;nın python ile programlanabildiğini görünce dayanamadım. Bu projenin ismi micropython ve denediğimde micropython firmware oldukça hoşuma gitti o yüzden hakkında bir şeyler yazmak istedim. Micropython bir kickstarter projesi olarak çıkmış ortaya. İlk olarak Stm32f4 boardları için yapılmış. Amacı mikroişlemciler üzerinde python çalıştırmak ve python shell mantığıyla prototipleme yapabilmek. Bildiğiniz üzere python en büyük eksilerinden biri yüksek ram harcaması. Bu sorunu çözmek için bütün standart python kütüphanleri micropython diye yeni bir yapıya portlanmış ve flashda ve ramda kapladığı alan sorunları çözülmeye çalışılınmış.\nDaha sonrasında işlemcilerin donanımla ile alakalı fonksiyonlarına ve çevre birimlerine(peripheral) ulaşabilmek için işlemcilerin C SDK\u0026rsquo;leri kullanılarak micropython driverları yazılmış. Yani timer, adc, gpio, i2c, spi, uart gibi temel donanımları kullanabiliyorsunuz. Yazılan bu driverların üzerine bir de sensör veya lcd, led driver gibi bileşenler için de driverlar yazılmış. Ortaya geliştirme kartlarını kolayca yönetebileceğimiz sistemler çıkmış.\nBenim micropytohon\u0026rsquo;ı direk satılan Pyboardlarda deneme şansım olmadı. Onun yerine elimde bulunan ESP8266 üzerine yükledim. ESP8266 bildiğiniz üzere bir wifi çipi. Network fonksiyonları da micropythonda bulunuyor. O yüzden ESP8266 kullanmak için biçilmiş kaftan.\nhttps://docs.micropython.org/en/v1.9.2/esp8266/esp8266/tutorial/intro.html Boarda firmware yüklemek için esptool gereklidir. Aşağıdaki komut ile esptool yükleyebilirsiniz:\n1 pip install esptool İlk yüklemede flashın tamamen temizlenmesi tavsiye edilir. Com numarasını değiştirmeyi unutmayın. Daha sonrasında buradan indirilen elinizdeki ESP ile uyumlu firmware boarda devamındaki komut ile yüklenir.\n1 2 3 esptool --port COM3 erase_flash esptool --port COM3 --baud 460800 write_flash --flash_size=detect 0 esp8266-20170108-v1.8.7.bin Kurulumu tamamladıktan sonra putty ile aynı serial porta bağlanıyoruz. Karşımıza python terminali çıkıyor. https://docs.micropython.org/en/v1.9.2/esp8266/esp8266/tutorial/index.html örnek olarak:\n1 2 3 4 5 ## File operasyonları \u0026gt;\u0026gt;\u0026gt; f = open(\u0026#39;data.txt\u0026#39;, \u0026#39;w\u0026#39;) \u0026gt;\u0026gt;\u0026gt; f.write(\u0026#39;some data\u0026#39;) 9 \u0026gt;\u0026gt;\u0026gt; f.close() upython standart kütüphanesini için buradan inceleyebilirsiniz. cihaza özel kütüphaneler Web repl kullanarak wifi üzerinden geliştirmenizi yapabilirsiniz. Web repl aktifleştirmek ile alakalı ayrıntılı bilgi için Referanslar: https://docs.micropython.org/en/latest/esp8266/esp8266/quickref.html https://github.com/espressif/esptool https://docs.micropython.org/en/latest/esp8266/library/esp.html\n","permalink":"https://mozanunal.com/2018/03/micropython-1516117222475/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBildiğiniz üzere gömülü sistemlerde programlama C ile yapılır. Bunun sebebi\nmakine diline en yakın dil olması bu nedenle sistem kaynaklarını az kullanarak\nprogramlar geliştirilebilmesi ve gömülü sistemdeki donanımları kolay\nprogramlanabilmesidir. Fakat buna rağmen işlemcilerin de güçlenmesiyle ve\nihtiyaçların da değişmesiyle farklı diller ile programlama yapabilmek için\nfarklı denemeler yapılmaktadır. Daha önce ESP8266 için scripting dili kullanma\ndenemeleri olmuştu. Bir ara Lua dili ile programlanabiliyordu. Hatta bir ara\nbeklediğimden çok daha popüler hale gelmişti. Lua dili bilmediğim için o\nfirmware test etme şansım olmadı. Fakat yakın zamanda benzer bir projenin favori\nprogramlama dilim olan python ile de yapıldığını gördüm. ESP8266\u0026rsquo;nın python ile\nprogramlanabildiğini görünce dayanamadım. Bu projenin ismi \u003cstrong\u003emicropython\u003c/strong\u003e ve\ndenediğimde micropython firmware oldukça hoşuma gitti o yüzden hakkında bir\nşeyler yazmak istedim. \u003cimg alt=\"upython\" loading=\"lazy\" src=\"/images/1516117467411.jpg\"\u003e Micropython bir\n\u003cstrong\u003ekickstarter\u003c/strong\u003e projesi olarak çıkmış ortaya. İlk olarak Stm32f4 boardları için\nyapılmış. \u003cstrong\u003eAmacı mikroişlemciler üzerinde python çalıştırmak ve python shell\nmantığıyla prototipleme yapabilmek.\u003c/strong\u003e Bildiğiniz üzere python en büyük\neksilerinden biri yüksek ram harcaması. Bu sorunu çözmek için bütün standart\npython kütüphanleri micropython diye yeni bir yapıya portlanmış ve flashda ve\nramda kapladığı alan sorunları çözülmeye çalışılınmış.\u003c/p\u003e","title":"[TR] Micropython Nedir?"},{"content":"Herkese Merhabalar, Son yıllarda hobi elektroniği inanılmaz bir hızla gelişti. Şüphesiz bu hızlı gelişmenin mimarı Arduino. Atmelin 8 bitlik işlemcilerini temel alarak tasarlanan bu kart ve programala dili sayesinde insanlar kolayca projeler geliştirmeye ve hobi uygulamaları yapmaya başladılar. Ama Arduinonun ve hatta daha iyi bir mikroişlemcinin de yeterli olmadığı projeler var. Böyle bir ihtiyaç doğduğunda seçenekler kendini geliştirmek isteyenler için çok sıkıntılı hale geliyor. Önceki yazılarımdan birinde STM32 öğrenmeye nasıl başlanır ve proje nasıl oluşturulur onu anlatmıştım. Bu sefer mikroişlemcinin yanı sıra bir fpga üzerine gitmek istiyorum. Mesela yüksek hesaplama gücü ve paralel işlem gerektiren proje yapmak istiyorsunuz ve fgpa öğrenmek istiyorsunuz. Nasıl başlayabilirsiniz onu anlatmak istiyorum.\nGeliştirme Kartı Seçimi İlkönce geliştirme kartımızdan bahsedeyim. Ben üzerinde Cyclone IV bulunan Altera(Artık Intel oldu) marka bir kart seçtim. İlk nedenim maliyet. Usb blasterıyla birlikte oldukça uygun fiyatlara( 22$) alabiliyorsunuz. Fpgaler mikroişlemciler göre oldukça pahalı malzemeler o yüzden böyle bir başlangıç yapmak istedim. Diğer bir avantajı da bence geliştirme ortamının(Quartus) daha hafif olması ve lite sürümünde lisans prolemi yaşamadan kullanabilinmesidır. Xillinx fpgaleri hem ISEde hem VIVADOda kullandım. Geliştirme ortamları oldukça ağır ve ayarlama süreçleri daha sancılı geldi bana. Tabi bu konu malesef çok tecrübeli olduğum bir konu değil. Mesela büyük ve karmaşık projelerde daha büyük kolaylıklar sağlıyor olabilir. Bir diğer dezavantaj da geliştirme kartının üzerinde 2 buton ve 1 ledden başka direk kullanabileceğimiz ekipmanlar yok. Fakat elimizde bir sürü gpio var, her türlü sensörü biraz uğraşarak bağlamamız mümkün o yüzden bu durumu büyük bir problem olarak görmüyorum.\nFpga Kartı Usb Blaster Bağlantılar Fpga kartını aşağıdaki gibi bağlamalıyız. Bunun için bilgisayarımızda 2 adet usb portu olması gerekir. İlk port güç için kullanılıyor. İkinci port da jtag olarak kullanılıyor; buradan kod yükleme, debug gibi operasyonları gerçekleştirebiliriz.\nAşağıda ise geliştirme kartının pin bağlantılarını bulabilirsiniz. Bunu aliexpressden kopyaladım. Çok güvenilir bi kaynak değil ama pinleri kontrol ettim problem yok. Proje oluşturma Bu bölümde Quartus Prime kullanarak nasıl proje oluşturacağımızı anlatacağım. Aşağıdaki ekran açılış ekranı. Burdan yeni proje oluşturmayı seçiyoruz.\nProjemizi oluşrutulacağı dosya dizini ve ismini seçiyoruz.\nProje tipi olarak boş proje seçiyoruz.\nBurada Fpga kartımızın üzerindeki chipseti seçmemiz gerekir. Bu karttaki çipsetin tam ismi Cyclone IV EPCE6E22C8. Çipin üzerinden direk okuyabilirsiniz.\nMalesef Eda toolarıyla veya simülasyonla alakalı bir tecrübem olmadı henüz o yüzden boş bıraktım buraları.\nBu proje oluşturma için son adımdı. Seçimlerimizle alakalı bir özet sayfası.\nHello World Bildiğiniz gibi programlama dillerinde veya elektronik kartlarda ilk çalıştırılan koda-uygulamaya \u0026ldquo;Hello World\u0026rdquo; uygulaması denir. Biz de hello world uygulaması olarak and gate yapacağız.\nSol tarafta projedeki dosyaların ve modullerin hiyararşik dizilimini inceleyebilirsiniz. Proje geliştirme esnasında burası ile çok fazla haşır neşir olacaksınız. Devamında projeye bir verilog dosyası ekleyebiliriz.\nOluşturulan dosya \u0026ldquo;top module\u0026rdquo; olarak seçilmelidir. Aşağıdaki verilog kodları yazıldıktan sonra üçgen mavi ok ile proje compile edilir. Peki compile aşamaları nelerdir derseniz:\nİlkönce tariflediğimiz hardware\u0026rsquo;ın şeması oluşturulur. O şema lutlar ile ve fpga üzerine uygulanabilecek hale getirilir. Oluşturulan yeni şema fpga üzerinde bi yerlere oturtulur. Bu işleme routing denir. Son olarak binary dosya oluşturulur. Sol alt kısımda görüldüğü gibi bütün işlemler yeşil olmalıdır. Yoksa kodunuzda bir problem var demektir. Bu arada kodu derlemen önce \u0026ldquo;Pin Planner\u0026rdquo; aracı kullanarak \u0026ldquo;top_module\u0026quot;deki giriş çıkışları gerçek pinlere bağlamak gerekir. Ben burada 2 butonu and kapısının girişlerine, ledi ise and kapısının çıkışına bağladım. Projenin derleme raporunun bir kısmı aşağıdaki gibidir. Sonra \u0026ldquo;programmer\u0026rdquo; açılır. Usb blaster göremezse sürücülerinin güncellemesi gerekir. Eğer sürücü problemi yoksa Usb Blasterı otomatik gözükecektir. Son olarak start tuşuna bastığımızda kodu fpgaye yükleyecektir. Daha sonrasınd \u0026ldquo;key1\u0026rdquo; ve \u0026ldquo;key2\u0026rdquo; butonlarını kullanarak kodu test edebilirsiniz. Bu yazı için anlatacaklarım bu kadar. Projemizle fpga dünyasına hızlı bir giriş yapmış olduk. Hem de oldukça uygun fiyatlı bir paket ile. Umarım bu tarz cihazların kullanımı hobi elektroniğinde ve elektronik eğitiminde hızla artar. Tekrar görüşmek üzere\u0026hellip; https://www.altera.com/en_US/pdfs/literature/ug/ug_civgx_fpga_dev_kit.pdf\n","permalink":"https://mozanunal.com/2018/03/altera-cyclone-4-fpga/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e Son yıllarda hobi elektroniği inanılmaz bir hızla\ngelişti. Şüphesiz bu hızlı gelişmenin mimarı Arduino. Atmelin 8 bitlik\nişlemcilerini temel alarak tasarlanan bu kart ve programala dili sayesinde\ninsanlar kolayca projeler geliştirmeye ve hobi uygulamaları yapmaya başladılar.\nAma Arduinonun ve hatta daha iyi bir mikroişlemcinin de yeterli olmadığı\nprojeler var. Böyle bir ihtiyaç doğduğunda seçenekler kendini geliştirmek\nisteyenler için çok sıkıntılı hale geliyor. Önceki yazılarımdan birinde STM32\nöğrenmeye nasıl başlanır ve proje nasıl oluşturulur onu anlatmıştım. Bu sefer\nmikroişlemcinin yanı sıra bir fpga üzerine gitmek istiyorum. Mesela yüksek\nhesaplama gücü ve paralel işlem gerektiren proje yapmak istiyorsunuz ve fgpa\nöğrenmek istiyorsunuz. Nasıl başlayabilirsiniz onu anlatmak istiyorum.\u003c/p\u003e","title":"[TR] Altera Cyclone IV ile FPGA Dünyasına Giriş"},{"content":"Herkes merhabalar,\nBitcoin son dönemlerin popüler konularından birisi. Aslında genel olarak crypto currency son zamanlarda çok popüler. Peki nedir bu kavramlar? Crypto currency güvenliği şifreleme teknojileriyle sağlanan sanal para birimleridir. Her gün bir yeni bir tür crypto currency ortaya çıkıyor. Bunlar arasında en geçerli olanı ise bitcoin. Sanırım popülerliği en eskilerinden biri olmasından ve anlık olarak üretimi sınırlayabilen ilki olmasından geliyor. Bahsetmek istediğim 3. kavram ise bit coin mining: Yüksek hesaplama gücü kullanarak bitcoin üretebilmeniz mümkün. Bitcoin alışverişlerinin geçerli olması için bir şifre ile onaylanması gerekiyor. Bu şifreyi de bir hash çözerek oluşturuyorsunuz ve bunun karşılığında sistem sizi bitcoin ile ödüllendiriyor. Bu amaçla bir sürü insan sağlan ekran kartları alıp bitcoin tarlaları kurdular ve bu işten para kazanıyorlar. Tabi aklınıza, bitcoinin dünyaya katkısı nedir ya da ne kadar riskli, yatırım yapılır mı? gibi türlü türlü farklı açılardan sorular gelebilir. Ama malesef ben bu konuda uzman değilim ve daha nedir sorusuna bile tam olarak cevap vermek çok zor.\nNeyse konuyu biraz fazla dağıttım bu yazının konusu aslında bunlar değil. Konuma dönecek olursam; bitcoin mining işini kolaylaştıran sistem var, adı Nice Hash. Programını kuruyorsunuz ve bilgisayarınızın hesaplama gücünü satarak para kazanıyorsunuz. Arka planda o crypto currency\u0026rsquo;lerden en karlı olanı \u0026ldquo;mine\u0026rdquo; ediyor. Size de ona göre bir para ödüyor tabi bitcoin olarak. Bir arkadaşım da bu mining işine girdi. Projemin asıl amacı ona anlık olarak kazandığı parayı gösterebilecek bir sistem yapmaktı. Proje böyle başladı yani :). Bu projede kapsamında yaptığım; gerçek zamanlı olarak bu programın web apisini kullanarak bir miner\u0026rsquo;ın kazandığı parayı ve o andaki bitcoin kurunu çekip 1 inchlik oled ekranda gösteren bir sistem.\nBu proje ESP8266 modülleri kullanarak gerçekleştirildi. Bildiğiniz üzere minik bir wifi modulü. Bitcoin idnizi girerek yazdığım kodu derlerseniz direk olarak bilgilerinize ulaşabilirsiniz. ESP8266 minik bir oled ekranı kontrol ederek aldığı anlık kur datasını, kullanıcının toplam bitcoinini ve dolar karşılığını gösterecek şekilde bir program geliştirildi. ESP8266 olarak wemos d1 mini modullerinden kullandım. I2C pinlerini Oled ekrana den gelecek şekilde bir pertinanks oluşturdum uygun pinleri de lehimleyerek shield haline getirmiş oldum. Yukarıdaki fotoğrafta ESP8266 tamamen shieldın altına gizlenmiş halde bu sayede sistem baya toplanmış oldu tek parça bir görüntü kazandı.\nKod Kodu buradan inceleyebilirsiniz.\nWifi bağlanma ve ekran ayarları Wifi multi kullandığım için birden fazla wifi girebilirsiniz. Hangisi çevrede varsa onu kullanarak internete çıkar. Ekranın boyutu çok küçük olmasına rağmen çözünürlüğü böyle bir sisteme göre oldukça yüksek bu sayede baya hoş gözüküyor.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 //Setup Oled display.init(); display.flipScreenVertically(); display.setFont(ArialMT_Plain_16); display.setTextAlignment(TEXT_ALIGN_LEFT); display.clear(); //Setup Wifi WiFiMulti.addAP( ssid_1 , pass_1); WiFiMulti.addAP( ssid_2 , pass_2); display.clear(); display.drawString(0 , 20, \u0026#34;Waiting for wifi...\u0026#34;); display.display(); int xpos = 0; while(WiFiMulti.run() != WL_CONNECTED) { display.drawString(xpos ,40 , \u0026#34;.\u0026#34;); xpos= xpos + 3; display.display(); delay(500); } Gerekli verilerin internetten çekilmesi Data alma kısmında buradaki Nice Hash api dökumanından yararlandım. Bitcoin id ile http request yapıldığında geriye bir json dönüyor. Json Arduinojson library ile parçalanıp içinden gerekli bilgi çekiliyor. Verilen urlden datayı string almak için aşağıdaki fonksiyonu yazdım.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 String getJsonFromUrl(char *url) { HTTPClient http; //Declare an object of class HTTPClient String payload; http.begin(url); //Specify request destination int httpCode = http.GET(); //Send the request Serial.print(\u0026#34;\\n Received http code \u0026#34;); Serial.println(httpCode); if (httpCode \u0026gt; 0) //Check the returning code { Serial.println(\u0026#34;HTTP OK\u0026#34;); payload = http.getString(); //Get the request response payload Serial.println(payload); //Print the response payloa return payload; } else { Serial.println(\u0026#34;HTTP ERROR\u0026#34;); return \u0026#34;{}\u0026#34;; } http.end(); //Close connection } Kur bilgisinin alınması Yukarıdaki data alma fonksiyonu kullanılarak data string olarak çekilip json\u0026rsquo;a dönüştürülüyor. Daha sonrasında kur bilgisi aşağıdaki fonksiyon kullanılarak çekiliyor. Json parçalanıp içindeki \u0026ldquo;USD\u0026rdquo; objesinin \u0026ldquo;last\u0026rdquo; değikeni çekiliyor. Bizim için güncel bitcoin kuru.\n1 2 3 4 5 6 7 8 9 10 11 12 13 double getCurrency() { JsonObject\u0026amp; root_Currency = jsonBuffer_Currency.parseObject( getJsonFromUrl(url_Currency) ); if (root_Currency.success()) { double currency = root_Currency[\u0026#34;USD\u0026#34;][\u0026#34;last\u0026#34;]; return currency; } else { return 0.0; } } Kazanılan bitcoin bilgisinin alınması Kaznılan bitcoin için NiceHash Api kullanılıyor. Bitcoin cüzdanı ID\u0026rsquo;si ile request yapıldığında oldukça büyük bir obje dönüyor. Aşağıdaki gibi bir parçalama işlemiyle şu ana kadar kazanılan para bitcoin olarak çekiliyor. Bitcoin değeri ile kur çarpılarak dolar karşılığı da hesaplanıyor.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 double getTotalBTC(const char *BitCoinWallet) { //Setup URLs strcpy( url_Balence, url_Balance_base ); strcat( url_Balence, BitCoinWallet ); JsonObject\u0026amp; root_Balance = jsonBuffer_Balance.parseObject( getJsonFromUrl(url_Balence) ); double total_balance_btc = 0.0; if (root_Balance.success()) { double balances[8]; int algos[8]; for (int i = 0; i\u0026lt;8; i++) { algos[i] = root_Balance[\u0026#34;result\u0026#34;][\u0026#34;stats\u0026#34;][i][\u0026#34;algo\u0026#34;]; const char* balchar = root_Balance[\u0026#34;result\u0026#34;][\u0026#34;stats\u0026#34;][i][\u0026#34;balance\u0026#34;]; balances[i] = strtod(balchar, NULL); Serial.print(balchar); Serial.println(balances[i]); total_balance_btc += balances[i]; } } return total_balance_btc; } Verilerin ekranda gösterilmesi Çekilen veriler aşağıdaki fonksiyon yardımıyla ekranda sırasıyla gösteriliyor. Her bir frame 2 saniye ekranda durup sonraki frame geçecek şekilde bir yapı kurdum.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 void frameLoop(double currency, double totol_balance_btc, double total_balance) { //currency delay(2000); char currency_line[30]; dtostrf(currency,0, 2, currency_line); sprintf(currency_line,\u0026#34;%s %s\u0026#34;, currency_line, \u0026#34; $\u0026#34;); display.clear(); display.drawString(0 , 0, \u0026#34;1 BTC:\u0026#34;); display.drawString(0 , 20, currency_line); display.display(); // total dollar delay(2000); char total_balance_line[30]; dtostrf(total_balance,0, 8, total_balance_line); sprintf(total_balance_line,\u0026#34;%s %s\u0026#34;, total_balance_line, \u0026#34; $\u0026#34;); display.clear(); display.drawString(0 , 0, \u0026#34;Total:\u0026#34;); display.drawString(0 , 20, total_balance_line); display.display(); // total btc delay(2000); char totol_balance_btc_line[30]; dtostrf(totol_balance_btc,0, 8, totol_balance_btc_line); sprintf(totol_balance_btc_line,\u0026#34;%s %s\u0026#34;, totol_balance_btc_line, \u0026#34; BTC\u0026#34;); display.clear(); display.drawString(0 , 0, \u0026#34;Total:\u0026#34;); display.drawString(0 , 20, totol_balance_btc_line); display.display(); } Şimdilik bu proje için yazacaklarım bu kadar. Ayrıntılı bilgi için mesaj atabilirsiniz. Görüşmek üzere.\n","permalink":"https://mozanunal.com/2017/07/bitcoin-madencileri-icin-online-dashboard/","summary":"\u003cp\u003e\u003cstrong\u003eHerkes merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBitcoin son dönemlerin popüler konularından birisi. Aslında genel olarak crypto\ncurrency son zamanlarda çok popüler. Peki nedir bu kavramlar? Crypto currency\ngüvenliği şifreleme teknojileriyle sağlanan sanal para birimleridir. Her gün bir\nyeni bir tür crypto currency ortaya çıkıyor. Bunlar arasında en geçerli olanı\nise bitcoin. Sanırım popülerliği en eskilerinden biri olmasından ve anlık olarak\nüretimi sınırlayabilen ilki olmasından geliyor. Bahsetmek istediğim 3. kavram\nise bit coin mining: Yüksek hesaplama gücü kullanarak bitcoin üretebilmeniz\nmümkün. Bitcoin alışverişlerinin geçerli olması için bir şifre ile onaylanması\ngerekiyor. Bu şifreyi de bir hash çözerek oluşturuyorsunuz ve bunun karşılığında\nsistem sizi bitcoin ile ödüllendiriyor. Bu amaçla bir sürü insan sağlan ekran\nkartları alıp bitcoin tarlaları kurdular ve bu işten para kazanıyorlar. Tabi\naklınıza, bitcoinin dünyaya katkısı nedir ya da ne kadar riskli, yatırım yapılır\nmı? gibi türlü türlü farklı açılardan sorular gelebilir. Ama malesef ben bu\nkonuda uzman değilim ve daha nedir sorusuna bile tam olarak cevap vermek çok\nzor.\u003c/p\u003e","title":"[TR] Bitcoin Madencileri için Online Dashboard"},{"content":"Hi\nIn this post, the Pmod microphone driver which is written in Verilog for Zynq boards is discussed. The driver is developed for Digilent Design Competition 2017. We have a project which microphone array is used. Therefore we have to get data from Pmod Mic also 5 of them should work synchronously. The microphone is sampled with an external ADC and this ADC is using basic SPI for communication. This module should be added to main FPGA code and you should make the connections required. clk/16 sample rate is succeeded for the microphone. clk input frequency should select according to required sampling rate for the microphone. SS can be used as out enable also. You can ask any question directly to me if you have a problem with the driver. See you\u0026hellip;\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 `timescale 1ns / 1ps //ADCS747x 1-MSPS, 12-Bit, 10-Bit, and 8-Bit A/D Converters module pmodMic3( input clk, input miso, output sck, output reg ss, output reg [15:0] out ); reg [31:0] clkCounter; reg [15:0] outBuffer; assign sck = clk; initial clkCounter = 0; initial ss = 0; always @(posedge clk) begin if (clkCounter \u0026lt; 16) begin outBuffer[15-clkCounter] \u0026lt;= miso; clkCounter = clkCounter + 32\u0026#39;d1; end else if (clkCounter == 16) begin out \u0026lt;= outBuffer; clkCounter = clkCounter + 32\u0026#39;d1; end else if (clkCounter == 17) begin clkCounter = 32\u0026#39;d0; end end always @(negedge clk) begin if (clkCounter == 16) begin ss \u0026lt;= 1\u0026#39;b1; end else if (clkCounter == 0) begin ss \u0026lt;= 1\u0026#39;b0; end end endmodule Download from here\n","permalink":"https://mozanunal.com/2017/07/pmod-microphone-driver/","summary":"\u003cp\u003e\u003cstrong\u003eHi\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eIn this post, the Pmod microphone driver which is written in Verilog for Zynq\nboards is discussed. The driver is developed for Digilent Design\nCompetition 2017. We have a project which microphone array is used. Therefore we\nhave to get data from Pmod Mic also 5 of them should work synchronously. The\nmicrophone is sampled with an external ADC and this ADC is using basic SPI for\ncommunication. This module should be added to main FPGA code and you should make\nthe connections required. clk/16 sample rate is succeeded for the microphone.\nclk input frequency should select according to required sampling rate for the\nmicrophone. SS can be used as out enable also. You can ask any question directly\nto me if you have a problem with the driver. See you\u0026hellip;\u003c/p\u003e","title":"PMod Microphone Driver"},{"content":"Herkese Merhabalar,\nGoogle bir kaç senedir tüm dünyada programlama ve algoritmalar üzerine bir yarışma düzenliyor. Bu yarışma kapsamında, yarışmanın katılımcılarına karmaşık algoritmik problemler veriliyor ve istenilen data kümeleri için yine verilen formatta sonuçlar oluşturacak algoritmalar yazılması gerekiyor. Son olarak bu sonuç dosyaları Google\u0026rsquo;ın sistemine yükleniyor ve skor hesaplanıyor. Yarışma 2 aşamadan oluşuyor 1. aşama online eleme. İkinci aşama ise ilk 30\u0026rsquo;a giren gruplar bir merkezde yarışıyor. Ben de yarışmaya 2016 ve 2017 yıllarında katıldım. Bu yazıda 2017 yılındaki online eleme sorusu ve pratik sorusu hakkında paylaşımlar yapmak istiyorum. Bu arada bu soruları 4 saat içerisinde çözememiz gerekiyor bu nedenle kodlar hızlı yazıldı hata içerebilir fakat her iki kod da google\u0026rsquo;ın sisteminde oldukça iyi puanlar alıyordu.\n*Yarışmada yazdığımız çözümlere yarışma sorularına ve örnek datalara bu bağlantıdan ulaşabilirsiniz\nPratik Sorusu: Pizza İlk soru \u0026ldquo;Pizza\u0026rdquo; sorusu. Bu soruda bir pizzayı istenilen maddelerden en az içerek şekilde parçalamamız isteniyor. Amaç pizzanın mümkün olduğunca fazla kısmını kullanmak. Pizzamız dikdörtgen ve ilk kısımda pizza sınıfı oluşturuluyor. Bunun için dosyadan ilk satır okunuyor ve bu satır, sütun ve içerik bilgisi dosyadan \u0026lsquo;parse\u0026rsquo; edilip sınıfıun özellikleri olarak bir matrise kopyalanıyor. Kodun devamında ise belirlenen özelliklerde dilimler oluşturmak üzerine. Dilim geçerli bir dilim mi? Dilim içerisindeki domates, mantar sayısı kaç şeklinde sorulara cevap veren methodlar var. Dilim hakkında verileri alan fonksiyonlar eklendikten sonra algoritmayı oluşturduk. Amacı en köşeden başlayarak gerekli dilimi oluşturduktan sonra sonraki dilime geçiyor. Daha sonra ikinci bir tur atıp genişletilebilecek dilimlere göz atıyor. Ve eğer dilim genişletilebilir durumdaysa genişletiyor pizzanın daha büyük bir kısmını kullanabilmek için. \u0026lsquo;Commit\u0026rsquo; fonksiyonu ile de değişlikler matrise kaydediliyor. Böylece zaten kullanımda olan parçalar diğer dilimlerde kullanılamıyor. İkinci tur dolaşımda anlık olarak o dilimi \u0026lsquo;decommit\u0026rsquo; yapıp o çevrede daha büyük bir dilim oluşturmaya çalışıyor. Son olarak başarı oranını hesaplayan bir fonksiyon var. Eğer algoritma üzerinde değişiklik yaparsanız bu fonksiyonu kullanarak performansını deneyebilirsiniz.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 class pizza: def __init__(self, file): f = open(file, \u0026#39;r\u0026#39;) fline = f.readline() [R, C, L, H] = fline.split(\u0026#39; \u0026#39;) self.L = int(L) self.H = int(H) self.R = int(R) self.C = int(C) self.Matrix = [] self.Matrix2 = [] self.result = [] self.resultS = [] for index, line in enumerate(f): self.Matrix.append([]) self.Matrix2.append([]) for i in range(0, self.C): self.Matrix[index].append(line[i]) self.Matrix2[index].append(False) def calculate(self): # print(\u0026#39;Calculating\u0026#39;) for i in range(0, self.R): for j in range(0, self.C): if self.Matrix2[i][j] is False: self.trycreateSlice(i, j) for index,curSlice in enumerate(self.result): self.decommitResult(curSlice) for i in [3,2,1,0]: for j in [3,2,1,0]: trySlice = slice(curSlice.r1, curSlice.c1, curSlice.r2 + i, curSlice.c2 + j) if self.testSlice(trySlice) is True: #print \u0026#39;updated\u0026#39; self.result[index].r1 = trySlice.r1 self.result[index].c1 = trySlice.c1 self.result[index].r2 = trySlice.r2 self.result[index].c2 = trySlice.c2 for i in range(trySlice.r1, trySlice.r2 + 1): for j in range(trySlice.c1, trySlice.c2 + 1): self.Matrix2[i][j] = True break def trycreateSlice(self, r, c): # print(r,c),\u0026#39;start\u0026#39; for i in range(0, 15): for j in range(0, 15): trySlice = slice(r, c, r + i, c + j) if self.testSlice(trySlice) is True: # print \u0026#39;finded\u0026#39; self.commitResult(trySlice) break return (r, c) def testSlice(self, slice): test = False if (((slice.r2 - slice.r1 + 1) * (slice.c2 - slice.c1 + 1)) \u0026gt; self.H) | ((slice.r2 + 1) \u0026gt; self.R) | ((slice.c2 + 1) \u0026gt; self.C): # print \u0026#39;\u0026gt;boundries\u0026#39; a = 5 else: tNum, mNum = self.getNumbers(slice) avaible = self.getAvaible(slice) if avaible is True: if(mNum \u0026gt;= self.L) \u0026amp; (tNum \u0026gt;= self.L): test = True else: # print \u0026#39;not Avaible\u0026#39; a = 5 return test def getAvaible(self, slice): avaible = True for i in range(slice.r1, slice.r2 + 1): for j in range(slice.c1, slice.c2 + 1): if self.Matrix2[i][j] == True: avaible = False return avaible def getNumbers(self, slice): tNum = 0 mNum = 0 for i in range(slice.r1, slice.r2 + 1): for j in range(slice.c1, slice.c2 + 1): if self.Matrix[i][j] == \u0026#39;T\u0026#39;: tNum += 1 elif self.Matrix[i][j] == \u0026#39;M\u0026#39;: mNum += 1 return tNum, mNum def commitResult(self, slice): self.result.append(slice) # print \u0026#39;done\u0026#39;,str(r1)+\u0026#34; \u0026#34;+str(c1)+\u0026#34; \u0026#34;+str(r2)+\u0026#34; \u0026#34;+str(c2) for i in range(slice.r1, slice.r2 + 1): for j in range(slice.c1, slice.c2 + 1): self.Matrix2[i][j] = True def decommitResult(self, slice): # print \u0026#39;done\u0026#39;,str(r1)+\u0026#34; \u0026#34;+str(c1)+\u0026#34; \u0026#34;+str(r2)+\u0026#34; \u0026#34;+str(c2) for i in range(slice.r1, slice.r2 + 1): for j in range(slice.c1, slice.c2 + 1): self.Matrix2[i][j] = False def convertRestultString(self): for slice in self.result: self.resultS.append(str(slice.r1) + \u0026#34; \u0026#34; + str(slice.c1) + \u0026#34; \u0026#34; + str(slice.r2) + \u0026#34; \u0026#34; + str(slice.c2)) def printSucces(self): trueC = 0 falseC = 0 for i in range(0, self.R): for j in range(0, self.C): if self.Matrix2[i][j] == True: trueC += 1 else: falseC += 1 print \u0026#34;Score: \u0026#34;, trueC, \u0026#34; / \u0026#34;, trueC+falseC class slice: def __init__(self,r1,c1,r2,c2): self.r1 = r1 self.c1 = c1 self.r2 = r2 self.c2 = c2 mypizza = pizza(\u0026#39;medium.in\u0026#39;) # print mypizza.Matrix # print mypizza.Matrix2 mypizza.calculate() mypizza.convertRestultString() s = str(len(mypizza.resultS))+\u0026#34;\\n\u0026#34; for res in mypizza.resultS: s += res + \u0026#34;\\n\u0026#34; file = open(\u0026#34;medium.txt\u0026#34;,\u0026#34;w\u0026#34;) file.write(s) file.close() mypizza.printSucces() Online eleme sorusu: Streaming Videos Bu soruda ise video izleme gecikmesini azaltmak için videoları \u0026lsquo;cache\u0026rsquo; sunuclara yerleştirmemiz isteniyor. Yüksek puan almak için toplam gecikme süresi minimum olmalı. Bu kapsam da ilk aşamada gerekli sınıflar oluşturuldu. Daha sonrasında bu sınıflar arasında bağlantılar oluşturuldu. Algoritmanın amacı herhangibir bir cache serverın bütün videoları için latency hesaplayıp sonra bunları skorlayarak bir optimizasyon yapmak. Burda tabi bağlantıları yapmak biraz zor oldu benim açımdan. Pizza sorusuyla karşılaştırınca çok daha fazla farklı sınıf olduğunu farketmişsiniz. Burda çözümü anlatmanın çok bir anlamı olmadığını düşünüyorum. Daha çok yarışma hakkında bir kaç izlenimimden bahsetmek isterim. Yarışmada farkettiğiniz üzere aslında tam olarak çözümü belli olmayan sorular soruluyor. Daha doğrusu mutlak doğru sonuç var ama onu hesaplamak imkansız bir seviyede. Yani Brute force ile neredeyse sonsuz olasılıkla karşı karşıya kaldığımız sorular soruluyor. Lütfen soruları çözerken hep onu dikkat alın. Sürekli algoritmanınızın karmaşıklığına dikkat ederek geliştirin. Ben de bu konuda yeterince tecrübeli olmadığım için bir kaç kere büyük data kümelerinde sonsuz işleme doğru giden algoritmalar yazdım. İkinci önerim ise kesinlikle verilen datalara bakarak çözümünüzü üretin. Çünkü bütün sorularda genelde 3 4 adet farklı data kümesi verilliyor ve genelde her bir data farklı bir şeyi ölçüyor. Biri için geliştirdiğiniz algoritma diğerlerine uymayabiliyor. Bugünlük bu kadar daha ayrıntılı sorularınızı her zaman sorabilirsiniz. Görüşmek üzere\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 class scoring: def __init__(self,video,score): self.video= video self.score = score def __lt__(self, other): return self.score \u0026gt; other.score + 5 class connection: def __init__(self,ep,cacheNum,latency): self.ep = ep self.cacheNum = cacheNum self.latency = latency class video: def __init__(self, id , size): self.id = id self.size = size class cache: def __init__(self, id , capacity): self.id = id self.capacity = capacity self.videos = [] self.endpoints = [] def addVideo(self,video): if self.capacity \u0026gt;= video.size: self.videos.append(video) self.capacity = self.capacity - video.size return True else: return False class endpoint: def __init__(self,id,latencyDataC,connectionNumber): self.id = id self.latencyDataC= latencyDataC self.connections = [] self.requests = [] class request: def __init__(self,reqNumber, videoID, endpointID,count): self.reqNumber = reqNumber self.videoID = videoID self.endpointID = endpointID self.count = count class solver: def __init__(self, file): self.videos = [] self.eps = [] self.requests = [] self.caches= [] f = open(file, \u0026#39;r\u0026#39;) fline = f.readline() [V, E, R, C, X] = fline.split(\u0026#39; \u0026#39;) self.videoCount = int(V) for indexC in range(0,int(C)): c = cache(indexC, int(X)) self.caches.append(c) fline = f.readline() for index, size in enumerate(fline.split(\u0026#39; \u0026#39;)): v = video(index,int(size)) self.videos.append(v) for currentEpID in range(0,int(E)): fline = f.readline() [latencyDataC, connectionNumber] = fline.split(\u0026#39; \u0026#39;) ep = endpoint(currentEpID,int(latencyDataC),int(connectionNumber)) self.eps.append(ep) for i in range(0,int(connectionNumber)): [cNUm,latency] = f.readline().split(\u0026#39; \u0026#39;) c = connection(ep,int(cNUm),int(latency)) ep.connections.append(c) self.caches[int(cNUm)].endpoints.append(self.eps[currentEpID]) for curReqId in range(0,int(R)): [reqVideoID,reqEpID,reqCount] = f.readline().split(\u0026#39; \u0026#39;) r = request(curReqId,int(reqVideoID),int(reqEpID),int(reqCount)) self.requests.append(r) self.eps[int(reqEpID)].requests.append(r) def getvideosofcache(self,cache): #print \u0026#34;cache id:\u0026#34;, cache, scoreList = [] for i in self.videos: s = scoring(i,0) scoreList.append(s) for ep in cache.endpoints: for req in ep.requests: curLat = self.getlatency(cache,ep) score = (req.count*(ep.latencyDataC-curLat)) #print \u0026#34;videoid : \u0026#34;, req.videoID, \u0026#34;ep: \u0026#34;, ep.id, \u0026#34;req count\u0026#34;, req.count, \u0026#34;dc latiency: \u0026#34;, ep.latencyDataC, \u0026#34;connect latency\u0026#34;,curLat, \u0026#34;puan\u0026#34;, score) scoreList[req.videoID].score += score #print \u0026#34;videoid : \u0026#34;, req.videoID, scoreList[req.videoID].score scoreList.sort() #for a in scoreList: #print a.video.id, a.score, a.video.size return scoreList def getlatency(self,cache,endpoint): ali = 0 for i in endpoint.connections: if i.cacheNum == cache.id: ali = i.latency break return ali def solve(self): for curCache in self.caches: print curCache.id scoreList = mysolver.getvideosofcache(curCache) for curVideo in scoreList: if curVideo.score == 0: break curCache.addVideo(curVideo.video) def result(self): result = str(len(self.caches)) for curCache in self.caches: result += \u0026#34;\\n\u0026#34;+str(curCache.id) for curVideo in curCache.videos: result += \u0026#34; \u0026#34;+str(curVideo.id) #print result file = open(\u0026#34;videos_worth_spreading.txt\u0026#34;,\u0026#34;w\u0026#34;) file.write(result) file.close() mysolver = solver(\u0026#39;videos_worth_spreading.in\u0026#39;) mysolver.solve() mysolver.result() ","permalink":"https://mozanunal.com/2017/07/google-hash-code-2017/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar\u003c/strong\u003e,\u003c/p\u003e\n\u003cp\u003eGoogle bir kaç senedir tüm dünyada programlama ve algoritmalar üzerine bir\nyarışma düzenliyor. Bu yarışma kapsamında, yarışmanın katılımcılarına karmaşık\nalgoritmik problemler veriliyor ve istenilen data kümeleri için yine verilen\nformatta sonuçlar oluşturacak algoritmalar yazılması gerekiyor. Son olarak bu\nsonuç dosyaları Google\u0026rsquo;ın sistemine yükleniyor ve skor hesaplanıyor. Yarışma 2\naşamadan oluşuyor 1. aşama online eleme. İkinci aşama ise ilk 30\u0026rsquo;a giren gruplar\nbir merkezde yarışıyor. Ben de yarışmaya 2016 ve 2017 yıllarında katıldım. Bu\nyazıda 2017 yılındaki online eleme sorusu ve pratik sorusu hakkında paylaşımlar\nyapmak istiyorum. Bu arada bu soruları 4 saat içerisinde çözememiz gerekiyor bu\nnedenle kodlar hızlı yazıldı hata içerebilir fakat her iki kod da google\u0026rsquo;ın\nsisteminde oldukça iyi puanlar alıyordu.\u003c/p\u003e","title":"[TR] Google Hash Code 2017"},{"content":"Herkese Merhabalar,\nBugünkü yazımda arkadaşlarımla katıldığım Nasa Space Apps Challenge 2017 hakkında bir paylaşımda bulunacağım. Bu hackhathon Nasa tarafından dünya genelinde düzenleniyor. 24 saat içerinde önceden yayınlanan sorunlardan birine çözüm bulmamız isteniyor. Tüm dünya genelinde aynı gün bu problemlere çözüm aranıyor. Biz de Koç Üniversitesi IEEE topluluğunca organize edilen yarışmanın İstanbul şubesinden katıldık. Öncellikle şunu söylemem gerek organizasyon oldukça güzeldi, hiç bir aksaklık yaşanmadan çok keyifli ve eğlenceli bir 24 saat yaşadık. Burdan IEEE Koç ailesine teşekkürlerimi iletiyorum.\nYarışma hakkında konuşmaya devam edecek olursam. Yarışmanın ilk saatlerini konuya karar verme ve 24 saat boyunca neler yapacağımızı planlayarak geçti. Yarışmayı bir kaç senedir takip ediyoruz. Bu seneki \u0026ldquo;challenge\u0026quot;ları görünce biraz şaşırdık. Çünkü genellikle yer bilimleri üzerine ve veri işleme, anlamlandırmaya yönelik konulardı. Bizim takımımıza pek hitap etmediği için IOT tabanlı bir şeyler yapabileceğimiz aynı zamanda mekanik, elektronik dizayn yapabileceğimiz konular seçmeye çalıştık. Bu düşüncelerle * Let\u0026rsquo;s go to the Beach* konusunu seçtik. Bu kampsamda bulut tabanlı her bir kişinin ayrı ayrı, kişisel UV ışın alımını takip edip ona öneriler verebilen bir sistem mimarisi üzerine çalıştık. Sistemin ayrıntılarına yazının devamından ulaşabilirsiniz. Bu arada projemiz birincilik ödülüne layık görüldü. Bu da beni ayrıca çok mutlu etti. Proje ile alakalı sorunlarınız için ulaşabilirsiniz. Tekrar görüşmek üzere\nIt is a project developed for Nasa Space Apps Challenge 2017. Detailed information can be foud from below\nThe Challenge Let\u0026rsquo;s go to the Beach! Build a tool for beach-goers to monitor for hazards and to alert them of precautionary measures for protection on their swim- and surf-filled adventures!\nInternet Of Beach Satisfy your curiosity about beaches to go! IoB wristband warns you about dangerous amounts of UV exposure with respect to your skin sensitivity, age and how much actual radiation you received.\nWe designed a web application, an IOB wristband a gateway and a server. With our web application, many information about the beach can be learned. Required informations are taken from openweather api and are showed to users with open board dashboard. The time of the UV exposure of the person is measured with IOT wristband. The required informations and energy are provided from solar panel. RGB leds warn you with processing data from the cloud. We also designed a gateway which is shaped as a buoy and placed it to the beaches to connect IOB wristband to cloud. More reliable data are obtained with processing all these data in cloud.\nTo view the presentation:\nTo view the full source code:\nTo view the photos and all other documents (PCBs, CAD files):\nWho Are We? We are participating the competition from Istanbul, TURKEY. All of us studying at Istanbul Technical Univercity.\nMurat Gokcen Aerospace Engineering Mehmet Ozan Unal Electronics and Communication Engineering Emir Can Yaman Aerospace Engineering Electornics and Communicatin Engineering Ertugrul Cinar Aeronautical Engineering Control and Automation Engineering It\u0026rsquo;s hard to introduce everybody one by one. But in a nutshell we are enthusiast about space, electronic, software and all flying things. Also two members of our team joinder at 2015 Nasa Space Apps Challange Istanbul and they were selected as People\u0026rsquo;s choice with Christopher\nWhat is The Challange? Let\u0026rsquo;s go to the Beach! According to the World Health Organization [1], overexposure to sunlight can cause harm to our skin, our eyes, and our immune systems. In fact, protecting ourselves from UV damage, for example by using hats, sunglasses, and sunscreen, can prevent four out of five cases of skin cancer.\nOur soution covers most of challange as below.\nPredict their sun exposure Suggest alternative times of the day, or days when sun exposure levels are lower Warn users of presence of HABs in local beaches, and direct them to safer regions, where available Add other precautionary and safety alerts as you see fit! What is The Solution? APP + IoT Band + Cloud!\nIoT Band\nGateway between IoT Band and Cloud Server Cloud Server How its Working? For better describition, you can watch project video.\nThank you for your time We are to happy to participate this contents. We hope we will join next year again. By the way, you can see technologies which we used while hackathon process.\nI want to finish with a quote from Richard Bronson.\nAbove all, we want to create something we\u0026rsquo;re proud of.\n[1] “Sun Protection.” Ultraviolet radiation and the INTERSUN Programme. World Health Organization. Website Accessed March 2017. https://www.who.int/uv/sun_protection/en/\n","permalink":"https://mozanunal.com/2017/06/internet-of-beaches/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBugünkü yazımda arkadaşlarımla katıldığım Nasa Space Apps Challenge 2017\nhakkında bir paylaşımda bulunacağım. Bu hackhathon Nasa tarafından dünya\ngenelinde düzenleniyor. 24 saat içerinde önceden yayınlanan sorunlardan birine\nçözüm bulmamız isteniyor. Tüm dünya genelinde aynı gün bu problemlere çözüm\naranıyor. Biz de Koç Üniversitesi IEEE topluluğunca organize edilen yarışmanın\nİstanbul şubesinden katıldık. Öncellikle şunu söylemem gerek organizasyon\noldukça güzeldi, hiç bir aksaklık yaşanmadan çok keyifli ve eğlenceli bir 24\nsaat yaşadık. Burdan IEEE Koç ailesine teşekkürlerimi iletiyorum.\u003c/p\u003e","title":"Internet of Beach"},{"content":"This is a project develop for Tech4Culture Hackhathon 2017.\nProject features:\nYou can share artworks You can follow artist who you like You can explore and experience artworks with augmented reality You can follow art foundations for art and culture activities Future Improvements\nSupporting artist about scanning and sharing of their artworks. Expanding supported artworks for augmented reality ( showing performing art as animation) _NOP Team Mehmet Ozan Unal Ali Sivgin Ertugrul Cinar\n","permalink":"https://mozanunal.com/2017/04/art-sharing-platform-1521976119976/","summary":"\u003cp\u003eThis is a project develop for Tech4Culture Hackhathon 2017.\u003c/p\u003e\n\u003cp\u003eProject features:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eYou can share artworks\u003c/li\u003e\n\u003cli\u003eYou can follow artist who you like\u003c/li\u003e\n\u003cli\u003eYou can explore and experience artworks with augmented reality\u003c/li\u003e\n\u003cli\u003eYou can follow art foundations for art and culture activities\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg alt=\"image\" loading=\"lazy\" src=\"/images/1521977188211.png\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"image\" loading=\"lazy\" src=\"/images/1521977228493.png\"\u003e\u003c/p\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube-nocookie.com/embed/agt2mLnlgAk?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003cp\u003eFuture Improvements\u003c/p\u003e","title":"Artwork Sharing Platform with Augmented Reality"},{"content":"Herkese Merhabalar,\nBildiğiniz gibi gömülü sistemlerde kullanılabilecek basit bir DSP kütüphanesi geliştirmeye çalışıyorum son olarak FIR filtreleme özelliğini bu kütüphaneye ekledim. FIR filtre ile alçak geçiren, yüksek geçiren, band geçiren veya durduran filtreler tasarlayabilirsiniz. FIR filtreler yapısı gereği hep stabil filtrelerdir. Bu nedenle bir kararlılık analizi gerektirmeden kullanılabilirler.\nAyrıca wiki sayfasını kesinlikle ziyaret etmenizi tavsiye ederim orada Matlab veya Octave kullanarak nasıl filtreyi tasarlayacağınız. Filtreyi nasıl kullanacağınız ve karakteristiğini nasıl görselleyebileceğinize kadar bir çok bilgi bulunmakta. Ziyaret etmek için tıklayın.\nProjenin github linkine buradan ulaşabilirsiniz.\nArduino ile Performansı ![](https://2.bp.blogspot.com/-XfgXk47zxak/WOawaTUJ0OI/AAAAAAAAiuk/2kEmqpCDCp0m3gfc1IsSw-ubLWcxtwm1wCLcB/s720 /Capture.PNG)\nÖrnek kod\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 /*This is a signal sum of 800 hz and 3.2 khz sine waves which sampled in 10khz and 32 of this samples are create a data array.(input signal) In this example input signal is filtered with 46 points fir filter. Filter is designed as low pass filter and filter coeficient calculated at Octave more info https://github.com/mozanunal/SimpleDSP/wiki/FIR */ #include \u0026#34;simpleDSP_fir.h\u0026#34; float coef[46]= { 0.00113053589111100, 0.00101072486672204, 0.000468847235288906, 0.000603489038578611, -0.00208429064928862, -0.00340892103405782, -0.00362003403497889, -0.00179251511006564, 0.00229274890344763, 0.00758093034996730, 0.0117041456801663, 0.0117198866352666, 0.00550311571071171, -0.00673606239661105, -0.0215570909070923, -0.0326442238558300, -0.0325783280789586, -0.0155583311041979, 0.0199164513221244, 0.0695391190116097, 0.123656990515743, 0.169767912370886, 0.196291877716615, 0.196291877716615, 0.169767912370886, 0.123656990515743, 0.0695391190116097, 0.0199164513221244, -0.0155583311041979, -0.0325783280789586, -0.0326442238558300, -0.0215570909070923, -0.00673606239661105, 0.00550311571071171, 0.0117198866352666, 0.0117041456801663, 0.00758093034996730, 0.00229274890344763, -0.00179251511006564, -0.00362003403497889, -0.00340892103405782, -0.00208429064928862, -0.000603489038578611, 0.000468847235288906, 0.00101072486672204, 0.00113053589111100 }; int input[255] = { 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03, -115.808, -866.986, -1567.2, 541.587, 618.034, -263.146, 1504.41, 1504.41, -263.146, 618.034, 541.587, -1567.2, -866.986, -115.808, -1618.03, -613.161, 1031.37, -101.597, 450.527, 2000, 450.527, -101.597, 1031.37, -613.161, -1618.03 }; FIR fir1; long startTime; long calcTime; void setup() { Serial.begin(9600); initFIR(\u0026amp;fir1, 46, coef); Serial.print(\u0026#34;Initiliaze finished\u0026#34;); for(int i = 0; i\u0026lt;255; i++) { startTime = micros(); float a ; a = filtFIR(\u0026amp;fir1,input[i]); calcTime = micros()-startTime; Serial.println(a); Serial.print(\u0026#34;Total calculation time: \u0026#34;); Serial.println(calcTime); } } void loop() { } ","permalink":"https://mozanunal.com/2017/04/simpledsp-fir-filtreleme-ozelligi/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003cbr\u003e\nBildiğiniz gibi gömülü sistemlerde kullanılabilecek basit bir DSP kütüphanesi\ngeliştirmeye çalışıyorum son olarak FIR filtreleme özelliğini bu kütüphaneye\nekledim. FIR filtre ile alçak geçiren, yüksek geçiren, band geçiren veya\ndurduran filtreler tasarlayabilirsiniz. FIR filtreler yapısı gereği hep stabil\nfiltrelerdir. Bu nedenle bir kararlılık analizi gerektirmeden kullanılabilirler.\u003c/p\u003e\n\u003cp\u003eAyrıca wiki sayfasını kesinlikle ziyaret etmenizi tavsiye ederim orada Matlab\nveya Octave kullanarak nasıl filtreyi tasarlayacağınız. Filtreyi nasıl\nkullanacağınız ve karakteristiğini nasıl görselleyebileceğinize kadar bir çok\nbilgi bulunmakta.\n\u003ca href=\"https://github.com/mozanunal/SimpleDSP/wiki/FIR\"\u003eZiyaret etmek için tıklayın.\u003c/a\u003e\u003c/p\u003e","title":"[TR] SimpleDSP: FIR filtreleme özelliği eklendi"},{"content":"Merhaba arkadaşlar,\nBugünkü yazımda geçen senelerde üzerinde uzun zaman harcadığım fakat tamamlayamadığım bir konu olan otopilot yapmak üzerine edindiğim tecrübeleri anlatmak istiyorum. Yazıya başlamadan önce bu çalışmaların tamamını beraber yaptığım Bahadır Gökçeaslan teşekkür etmeyi bir borç bilirim.\nEvet otopilot aslında benim anlatacağım bölüme kıyasla biraz fazla geniş bir kavram oldu. Zira malesef proje uçuş kontrolcüsü aşamalarında kaldı. Bir soru ile başlayalım. Bir uçuş kontrolcüsü nedir? Bir uçuş kontrolcüsü temel olarak havada uçan bir aracın yere göre açılarının istenilen şekilde olmasını sağlayan sensör ve hareketli mekanizmalar bütünüdür. Aslında yere göre açılarla sınırlamak çok mantıklı değil. Bir hava aracının yükseliğinin sabit olması veya istenilen hızda istenilen konumda kalmasını sağlamak da bunun işidir. Fakat bu projede, bir Quadcopter uçuş kontrolcüsü olarak tasarlanmış olan bu yapıda amaç quadcopterin yere göre açılarını kumandadan gelen girdilere göre kontrol etmekti.\nPeki bu IMU açılar nasıl kontrol edilir? Hepinizin bildiği gibi bi quadcopter yere itki veren 4 adet motordan oluşan bir mekanizma. Ama bir quadcopteri havada tutmak göründüğü kadar kolay değildir. Basit olarak yapılan işlem quadcopter motorlanının hızını istenilen açıda kalacak şekilde kontrol etmektir. Bunun için de 2 temel yapı kullanılır. IMU denen bu açıları ölçen sensörler ve PID denilen kontrol algoritması. Bu noktada eğer bu kavramlar tanıdık gelmediyse imu hakkındakı şu yazımı ve pid hakkındaki bu yazımı okumanızı tavsiye ederim. Kodu inceleyecek olursanız projemizi belli parçalara ayırmış durumdayız. Bu parçalar şunlardır:\nKumandadan girdilerin alınması IMU açılarının güncellenmesi Girdi değerlerine ulaşmak için gerekli motor hızlarının pid algotirmasıyla hesaplanması Telemetri datasının yollanması Ben bu yazıda daha çok 3. madde üzerinde duracağım. Öncellikle bir eksende kontrolü ele alalım. Bir eksende kontrol için yapılması gereken işlem şöyledir:\nImu üzerinden şuanki açı ve ve kumandadan o eksen için istenen açı alınır. ( Otopilotlu bir yapıda istenen açıyı, verilen koordinata gitmek için kendisi hesaplar. ) Şu anki açı hatası Geçmişteki açı hatası toplamı Gelecekte oluşabilecek açı hatası tahmini Üsteki 3\u0026rsquo;ü kullanılarak hedef açı için gerekli açısal hız bulunur. Şuanki açısal hız hatası Geçmişsteki açısal hız hatası toplamı Gelecekte oluşabilecek açısal hata Üsteki 3\u0026rsquo;ü kullanılarak o eksen için pıd çıktısı hesaplanmış olur. Bu şekilde bir eksenin kontrolü için 2 katlı pid işlemi uygulamak gereklidir. Peki 3 eksenin için nasıl bir çözüm kullanmak gerekir. Bunu anlatmak yerine şu 4 satır kodu buraya eklemek istiyorum. (output_ ile başlayanların ilgili eksen ile alakalı pıd çıkışı olduğunu varsayın. )\nBu iki satır sayesinde toplam 6 pid kontrolcüsünden oluşturulan hesaplamalar birleştirilir. Birleştirme esnasındaki işaretlerin mantığını siz de farketmişsinizdir. O eksen için pid etkisi negatif mi pozitif mi? Yani o motorun hızının artması o eksende ne yönde bir hareket sağlar.\nEvet son olarak bizim projemizden bahsedeyim. Ortalıkta uzun yıllardır açık kaynaklı otopilotlar var biz de bunun farkında olmamıza rağmen kendimizi geliştirmek amacıyla bu projeye başladık. Malesef test düzeneklerine ve projenin geliştirilmesine daha sonrasında zaman ayıramadık. Ama dediğim gibi bu konuyla alakalı değerli tecrübelere edindiğimizi düşünüyorum. Belki günün birinde tamamlarız.\nYaptığımız çalışmaların tamamının linki: github.com/mozanunal/SimplePilot\nGenellikle arduino kütüphanelerini kullandığımız için bizim kodumuz performans açısından pek uygun olmadığını düşünüyorum. Ama şuradaki yazıda ardupilot kütüphanelerini kullanarak olayın temelini de anlatarak güzel bir yazı ortaya koymuş bir arkadaşımız var. Benzer şeyler yapmak isterseniz onu kod olarak da referans alabileceğinizi düşünüyorum. İncelemenizi tavsiye ederim. Tekrar görüşmek üzere\u0026hellip;\nwww.facebook.com/itunom\nwww.itunom.com\n","permalink":"https://mozanunal.com/2017/02/multikopterler-icin-otopilot-yapmak/","summary":"\u003cp\u003e\u003cstrong\u003eMerhaba arkadaşlar,\u003c/strong\u003e\u003cbr\u003e\n      Bugünkü yazımda geçen senelerde üzerinde uzun zaman harcadığım fakat\ntamamlayamadığım bir konu olan otopilot yapmak üzerine edindiğim tecrübeleri\nanlatmak istiyorum. Yazıya başlamadan önce bu çalışmaların tamamını beraber\nyaptığım \u003cstrong\u003eBahadır Gökçeaslan\u003c/strong\u003e teşekkür etmeyi bir borç bilirim.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"SimplePilotlogoPNG.png\" loading=\"lazy\" src=\"https://github.com/mozanunal/SimplePilot/blob/master/LOGO/SimplePilotlogoPNG.png?raw=true\"\u003e\u003c/p\u003e\n\u003cp\u003eEvet otopilot aslında benim anlatacağım bölüme kıyasla biraz fazla geniş bir\nkavram oldu. Zira malesef proje uçuş kontrolcüsü aşamalarında kaldı. Bir soru\nile başlayalım. Bir uçuş kontrolcüsü nedir? Bir uçuş kontrolcüsü temel olarak\nhavada uçan bir aracın yere göre açılarının istenilen şekilde olmasını sağlayan\nsensör ve hareketli mekanizmalar bütünüdür. Aslında yere göre açılarla\nsınırlamak çok mantıklı değil. Bir hava aracının yükseliğinin sabit olması veya\nistenilen hızda istenilen konumda kalmasını sağlamak da bunun işidir. Fakat bu\nprojede, bir Quadcopter uçuş kontrolcüsü olarak tasarlanmış olan bu yapıda amaç\nquadcopterin yere göre açılarını kumandadan gelen girdilere göre kontrol\netmekti.\u003c/p\u003e","title":"[TR] Multikopterler için otopilot yapmak"},{"content":"Herkese Merhabalar,\nBu yazımda gömülü sistemler için yazdığım sayısal isaret isleme kütüphanesini tanıtacağım. Kütüphanenin tamamını \u0026ldquo;C\u0026rdquo; kullanarak ve harici bir kütüphaneye bağlı kalmadan yazmayı planlıyorum. Böylece diğer mikrokontolcülerde de rahatça kullanılabilecek. Hatta bilgisayar programlarında bile kolayca eklenip derlenebilecek şekilde projeyi tamamlamak istiyorum. Bu kütüphane kapsamında çözüm sağlamak istediğim konular şunlardır.\nFFT ters FFT Hartley transform FIR filtre IIR filtre Basit \u0026ldquo;moving avarage\u0026rdquo;, \u0026ldquo;smoothing\u0026rdquo; filtreleri Ayrıca her fonksiyon için:\nTeorik olarak yapılan iş Deneme, ölçüm ve filtre katsayısı hesabı için gerekli Matlab veya Octave kodu. Farklı islemcilerle performansı Örnek Grafikler gibi kaynakları hazırlamayı planlıyorum. Proje tamamen açık kaynaklı olarak sürdürülecektir. Siz de github üzerinden projenin herhangi bir aşamasına katkıda bulunabilirsiniz. Projenin ismini \u0026ldquo;SimpleDSP\u0026rdquo; olarak seçtim. Çünkü yapmak istediğim olay Digital Signal Processing olayını gömülü ve gerçek zamanlı sistemlerde kolaylaştırmak ve projelerde basit bir şekilde eklenebilmesini sağlamak. Şu an itibariyle FFT ve ters FFT fonksiyonlarını yazdım arduino kütüphanesi haline getirdim ve örnek kodlarını oluşturdum. Bahsettiğim ayrıntılara aşağıdan ulaşabilirsiniz.\nhttps://github.com/mozanunal/SimpleDSP/wiki/FFT-IFFT\n","permalink":"https://mozanunal.com/2017/01/simpledsp-gomulu-sistemler-icin-dsp/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBu yazımda gömülü sistemler için yazdığım sayısal isaret isleme kütüphanesini\ntanıtacağım. Kütüphanenin tamamını \u0026ldquo;C\u0026rdquo; kullanarak ve harici bir kütüphaneye\nbağlı kalmadan yazmayı planlıyorum. Böylece diğer mikrokontolcülerde de rahatça\nkullanılabilecek. Hatta bilgisayar programlarında bile kolayca eklenip\nderlenebilecek şekilde projeyi tamamlamak istiyorum. Bu kütüphane kapsamında\nçözüm sağlamak istediğim konular şunlardır.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFFT\u003c/li\u003e\n\u003cli\u003eters FFT\u003c/li\u003e\n\u003cli\u003eHartley transform\u003c/li\u003e\n\u003cli\u003eFIR filtre\u003c/li\u003e\n\u003cli\u003eIIR filtre\u003c/li\u003e\n\u003cli\u003eBasit \u0026ldquo;moving avarage\u0026rdquo;, \u0026ldquo;smoothing\u0026rdquo; filtreleri\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAyrıca her fonksiyon için:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTeorik olarak yapılan iş\u003c/li\u003e\n\u003cli\u003eDeneme, ölçüm ve filtre katsayısı hesabı için gerekli Matlab veya Octave kodu.\u003c/li\u003e\n\u003cli\u003eFarklı islemcilerle performansı\u003c/li\u003e\n\u003cli\u003eÖrnek Grafikler\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003egibi kaynakları hazırlamayı planlıyorum. Proje tamamen açık kaynaklı olarak\nsürdürülecektir.\n\u003ca href=\"https://github.com/mozanunal/SimpleDSP/\"\u003eSiz de github üzerinden projenin herhangi bir aşamasına katkıda bulunabilirsiniz.\u003c/a\u003e\nProjenin ismini \u0026ldquo;SimpleDSP\u0026rdquo; olarak seçtim. Çünkü yapmak istediğim olay Digital\nSignal Processing olayını gömülü ve gerçek zamanlı sistemlerde kolaylaştırmak ve\nprojelerde basit bir şekilde eklenebilmesini sağlamak. Şu an itibariyle FFT ve\nters FFT fonksiyonlarını yazdım arduino kütüphanesi haline getirdim ve örnek\nkodlarını oluşturdum. Bahsettiğim ayrıntılara aşağıdan ulaşabilirsiniz.\u003cbr\u003e\n\u003ca href=\"https://github.com/mozanunal/SimpleDSP/wiki/FFT-IFFT\"\u003ehttps://github.com/mozanunal/SimpleDSP/wiki/FFT-IFFT\u003c/a\u003e\u003c/p\u003e","title":"[TR] SimpleDSP: Gömülü Sistemler için DSP Kütühanesi"},{"content":"Herkese Merhabalar,\nBugünkü yazımda nasıl eski bilgisayarınızdan kalan güç kaynağınızı elektronik projelerinizde kullanabileceğiniz güç kaynağına dönüştürebileceğinizi anlatacağım. Özellikle yüksek güç gerektiren projelerde farklı voltajlarda yüksek güç sağlayabilen bu güç kaynaklarının oldukça yararlı olabileceğini düşünüyorum. Hemen hemen herkesin de bir şekilde ıskartaya çıkmış bir bilgisayarı vardır. Eğer güç kaynağı sağlamsa sıfır maliyetle kendinize bir güç kaynağı edinmiş olursunuz.\nBenim elimdeki güç kaynağının çıkışlarını aşağıdan görebilirsiniz. Eski bilgisayarımdan kalan 250 W bir güç kaynağı kendisi. Hali hazırda 3.3 V 5V 12 V ve -12 V çıkışları var. Farklı voltaj ihtiyaçlarına göre regülatörler veya akım koruma devreleri eklenerek güç kaynağı daha işlevsel hale getirilebilir.\nTabi güç kaynağı bilgisayardan çıkarıldığı gibi direk çalışır halde olmuyor sanki bilgisara takılıymış gibi kandırmamız gerek. Bunun için de yeşil kabloyu toprağa çekmeliyiz. Ben o ikisini birbirine lehimledikten sonra bu bağlantıyı bir direnç ve led aracılığıyla 5V bağladım. Böylece hem güç kaynağını açık hale getirdim hem de gücün var olup olmadığının takibini yapabilmek için bir led eklemiş oldum. Bağlantı aşağıdaki fotoğraftaki gibi. Bu bağlantıyı yapdıktan sonra ucu açık kabloları güzelce yalıtmayı unutmayın. Tekrar görüşmek üzere..\n","permalink":"https://mozanunal.com/2016/12/eski-bilgisayar-guc-kaynagn-masaustu/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003cbr\u003e\n       Bugünkü yazımda nasıl eski bilgisayarınızdan kalan güç kaynağınızı\nelektronik projelerinizde kullanabileceğiniz güç kaynağına dönüştürebileceğinizi\nanlatacağım. Özellikle yüksek güç gerektiren projelerde farklı voltajlarda\nyüksek güç sağlayabilen bu güç kaynaklarının oldukça yararlı olabileceğini\ndüşünüyorum. Hemen hemen herkesin de bir şekilde ıskartaya çıkmış bir\nbilgisayarı vardır. Eğer güç kaynağı sağlamsa sıfır maliyetle kendinize bir güç\nkaynağı edinmiş olursunuz.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://2.bp.blogspot.com/-EXt6RrgC7lg/WGAUWvxMZ9I/AAAAAAAAfKQ/FDJd61MfgYAZ4pKE_46vAyzQHT_AN6evgCKgB/s720/IMG_20161224_190300.jpg\"\u003e\u003c/p\u003e\n\u003cp\u003eBenim elimdeki güç kaynağının çıkışlarını aşağıdan görebilirsiniz. Eski\nbilgisayarımdan kalan 250 W bir güç kaynağı kendisi. Hali hazırda 3.3 V 5V 12 V\nve  -12 V çıkışları var. Farklı voltaj ihtiyaçlarına göre regülatörler veya akım\nkoruma devreleri eklenerek güç kaynağı daha işlevsel hale getirilebilir.\u003c/p\u003e","title":"[TR] Eski Bilgisayar Güç Kaynağını Masaüstü Güç Kaynağına Çevirme"},{"content":"Merhaba Arkadaşlar,\nBu projemde nasıl elimizde kalan fazla hoparlörleri bluetooth speakera dönüştürebileceğinizden bahsedeceğim. Geçen yaz bir arkadaşımın 5 +1 ses sisteminin kuvvetlendirici kutusu yanmış böyle olunca da hoparlörler boşa çıkmış ben de bir projede kullanırım diyerek kenara ayırdım. Aklıma sonradan bunları bluetooth hoparlöre dönüştürmek geldi. Direk ses cihazı olarak görünen bluetooth ses alıcılarını araştırmaya başladım. Bir kaç model bulsam da yaklaşık 10 W olan bu hoparlörleri sürecek kadar güç çıkışı vermiyorlardı. Bu nedenle projeye bir de kuvvetlendirici ekledim. Kuvvetlendirici olarak PAM8610 seçtim. Kendisi bir class D güç kuvvetlendiricisi yani en verimli olanlarından. Yüksek verini sayesinde çok az enerji ısıya dönüşüyor ve soğutucu metal parçaya vb ihtiyaç duymuyor. Yaptığım proje ile bu hoparlörleri, bluetooth üzerinden ya da doğrudan kablo ile ses çıkışlarına bağlanabilecek duruma getirmiş oluyorum.\nToparlamak gerekirse proje için gerekli malzemeler:\n1 veya 2 adet hoparlör Pam8610 ses kuvvetlendirici Bluetooth ses alıcı 3.5 mm ses kablosu Breadboard güç kartı olarak satılan DC 12 v girişi olan, usb, 5v ve 3.3v çıkışı olan kartlardan. Hepsini içine koyacağımız kutu İlk olarak görüldüğü gibi PAM8610 üzerine bağlantıları yaptım. Direk ses jack\u0026rsquo;a lehimlemek hiç uygun bir yöntem olmasa da elimde dişisinden olmadığı için başka çarem yoktu. Projeyi yapmak isteyen arkadaşlara almalarını tavsiye ediyorum. Hoparlörlere bağlantı kablosu olarak da düz kablo kullandım. Bu nedenle elektriksel gürültüden etkilenebiliyor onları da en kısa zamanda değiştirmeyi planlıyorum. Ama yakınlarında bir PC adaptörü gibi yüksek elektriksel gürültü üreten şeyler olmadığı sürece ses kalitesi oldukça iyi.\nPAM8610 12 volt ile çalışıyor bu yüzden güç dağıtım kartının güç soketine doğrudan lehimledim. Yalnız bir ayrıntı var + terminali switchden sonraki yere lehimledim böylece sadece düğme ile kapatabiliyorum.\nKutuyu kablolar için yanlarından deldim.\nGüç konnektörünü yukarı bakacak şekilde kutuya sabitledim bu sayede bluetooth ses alıcı direk olarak kutunun dışından usbye bağlayabileceğim.\nYukarıda bahsettiğim bağlantı şekli. Ses kablosu doğrudan bluetooth modulüne gidiyor. Usb sadece güç vermek için kullanılıyor.\nBeslemek için gerekli 12V adaptör. Uygun güç konnektörlü olanlarından seçtim.\nBahsettiğim hoparlörlerden 2 tanesi. Güçlendirici kartımız 15x2 W çıkış verebiliyor. Stereo için uygun.\nPAM8610 çıkışlarını Hoparlörleri evimde kullanmaya başladım bile\u0026hellip; Yeni bir projede görüşmek üzere\u0026hellip;\n","permalink":"https://mozanunal.com/2016/12/diy-bluetooth-speaker/","summary":"\u003cp\u003e\u003cstrong\u003eMerhaba Arkadaşlar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBu projemde nasıl elimizde kalan fazla hoparlörleri bluetooth speakera\ndönüştürebileceğinizden bahsedeceğim. Geçen yaz bir arkadaşımın 5 +1 ses\nsisteminin kuvvetlendirici kutusu yanmış böyle olunca da hoparlörler boşa çıkmış\nben de bir projede kullanırım diyerek kenara ayırdım. Aklıma sonradan bunları\nbluetooth hoparlöre dönüştürmek geldi. Direk ses cihazı olarak görünen bluetooth\nses alıcılarını araştırmaya başladım. Bir kaç model bulsam da yaklaşık 10 W olan\nbu hoparlörleri sürecek kadar güç çıkışı vermiyorlardı. Bu nedenle projeye bir\nde kuvvetlendirici ekledim. Kuvvetlendirici  olarak PAM8610 seçtim. Kendisi bir\nclass D güç kuvvetlendiricisi yani en verimli olanlarından. Yüksek verini\nsayesinde çok az enerji ısıya dönüşüyor ve soğutucu metal parçaya vb ihtiyaç\nduymuyor. Yaptığım proje ile bu hoparlörleri, bluetooth üzerinden ya da doğrudan\nkablo ile ses çıkışlarına bağlanabilecek duruma getirmiş oluyorum.\u003c/p\u003e","title":"[TR] DIY Bluetooth Speaker"},{"content":"Herkese Merhabalar,\nBu yazımda yeni bir alana hızlıca bir giriş yapıyorum. Zaman zaman projelerimizde 8 bitlik atmel veya pic işlemcilerin beklentiyi karşılamadığı oluyor. Böyle durumlar için ST Microelectronics firmasının STM32 isimli 32 bitlik işlemcilerini önerebilirim. 32 Bit işlemciler için en çok kaynak bulanabilecek işlemci takip ettiğim kadarıyla. ST firması çoğu gelişitme aracını da ücretsiz olarak sağlıyor. Bu yazıda tanıtacağım kartlar Arm Cortex M3 mimarisi tabanlı geliştirme kartlarıdır. Peki bu çekirdeği neden seçtim? Bir cümleyle özetlemek gerekirse 8 bitlik islemcilere bariz üstünlük sağlayan ve projelerin pek çoğu için yeterli özelliklere sahip olan en uygun fiyatlı işlemci. Geliştirme kartı olmadan sadece işlemci 1 - 2 dolar gibi çok iyi bir fiyata sahip. Özelliklerine aşağıdan ulaşabilirsiniz.\nEvet özellikler güzel peki nereden nasıl başlarım diyorsanız size bir kaç önerim var.\nBu girişi yapmak için gerekli malzemeler:\nSTM32F103C8T6 geliştirme kartı Stlink (Ya da FTDI üzerinden de kod yükleyebilirsiniz ama debug yapılmıyor) Gerekli programlar:\nSTM32CUBEMX SW4STM32 İlkönce malzemelerimizi inceleyelim:\n32 bitlik arm işlemcilerin ortak özelliği genellikle çok pinli ve küçük olmaları. Bu nedenle genellikle yüzey montaj teknolojisiyle lehimleniyor. Bu yüzden eğer sabit bir tasarımınız yoksa geliştirme yapacaksanız pinlerin denemeler icin dışarı çıkarıldığı geliştirme kartları kullanmak zorundasınız. Bu kartlar sayesinde pinlere rahatça erişebilir, genellikle üzerinde bulunan regülator, RTC, USB soketleri ve JTAG soketlerinin imkanlarından yararlanabilirsiniz.\nAşağıdaki linkten bendeki geliştirme kartının devre şemasına ulaşabilirsiniz.\nSTM32F103C8T6 Geliştirme Kartı\nhttps://www.openimpulse.com/blog/wp-content/uploads/wpsc/downloadables/STM32F103C8T6-Schematic-Diagram.pdf\nhttps://www.openimpulse.com/blog/wp-content/uploads/wpsc/downloadables/STM32F103C8T6-ARM-Development-Board-Cortex-M3-Datasheet.pdf\nhttps://www.openimpulse.com/blog/wp-content/uploads/wpsc/downloadables/MINI-STM32-Schematic-Diagram.pdf\nGeliştirme kartının biraz anlatmam gerekirse: Ana işlemcisi STM32F103C8T6 modeli Arm Cortex M3 tabanlı bir işlemcisi var. Neredeyse bütün pinleri kolayca ulaşılabilmesi için geliştirme kartında dışarı çıkarılmış. Ayrıca bir tane 8 Mhz, bir tane de 32khz kristal bağlanmış. Usb pinleri de uygun koruma dirençleri takılarak bir usb konnektörüne bağlanmış. Buradan hem usb üzerinden güç verilebiliyor hem de uygun programla usb üzerinden bilgisayar ile haberleşebiliriz. 3 adet jumper var bunları farklı yerlere takarak usb bağlantısını kesebiliyoruz, boot0 ve boot1 pinlerini ayarlayabiliyoruz. Kolayca reset atabilmek için bir adet butonumuz var ve güç olduğuni göstermek için bir adet ledimiz var.\n1. Adım : STM32CUBEMX Üzerinden Projenin Oluşturulması STM32CUBEMX ST firması tarafından geliştirilen görsel ayarlama programıdır. Bu program sayesinde işlemcimizi görsel olarak ayarlayabiliriz ve o ayarlara uygun projeyi farklı IDE seçenekleri için oluşturabiliriz. Oluşturulan projede HAL driver veya CMSIS kütüphanesi ayarlarıyla uğraşmamıza gerek kalmaz CubeMX hepsini projeye ekler.\nSTM32F103C8T6 işlemcisi seçilir.\nBizi karşalayan ekran böyle olacaktır. Buradan kullanmak istediğiniz \u0026ldquo;Çevresel Birimleri\u0026rdquo; seçip ayarlarını yapabiliriz. Örneğin Uart birimini aktifleştirip baud rate\u0026rsquo;ini 9600 olarak seçebiliriz. Hatta Uart RX için çalışan bir DMA interrupt\u0026rsquo;ı oluşturabiliriz. Üstelik sadece bir kaç tık ile.\nGeliştirme boardu datasheetinden alınan devre şeması. CubeMX ayarlarken burdan yararlanılır.\nKristal bağlantıları uart ve usb bağlantıları aşağıdaki gibi ayarlanmıştır.\nÖrneğin usb ayarları aşağıdaki gibi yapılabilir.\nhttps://www.st.com/content/st_com/en/products/development-tools/software-development-tools/stm32-software-development-tools/stm32-utilities/stsw-stm32102.html\nUsb kullanmak istediğimizde Clock sorunun olacağını CubeMX önceden tahmin ettiği için uyarı veriyor.\nUsbye göre clock ayarları aşağıdaki gibi yapılabilir.\nHer şey tamamlandığına göre artık projemizi oluşturabiliriz. Bunu ise sadece \u0026ldquo;Generate Project\u0026rdquo; buttonuna basarak ve devamında istediğimiz IDE seçerek yapıyoruz. Kendisi işlemcimize uygun paketleri indirip kuruyor ve projeyi oluşturuyor.\n2. Adım : SW4STM32 IDE Üzerinden Programın Yazılması ve Karta Yüklenmesi Sonraki adım olarak yazılım geliştirilmesi ve kodun derlenip karta yüklenmesi veya debug edilmesi kalıyor. Ben bu aşamada SW4STM32 kullandım. Bunu kullanma sebebim açıkcası öğrenmek istemem. Çünkü bu IDE açık kaynak kodlu Eclipse IDE üzerine geliştirilmiş bir IDE ve CubeMX tarafından destekeleniyor. Alternafik olarak KEIL veya TRUE STUDIO da kullanabilirsiniz.\nIDE projenin import edilmesi de çok basit ayrıntılı olarak girmek istemiyorum aşağıdaki linkleri takip ederek projeyi bu IDE\u0026rsquo;ye yükleyip yazılımınızı geliştirmeye başlayabilirsiniz.\nhttps://www.openstm32.org/Importing+a+STCubeMX+generated+project\nhttps://drive.google.com/file/d/0B5j__Lyt9ozbWVM2SWJxXzJ3NDA/view?usp=sharing\nBugünlük yazım bu kadar, önerilerinizi veya sorunlarınızı paylaşabilirsiniz. Tekrar görüşmek üzere\u0026hellip;\n","permalink":"https://mozanunal.com/2016/11/stm32-mikroislemci-dunyasna-giris/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003cbr\u003e\nBu yazımda yeni bir alana hızlıca bir giriş yapıyorum. Zaman zaman\nprojelerimizde 8 bitlik atmel veya pic işlemcilerin beklentiyi karşılamadığı\noluyor. Böyle durumlar için ST Microelectronics firmasının STM32 isimli 32\nbitlik işlemcilerini önerebilirim. 32 Bit işlemciler için en çok kaynak\nbulanabilecek işlemci takip ettiğim kadarıyla. ST firması çoğu gelişitme aracını\nda ücretsiz olarak sağlıyor. Bu yazıda tanıtacağım kartlar Arm Cortex M3\nmimarisi tabanlı geliştirme kartlarıdır. Peki bu çekirdeği neden seçtim? Bir\ncümleyle özetlemek gerekirse 8 bitlik islemcilere bariz üstünlük sağlayan ve\nprojelerin pek çoğu için yeterli özelliklere sahip olan en uygun fiyatlı\nişlemci. Geliştirme kartı olmadan sadece işlemci 1 - 2 dolar gibi çok iyi bir\nfiyata sahip. Özelliklerine aşağıdan ulaşabilirsiniz.\u003c/p\u003e","title":"[TR] STM32 Mikroişlemci Dünyasına Giriş"},{"content":"Herkese Merhabalar,\nBugünkü yazımda en sevdiğim programlama dillerinden biri olan pyhtondan bahsetmek istiyorum. Python son yıllarda popüleritesini iyice arttıran, özellikle bilimsel araştırmalarda sıklıkla kullanılan bir programlama dilidir. Neredeyse her konu hakkında python kütüphanesi bulmak mümkün. Linux ortamı altında gerekli kütüphaneleri yüklemek ve projenizde bu paketleri referanslamak inanılmaz kolay. Ayrıca python programları derlenmiyor yorumlanarak çalıştırılıyor. Bu saydığım son 2 özellik pythonu kullanması kolay ve geliştirmesi hızlı hale getiriyor. Bu yazıda asıl gündeme getireceğim konu python üzerinden veri bilimi ile uğraşanların işlerini kolaylaştırmak için geliştirilmiş bir \u0026ldquo;Enterprise\u0026rdquo;. İsmi Anaconda.\nYüklediğiniz zaman veri işleme ve raporlama ile alakalı 100 paket doğrudan geliyor ayrıca 700 paket \u0026ldquo;conda\u0026rdquo; isimli paket yöneticisiyle kurulabiliyor. Aşağıdan linkine ulaşabilirsiniz\nhttps://www.continuum.io/downloads\nMakine öğrenmesi, verilerin görsellenmesi, matematik kütüphaneleri, web frameworkleri, cloud servislerinin apilerini kullanmak için gerekli kütüphaneler, geliştirme ortamları, animasyon, 3d opengl\u0026hellip;\n700 paket için sıralı tam listeye buradan ulaşabilirsiniz.\nAşağıdaki 6 paket çok işinize yarayacaktır. Scipy sitesinden alıntı yaptım. Hepsi çok kullanılan kütüphaneler. Lineer cebir, veri inceleme, sinya işleme, basit regresyonlar falan çok geniş hepsinin içerikleri. Sympy çok kullanmadım ama sembolik matematik işleri için size belki gerekli olur diye onu da ekledim.\nNumPy, SciPy, Matplotlib, IPython, Sympy, Pandas Geliştirme ortamı olarak Jupyter notebook(IPython jupyterin eski adı)öneririm sanki not alır gibi kod yazıyorsunuz. Kaldığınız yerden devam ettırme programı adım adım çalıştırma çıktılarını dırek pdf yapabilme gibi baya güzel olayları var. Nasıl bir şey diye görmek isterseniz. https://nbviewer.jupyter.org/github/iminuit/iminuit/blob/master/tutorial/tutorial.ipynb Burada da daha fazla örnek var https://github.com/jupyter/jupyter/wiki/a-gallery-of-interesting-jupyter-notebooks#signal-and-sound-processing Şu iki video da jupyter ve anacondanın kullanımı için inceleyebilirsiniz. https://www.youtube.com/watch?v=YJC6ldI3hWk https://www.youtube.com/watch?v=HW29067qVWk Yazılı bir şey tercih ederseniz: https://medium.com/codingthesmartway-com-blog/getting-started-with-jupyter-notebook-for-python-4e7082bd5d46\n","permalink":"https://mozanunal.com/2016/09/python-icin-komple-bir-cozum-anaconda/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003cbr\u003e\nBugünkü yazımda en sevdiğim programlama dillerinden biri olan pyhtondan\nbahsetmek istiyorum. Python son yıllarda popüleritesini iyice arttıran,\nözellikle bilimsel araştırmalarda sıklıkla kullanılan bir programlama dilidir.\nNeredeyse her konu hakkında python kütüphanesi bulmak mümkün. Linux ortamı\naltında gerekli kütüphaneleri yüklemek ve projenizde bu paketleri referanslamak\ninanılmaz kolay. Ayrıca python programları derlenmiyor yorumlanarak\nçalıştırılıyor. Bu saydığım son 2 özellik pythonu kullanması kolay ve\ngeliştirmesi hızlı hale getiriyor. Bu yazıda asıl gündeme getireceğim konu\npython üzerinden veri bilimi ile uğraşanların işlerini kolaylaştırmak için\ngeliştirilmiş bir \u0026ldquo;Enterprise\u0026rdquo;. İsmi Anaconda.\u003cbr\u003e\nYüklediğiniz zaman veri işleme ve raporlama ile alakalı 100 paket doğrudan\ngeliyor ayrıca 700 paket \u0026ldquo;conda\u0026rdquo; isimli paket yöneticisiyle kurulabiliyor.\nAşağıdan linkine ulaşabilirsiniz\u003cbr\u003e\n\u003ca href=\"https://www.continuum.io/downloads\"\u003ehttps://www.continuum.io/downloads\u003c/a\u003e\u003c/p\u003e","title":"[TR] Python için komple bir çözüm: Anaconda "},{"content":"Herkese Merhabalar,\nYazılım dünyasında son zamanlarda artan bir \u0026ldquo;Açık Kaynak\u0026rdquo; çılgınlığı var. Hobi amaçlı bu işi yapanlardan bu konuyla alakalı en büyük şirketlere ve kuruluşlara kadar bir çok kişi veya kuruluş yazılımlarını \u0026ldquo;açık kaynaklı\u0026rdquo; olarak yayıyor. Peki bu yazılımları kullanmak istediğimiz veya kendi yazılımımızı açık kaynaklı olarak dağıtmak istediğimizde sınırlarımız ve sorumluluklarımız neler? İşte bu noktada açık kaynaklı yazılımların lisansları devreye giriyor. Bazıları bir çok şeyi serbest bırakırken, bazıları ticari projelerde kullanılmasına izin vermiyor, bazıları ise yazılımın değiştirilmesine olanak tanımıyor. İşte bu farklar ve sorumlulukları bu yazımda özetlemeye çalıştım. Sırayla popüler açık kaynak yazılım lisanslarını tek tek inceleyeceğiz.\nGNU AGPLv3 İzin Verilenler\nTicari Kullanım Dağıtma Değiştirme Özel Kullanım Patent Kullanımı: bu lisans katkıda bulunanlara patent alma hakkı verir. Şartlar\nKullandığınız yazılımı açık kaynaklı yapmak zorundasınız. Lisansın bir kopyasını kullanacağınız yerde bulundurmalısınız. Yazılım kullanılarak bir ağ servisi oluşturulursa da ilgili ağ servisini sağlayan yazılım açık kaynaklı olmalıdır. Yeni yazılım aynı lisansla veya uyumlu lisansla lisanslanmalıdır. Yazılımdaki değişiklikleri belirtmek zorundasınız. Sınırlamalar\nYazılımın kullanılmasından dolayı ortaya çıkabilecek sorunlardan yazar sorumlu tutulamaz. Lisans metninin tamamına ve daha ayrıntılı bilgiye ulaşmak için tıklayınız.\nGNU GPLv3 İzin Verilenler\nTicari Kullanım Dağıtma Değiştirme Özel Kullanım Patent Kullanımı: bu lisans katkıda bulunanlara patent alma hakkı verir. Şartlar\nKullandığınız yazılımı açık kaynaklı yapmak zorundasınız. Lisansın bir kopyasını kullanacağınız yerde bulundurmalısınız. Yeni yazılım aynı lisansla veya uyumlu lisansla lisanslanmalıdır. Yazılımdaki değişiklikleri belirtmek zorundasınız. Sınırlamalar\nYazılımın kullanılmasından dolayı ortaya çıkabilecek sorunlardan yazar sorumlu tutulamaz. Lisans metninin tamamına ve daha ayrıntılı bilgiye ulaşmak için tıklayınız.\nGNU LGPLv3 İzin Verilenler\nTicari Kullanım Dağıtma Değiştirme Özel Kullanım Patent Kullanımı: bu lisans katkıda bulunanlara patent alma hakkı verir. Şartlar\nKullandığınız yazılımı açık kaynaklı yapmak zorundasınız. Lisansın bir kopyasını kullanacağınız yerde bulundurmalısınız. Yeni yazılım aynı lisansla veya uyumlu lisansla lisanslanmalıdır. Yazılımdaki değişiklikleri belirtmek zorundasınız. Sınırlamalar\nYazılımın kullanılmasından dolayı ortaya çıkabilecek sorunlardan yazar sorumlu tutulamaz. Lisans metninin tamamına ve daha ayrıntılı bilgiye ulaşmak için tıklayınız.\nMIT Licence İzin Verilenler\nTicari Kullanım Dağıtma Değiştirme Özel Kullanım Şartlar\nLisansın bir kopyasını kullanacağınız yerde bulundurmalısınız. Sınırlamalar\nYazılımın kullanılmasından dolayı ortaya çıkabilecek sorunlardan yazar sorumlu tutulamaz. Lisans metninin tamamına ve daha ayrıntılı bilgiye ulaşmak için tıklayınız.\nApache License 2.0 İzin Verilenler\nTicari Kullanım Dağıtma Değiştirme Özel Kullanım Patent Kullanımı: bu lisans katkıda bulunanlara patent alma hakkı verir. Şartlar\nLisansın bir kopyasını kullanacağınız yerde bulundurmalısınız. Yazılımdaki değişiklikleri belirtmek zorundasınız. Sınırlamalar\nYazılımın kullanılmasından dolayı ortaya çıkabilecek sorunlardan yazar sorumlu tutulamaz.\nMarka Hakları (This license explicitly states that it does NOT grant you trademark rights, even though licenses without such a statement probably do not grant you any implicit trademark rights.)\nLisans metninin tamamına ve daha ayrıntılı bilgiye ulaşmak için tıklayınız.\nMozilla Public License 2.0 İzin Verilenler\nTicari Kullanım Dağıtma Değiştirme Özel Kullanım Patent Kullanımı: Bu lisans katkıda bulunanlara patent alma hakkı verir. Şartlar\nLisansın bir kopyasını kullanacağınız yerde bulundurmalısınız. Yazılımdaki değişiklikleri belirtmek zorundasınız. Yeni yazılım aynı lisansla veya uyumlu lisansla lisanslanmalıdır. Sınırlamalar\nYazılımın kullanılmasından dolayı ortaya çıkabilecek sorunlardan yazar sorumlu tutulamaz.\nMarka Hakları (This license explicitly states that it does NOT grant you trademark rights, even though licenses without such a statement probably do not grant you any implicit trademark rights.)\nLisans metninin tamamına ve daha ayrıntılı bilgiye ulaşmak için tıklayınız.\nKaynak https://choosealicense.com/licenses/ ","permalink":"https://mozanunal.com/2016/09/ack-kaynak-yazlm-lisans-turleri-ve/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003cbr\u003e\n       Yazılım dünyasında son zamanlarda artan bir \u0026ldquo;Açık Kaynak\u0026rdquo; çılgınlığı var.\nHobi amaçlı bu işi yapanlardan bu konuyla alakalı en büyük şirketlere ve\nkuruluşlara kadar bir çok kişi veya kuruluş yazılımlarını \u0026ldquo;açık kaynaklı\u0026rdquo; olarak\nyayıyor. Peki bu yazılımları kullanmak istediğimiz veya kendi yazılımımızı açık\nkaynaklı olarak dağıtmak istediğimizde sınırlarımız ve sorumluluklarımız neler?\nİşte bu noktada açık kaynaklı yazılımların lisansları devreye giriyor. Bazıları\nbir çok şeyi serbest bırakırken, bazıları ticari projelerde kullanılmasına izin\nvermiyor, bazıları ise yazılımın değiştirilmesine olanak tanımıyor. İşte bu\nfarklar ve sorumlulukları bu yazımda özetlemeye çalıştım. Sırayla popüler açık\nkaynak yazılım lisanslarını tek tek inceleyeceğiz.\u003c/p\u003e","title":"[TR] Açık Kaynak Yazılım Lisans Türleri ve Farkları"},{"content":"Herkese Merhabalar,\nUzun bir aradan sonra tekrar bir yazı hazırladım. Aslında bu yazıya çok önceden başlamıştım fakat devamını getirmemiştim şimdi tamamlayabildim ancak :). Evet bu yazımda Pixhawk isimli otopilottan bahsetmek istiyorum. Pixhawk açık kaynak kodlu Stm32 tabanlı yazılım tabanı olarak da ArduPilota dayanan bir otopilot modülü. Burada bir yorumda bulunmam gerekirse, açık kaynaklı otopilotlar arasında en başarılısı bana göre. Bu teorimi kanıtlamak için de hemen özelliklerine geçmek istiyorum.\nAna işlemcisi 32 bit Arm Cortex M4 tabanlı ST Microelectronic\u0026rsquo;in bir ürünü( STM32F427 Cortex M4 core with FPU). Bu işlemci \u0026ldquo;NuttX Real Time Operating System\u0026rdquo; ile kullanılıyor. 14 Adet PWM çıkışı bulunuyor.(Motor ve servomotor için)\nBordunun üzerinde Uart I2C CAN gibi çevresel birimler bulunuyor. Bunlarla çalışan herhangi bir sönsör, kontrol elemanı kolayca eklenebilir. Durum belirtlme için çok renkli LED indicator üzerinde hazır geliyor.\nSd kart desteği sayesinde uzun süre ve yüksek frekansta sensör verisini daha sonra incelemek için kaydedebiliyorsunuz.\nKritik noktalardan biri olan uçuş için gerekli sensör gurbu şöyle:\nST Micro L3GD20 3-axis 16-bit gyroscope\nST Micro LSM303D 3-axis 14-bit accelerometer / magnetometer\nInvensense MPU 6000 3-axis accelerometer/gyroscope\nMEAS MS5611 barometer\nSpektrum DSM / DSM2 / DSM-X® Satellite, S.BUS uyumlu.(Kumanda haberleşmesi için)\nGüç sistemi özellikleri:\nDiyot kontrolcüsü \u0026ldquo;automatic failover\u0026rdquo; özelliğiyle birlikte\n7 V yüksek akımlı servo çıkışları\nTüm çıkışlar yüksek akım korumalı tüm girişlerinin de \u0026ldquo;Electro Static Discharge(ESD)\u0026rdquo; testleri yapılmış.\nSTM32F103 failsafe co-processor olarak bulunuyor. Yani ana işlemcide bir sorun olursa operasyonlar bu yedek üzerinden devam ettirilebiliyor.\nYazımın devamında Pixhawk\u0026rsquo;ın özgür dünyasını kullanarak yapılan uygulamalardan ve yapılabileceklerden bahsetmek istiyorum.\nHer türlü araç tipini (multikopter, helikopter, uçak, kara araçları\u0026hellip;.) destekliyor. Her türlü multikopter tipini (tricopter,quadcopter, hekzacopter, koaksiyelleri\u0026hellip;) destekliyor. Optical flow, akım sensöü gibi başka otopilotlarda pek olmayan sensörleri destekliyor OSD çıkışı mevcut Oto paraşüt özelliği Gimbal kontrolü Antenna tracker desteği Phyton ile ile kodun ana kısmına hiç bakmadan harici bi görev uygulaması yazıp derleyip ekleyebilme Loglarını kullanarak resimlere \u0026ldquo;Geotag\u0026rdquo; yapabilme Pixhawk için yararlı linkler\n[](https://www.blogger.com/goog_469727306) https://dev.px4.io/\nhttps://ardupilot.org/copter/\nhttps://ardupilot.org/copter/docs/common-table-of-contents.html\nÇoğu linkin alındığı anasayfa\nDonanımsal Kurulum linkleri\nhttps://ardupilot.org/copter/docs/configuring-hardware.html\nmotor kurulumu, yerleşim dönme yönleri vb\n[](https://www.blogger.com/goog_469727340) https://ardupilot.org/copter/docs/common-minim-osd-quick-installation-guide.html\nhttps://code.google.com/p/arducam-osd/wiki/minimosd\nOsd kurulum linkleri\nhttps://copter.ardupilot.com/wiki/common-telemetry-landingpage/\nTelemetri modül kurulum\nhttps://copter.ardupilot.com/wiki/common-px4flow-overview/\nOptical flow sensör kurulum\nhttps://copter.ardupilot.com/wiki/parachute/\nOto paraşüt özelliği\nhttps://copter.ardupilot.com/wiki/common-servo/\nUzaktan servo kontrolü\nhttps://copter.ardupilot.com/wiki/common-electro-permanent-magnet-gripper/\nManyetik bırakma mekanizması\nhttps://copter.ardupilot.com/wiki/common-cameras-and-gimbals/\nOtopilot ile gimbal kontrolü\nhttps://copter.ardupilot.com/wiki/common-3d-mapping/\n3d maping\nhttps://ardupilot.org/copter/docs/common-antenna-tracking.html\nAntenna Tracking özelliğini kullanma\nhttps://ardupilot.org/copter/docs/common-powermodule-landingpage.html\nakım sensörü\nOtopilotun Kodunu değiştirme\nhttps://dev.px4.io/starting-building.html\n[](https://www.blogger.com/goog_543916667) https://planner.ardupilot.com/wiki/common-geotagging-images-with-mission-planner/\n\u0026ldquo;Geotagged\u0026rdquo; resimler mission plannerla.\nKurulum ve Ayarlar linkleri\n[](https://www.blogger.com/goog_543916669) https://copter.ardupilot.com/wiki/flying-arducopter/\nilk uçuş hakkında kapsamlı bilgi her başlığı incelemek gerekli\naz çok gerekli bütün ayarların nasıl yapılacağı anlatılmış\n[](https://www.blogger.com/goog_543916675) https://copter.ardupilot.com/wiki/arducopter-parameters/\nayarlanabilecek tüm parametreler ve ne işe yaradıkları\n[](https://www.blogger.com/goog_543916679) https://copter.ardupilot.com/wiki/failsafe-battery/\nbattery failsafe\nhttps://copter.ardupilot.com/wiki/initial-setup/\nİlk uçuş kalibrasyonu\n[](https://www.blogger.com/goog_543916683) https://planner.ardupilot.com/wiki/common-loading-firmware-onto-pixhawk/\nPixhawk üzerine kodu yükleme\nhttps://ardupilot.org/copter/docs/common-compass-setup-advanced.html\nMagnometer calibration( Çok önemli!!!)\nhttps://planner.ardupilot.com/wiki/common-mission-planner-telemetry-logs/\nWaypoint yükleme\n[](https://www.blogger.com/goog_543916695) https://www.qgroundcontrol.org/mavlink/start\nMavlink communication protocol\nhttps://dev.ardupilot.com/wiki/code-overview-adding-a-new-mavlink-message/\nMavlink yeni mesaj oluşturma\n","permalink":"https://mozanunal.com/2016/09/pixhawk-otopilot-ve-ozellikleri/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003cbr\u003e\n        Uzun bir aradan sonra tekrar bir yazı hazırladım. Aslında bu yazıya çok\nönceden başlamıştım fakat devamını getirmemiştim şimdi tamamlayabildim ancak :).\nEvet bu yazımda Pixhawk isimli otopilottan bahsetmek istiyorum. Pixhawk açık\nkaynak kodlu Stm32 tabanlı yazılım tabanı olarak da ArduPilota dayanan bir\notopilot modülü. Burada bir yorumda bulunmam gerekirse, açık kaynaklı\notopilotlar arasında en başarılısı bana göre. Bu teorimi kanıtlamak için de\nhemen özelliklerine geçmek istiyorum.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://4.bp.blogspot.com/-p4zpkVZrQWU/V8faC6OGbjI/AAAAAAAAc_U/rx-zCY8cZksKXnRpi2GC8lY-b-aB_MA_ACLcB/s640/pic-prod-pixhawk1.jpg\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eAna işlemcisi 32 bit Arm Cortex M4 tabanlı ST Microelectronic\u0026rsquo;in bir ürünü(\nSTM32F427 Cortex M4 core with FPU).  Bu işlemci \u0026ldquo;NuttX Real Time Operating\nSystem\u0026rdquo; ile kullanılıyor. \u003c/p\u003e","title":"[TR] Pixhawk Otopilot ve Özellikleri"},{"content":"Herkese Merhabalar,\nBu yazımda .NET platformunun bir teknolojisi olan WPF kullanarak ev otomasyonu kontrol paneli yapmayı anlatacağım. Yaptığım bu projenin başlıca işlevi şudur; 5 farklı sensörden bulunulan ortamın sıcaklığı, nemi, zehirli gaz durumu, ortamda canlı olup olmadığı, ortamda yağış olup olmadığı Arduino yardımıyla alınır ve bu sensor dataları C# arayüzünde gösterilir. Eğer onay kutusu işaretlenirse istenmeyen bir durumda (gaz sızıntısı, eve hırsız girmesi, yağmur için kurulabilir.) program uyarı olarak girilen adrese bir adet mail gönderir.Projenin Arduino ve C# kaynak kodunu buradan indirebilirsiniz.\nMalzemeler\nArduino DHT11 Nem ve Sıcaklık Sensörü MQ135 Gaz Sensörü Yağış Sensörü Röle Modulü PIR Sensörü ESP8266 Wifi Modulü Kutu Arduino Kodu\nAlternatif Arduino Kodu ESP8266 Kullanarak\nWPF Application\nSerialden Data Almayla Alakalı Fonksiyonlar\nGelen Datayı Parçalara Ayırıp Görüntüleme Fonksiyonları\nMail Gönderme Fonksiyonları\nMail Gönderince Arayüzün Durumu\n","permalink":"https://mozanunal.com/2016/06/wpf-ile-ev-otomasyonu-arayuzu/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003cbr\u003e\nBu yazımda .NET platformunun bir teknolojisi olan WPF kullanarak ev otomasyonu\nkontrol paneli yapmayı anlatacağım. Yaptığım bu projenin başlıca işlevi şudur; 5\nfarklı sensörden bulunulan ortamın sıcaklığı, nemi, zehirli gaz durumu, ortamda\ncanlı olup olmadığı, ortamda yağış olup olmadığı Arduino yardımıyla alınır ve bu\nsensor dataları C# arayüzünde gösterilir. Eğer onay kutusu işaretlenirse\nistenmeyen bir durumda (gaz sızıntısı, eve hırsız girmesi, yağmur için\nkurulabilir.) program uyarı olarak girilen adrese bir adet mail\ngönderir.\u003ca href=\"https://drive.google.com/file/d/0B5j__Lyt9ozbVTRIOVFVcVVWX3c/view?usp=sharing\"\u003eProjenin Arduino ve C# kaynak kodunu buradan indirebilirsiniz.\u003c/a\u003e\u003c/p\u003e","title":"[TR] WPF ile Ev Otomasyonu Arayüzü"},{"content":"Hi,\nPassFace is a face recognizing program develop using EmguCV (OpenCV wrapper). It is possible to use 4 different algorithm and 3 different source(Camera, Video, Image) in this program. Most of the tryings have been made using LFW data set which have 13000 pictures of 1500 different people.Details of project can be reached below:\nSource Code: https://github.com/mozanunal/PassFace\n1. Introduction Definition of the Problem In this project, a program is going to develop to recognize the faces and compare them the faces it learned and give the identity of the person. All this identifying system is going to work in real time. Main subjects in this project are image processing and machine learning. Project aim to develop some algorithm to detect faces specifically recognize the faces using pattern recognition algorithms. The number of faces and the equipment needed is going to be determined according to test of different algorithms.\nMotivation To detect identity of person from images is very beneficial subject. It can provide easy access to users. It can be used for detect criminals and prevent potential crimes. Also I see this subject in a lot of industrial projects and academic researches. I want to work with real world problem and problem which is not completely solved. Therefore I decided to work with this project.\nDifficulties of Problem Main difficulties can be sorted like below:\nFaces are not completely rigid objects so it is hard to recognize them. The more person in database needs more and more processing power. Blurry images because of real time system The effects of ambient light Changes in person’s face over time Data Sets AT\u0026amp;T Facedatabase\nThe AT\u0026amp;T Face Database, sometimes also referred to as ORL Database of Faces, contains ten different images of each of 40 distinct subjects. For some subjects, the images were taken at different times, varying the lighting, facial expressions (open / closed eyes, smiling / not smiling) and facial details (glasses / no glasses). All the images were taken against a dark homogeneous background with the subjects in an upright, frontal position (with tolerance for some side movement).\nYale Facedatabase A\nalso known as Yalefaces. The AT\u0026amp;T Face Database is good for initial tests, but it’s a fairly easy database. The Eigenfaces method already has a 97% recognition rate on it, so you won’t see any great improvements with other algorithms. The Yale Face Database A (also known as Yalefaces) is a more appropriate dataset for initial experiments, because the recognition problem is harder. The database consists of 15 people (14 male, 1 female) each with 11 grayscale images sized 320x243 pixel. There are changes in the light conditions (center light, left light, right light), facial expressions (happy, normal, sad, sleepy, surprised, wink) and glasses (glasses, no-glasses).\nLabeled Faces in the Wild\nA database of face photographs designed for studying the problem of unconstrained face recognition. The data set contains more than 13,000 images of faces collected from the web. Each face has been labeled with the name of the person pictured. 1680 of the people pictured have two or more distinct photos in the data set. The only constraint on these faces is that they were detected by the Viola-Jones face detector..\nProgramming Environment and Libraries Visual Studio IDE is used for project. The program is written in C# using OpenCV libraries.\n2. Face Recognition Algorithm Face Detection Face Detection is not the main subject of this project but to create database and to increase the face recognition performance. Opencv’s Haar Cascade Classifier function is used. In this function a haar cascade file ,which is pre learned for face detection, is used.\nMorphologic Operations Ambient light and the movement at faces are the challenging problems in face recognition. Therefore some morphologic operators is applied to the faces to decrease the effect of these problems. In this project equalize histogram function of opencv is used to decrease the effect of the ambient light.\nSURF Feature Extractor 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 if (comboBoxAlgorithm.Text == “SURF Feature Extractor”) { string dataDirectory=Directory.GetCurrentDirectory()+”\\TrainedFaces”; string[] files = Directory.GetFiles(dataDirectory, “*.jpeg”, SearchOption.AllDirectories); foreach (var file in files) { richTextBox1.Text += file.ToString(); long recpoints; ImagesampleImage = new Image(file); secondImageBox.Image = sampleImage; using (Image modelImage = sampleImage.Convert()) using (Image observedImage = image.Convert()) { Image result = SurfRecognizer.Draw(modelImage, observedImage, out recpoints); //captureImageBox.Image = observedImage; if (recpoints \u0026gt; 10) { MCvFont f = new MCvFont(Emgu.CV.CvEnum.FONT.CV_FONT_HERSHEY_COMPLEX, 1.0, 1.0); result.Draw(“Person Recognited, Welcome”, ref f, new Point(40, 40), new Bgr(0, 255, 0)); ImageViewer.Show(result, String.Format(“ {0} Points Recognited”, recpoints)); } } } Eigenfaces 1 2 3 4 5 6 7 8 9 10 11 12 13 14 else if (comboBoxAlgorithm.Text == \u0026#34;EigenFaces\u0026#34;) { //image._EqualizeHist(); if (eqHisChecked.Checked == true) { image._EqualizeHist(); } var result = eigenFaceRecognizer.Predict(image.Convert().Resize(100, 100, Emgu.CV.CvEnum.INTER.CV_INTER_CUBIC)); if (result.Label != -1) { image.Draw(eigenlabels[result.Label].ToString(), ref font, new Point(face.X - 2, face.Y - 2), new Bgr(Color.LightGreen)); label6.Text = result.Distance.ToString(); } } Fisherfaces 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 else if (comboBoxAlgorithm.Text == \u0026#34;FisherFaces\u0026#34;) { if (eqHisChecked.Checked == true) { image._EqualizeHist(); } var result = fisherFaceRecognizer.Predict(image.Convert().Resize(100, 100, Emgu.CV.CvEnum.INTER.CV_INTER_CUBIC)); if (result.Label != -1) { image.Draw(fisherlabels[result.Label].ToString(), ref font, new Point(face.X - 2, face.Y - 2), new Bgr(Color.LightGreen)); label6.Text = result.Distance.ToString(); } } Local Binary Patterns Histograms 1 2 3 4 5 6 7 8 9 10 11 12 13 else if (comboBoxAlgorithm.Text == \u0026#34;LBPHFaces\u0026#34;) { if (eqHisChecked.Checked == true) { image._EqualizeHist(); } var result = lbphFaceRecognizer.Predict(image.Convert().Resize(100, 100, Emgu.CV.CvEnum.INTER.CV_INTER_CUBIC)); if (result.Label != -1) { image.Draw(lbphlabels[result.Label].ToString(), ref font, new Point(face.X - 2, face.Y - 2), new Bgr(Color.LightGreen)); label6.Text = result.Distance.ToString(); } } 3. PassFace Interface Database Creator A database creator is developed to make easier to implement and try different algorithm.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 Add DataBase Function private void addDatabaseButton_Click(object sender, EventArgs e) { //Take time for save filename string fileName = textBox1.Text+\u0026#34;_\u0026#34;+DateTime.Now.Day.ToString() + \u0026#34;-\u0026#34; + DateTime.Now.Month.ToString() + \u0026#34;-\u0026#34; + DateTime.Now.Year.ToString() + \u0026#34;-\u0026#34; + DateTime.Now.Hour.ToString() + \u0026#34;-\u0026#34; + DateTime.Now.Minute.ToString()+\u0026#34;-\u0026#34; + DateTime.Now.Second.ToString()+\u0026#34;.jpeg\u0026#34;; //First The faces in the Image is detected Image image = _capture.RetrieveBgrFrame().Resize(400, 300, Emgu.CV.CvEnum.INTER.CV_INTER_CUBIC); List faces = new List(); List eyes = new List(); long detectionTime; DetectFace.Detect(image, \u0026#34;haarcascade_frontalface_default.xml\u0026#34;, \u0026#34;haarcascade_eye.xml\u0026#34;, faces, eyes, out detectionTime); foreach (Rectangle face in faces) { image.ROI = face; } Directory.CreateDirectory(\u0026#34;TrainedFaces\u0026#34;); image.Resize(100, 100, Emgu.CV.CvEnum.INTER.CV_INTER_CUBIC).ToBitmap().Save(\u0026#34;TrainedFaces\\\\\u0026#34; + fileName); } private void comboBoxAlgorithm_SelectedIndexChanged(object sender, EventArgs e) { if (comboBoxAlgorithm.Text == \u0026#34;EigenFaces\u0026#34;) { try { string dataDirectory = Directory.GetCurrentDirectory() + \u0026#34;\\\\TrainedFaces\u0026#34;; string[] files = Directory.GetFiles(dataDirectory, \u0026#34;*.jpeg\u0026#34;, SearchOption.AllDirectories); eigenTrainedImageCounter = 0; foreach (var file in files) { Image TrainedImage=new Image(file); if (eqHisChecked.Checked == true) { TrainedImage._EqualizeHist(); } eigenTrainingImages.Add(TrainedImage.Convert()); eigenlabels.Add(fileName(file)); eigenIntlabels.Add(eigenTrainedImageCounter); eigenTrainedImageCounter++; richTextBox1.Text += fileName(file)+\u0026#34;\\n\u0026#34;; } eigenFaceRecognizer= new EigenFaceRecognizer(eigenTrainedImageCounter, 3000); eigenFaceRecognizer.Train(eigenTrainingImages.ToArray(), eigenIntlabels.ToArray()); } catch (Exception ex) { MessageBox.Show(ex.ToString()); MessageBox.Show(\u0026#34;Nothing in binary database, please add at least a face(Simply train the prototype with the Add Face Button).\u0026#34;, \u0026#34;Triained faces load\u0026#34;, MessageBoxButtons.OK, MessageBoxIcon.Exclamation); } } else if (comboBoxAlgorithm.Text == \u0026#34;FisherFaces\u0026#34;) { try { string dataDirectory = Directory.GetCurrentDirectory() + \u0026#34;\\\\TrainedFaces\u0026#34;; string[] files = Directory.GetFiles(dataDirectory, \u0026#34;*.jpeg\u0026#34;, SearchOption.AllDirectories); fisherTrainedImageCounter = 0; foreach (var file in files) { Image TrainedImage = new Image(file); fisherTrainingImages.Add(TrainedImage.Convert()); if (eqHisChecked.Checked == true) { TrainedImage._EqualizeHist(); } fisherlabels.Add(fileName(file)); fisherIntlabels.Add(fisherTrainedImageCounter); fisherTrainedImageCounter++; richTextBox1.Text += fileName(file) + \u0026#34;\\n\u0026#34;; } fisherFaceRecognizer = new FisherFaceRecognizer(fisherTrainedImageCounter, 3000); fisherFaceRecognizer.Train(fisherTrainingImages.ToArray(), fisherIntlabels.ToArray()); } catch (Exception ex) { MessageBox.Show(ex.ToString()); MessageBox.Show(\u0026#34;Nothing in binary database, please add at least a face(Simply train the prototype with the Add Face Button).\u0026#34;, \u0026#34;Triained faces load\u0026#34;, MessageBoxButtons.OK, MessageBoxIcon.Exclamation); } } else if (comboBoxAlgorithm.Text == \u0026#34;LBPHFaces\u0026#34;) { try { string dataDirectory = Directory.GetCurrentDirectory() + \u0026#34;\\\\TrainedFaces\u0026#34;; string[] files = Directory.GetFiles(dataDirectory, \u0026#34;*.jpeg\u0026#34;, SearchOption.AllDirectories); lbphTrainedImageCounter = 0; foreach (var file in files) { Image TrainedImage = new Image(file); if (eqHisChecked.Checked == true) { TrainedImage._EqualizeHist(); } lbphTrainingImages.Add(TrainedImage.Convert()); lbphlabels.Add(fileName(file)); lbphIntlabels.Add(lbphTrainedImageCounter); lbphTrainedImageCounter++; richTextBox1.Text += fileName(file) + \u0026#34;\\n\u0026#34;; } lbphFaceRecognizer = new LBPHFaceRecognizer(1, 8, 8, 8, 123.0); lbphFaceRecognizer.Train(lbphTrainingImages.ToArray(), lbphIntlabels.ToArray()); } catch (Exception ex) { MessageBox.Show(ex.ToString()); MessageBox.Show(\u0026#34;Nothing in binary database, please add at least a face(Simply train the prototype with the Add Face Button).\u0026#34;, \u0026#34;Triained faces load\u0026#34;, MessageBoxButtons.OK, MessageBoxIcon.Exclamation); } } } User Interface As a source camera, video, single image and multi image can be selected. Different source selection is developed using opencv and .net libraries.\n4. Future of PassFace Project Algorithm Accuracy Analysis Program designed for using different algorithms. But the comparison of these algorithms is not finished. The next step is implementing this algorithm the compare the algorithms accuracy and performance truly.\nPerformance Optimizations For fix the performance problems, develop the program for multiple core CPUs. For better performance, develop the program to run over GPU using CUDA libraries.\nAlgorithm Optimizations In these days, the most improved face recognition algorithms are using 3D face recognition technologies. It is based on; the 3D model of the faces are created using different 2D images. Therefore, the angle of looking and the direction of light are no longer be problem for these algorithms. The recognize operations are implementing using Neural Networks and Deep Learning Algorithms. It is planning to implement latest algorithms to increase accuracy in different conditions.\n5. Conclusion In this project, the main principles of the face recognition algorithms are learned. The performances and accuracies of the algorithms are compared. A gui application is developed to create database and process images using selected algorithm.\n","permalink":"https://mozanunal.com/2016/06/passface-face-recognition-using-opencv/","summary":"\u003cp\u003e\u003cstrong\u003eHi,\u003c/strong\u003e\u003cbr\u003e\nPassFace is a face recognizing program develop using EmguCV (OpenCV wrapper). It\nis possible to use 4 different algorithm and 3 different source(Camera, Video,\nImage) in this program. Most of the tryings have been made using LFW data set\nwhich have 13000 pictures of 1500 different people.Details of project can be\nreached below:\u003c/p\u003e\n\u003cp\u003eSource Code:\n\u003ca href=\"https://github.com/mozanunal/PassFace\"\u003ehttps://github.com/mozanunal/PassFace\u003c/a\u003e\u003c/p\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube-nocookie.com/embed/d6LI42NEZZY??autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003ch4 id=\"1-introduction\"\u003e1. Introduction\u003c/h4\u003e\n\u003ch5 id=\"definition-of-the-problem\"\u003eDefinition of the Problem\u003c/h5\u003e\n\u003cp\u003eIn this project, a program is going to develop to recognize the faces and\ncompare them the faces it learned and give the identity of the person. All this\nidentifying system is going to work in real time. Main subjects in this project\nare image processing and machine learning. Project aim to develop some algorithm\nto detect faces specifically recognize the faces using pattern recognition\nalgorithms. The number of faces and the equipment needed is going to be\ndetermined according to test of different algorithms.\u003c/p\u003e","title":"PassFace: Face Recognition Using OpenCV"},{"content":"Herkese Merhabalar,\nBugünkü yazımda nasıl basit bir şekilde bir powerbank\u0026rsquo;i ayarlanabilir güç kaynağına dönüştürebileceğimizden bahsedeceğim. Gerekli olan malzemeler sadece bir adet power bank ve bir adet MT3608 boost converter. Projeye başlamadan önce boost converter nedir ondan bahsetmek istiyorum. Boost converterlar voltaj yükseltmek için kullanılır. Kondansatör ve bobin ve diyot kullanarak bir switch yapısı kurarlar ve bu yapı ile hem voltajı yükseltirler hem de verimleri çok yüksek olur. Benim kulladığım modül MT3608 powerbankin pilinin çalışma voltaji olan 3.6 volt ile beslenebiliyor. 0 28 Volt arası 2 amper çıkış alınabiliyor. Verimi de yüzde 93 civarı. Projemize çok uygun yapıyor bu özellikler de onu. Hem de kısa devre koruması da var. Bu da güvenlik açısından da uygun hale getiriyor.\nYapımına geçersek;\nBir power bankin icin açıyoruz ve pilin uçlarına mt3608in input pinlerini lehimliyoruz. Kabloları çıkarmak için bir delik açabiliriz. Mt3608 modulü kutunun dışında kalıyor onun çıkışına da 2 adet jumper lehimliyoruz. Bu sayede kolayca breadboard üzerinde falan kullanabiliriz. Modülün üzerindeki potansiyometreden çıkış voltajını ayarlıyoruz. Ve sonuç olarak kolayca cebimizde taşıyabileceğimiz bir güç kaynağımız olmuş oldu. Hem de telefonumuzu şarj etmeye de devam edebiliriz.\n","permalink":"https://mozanunal.com/2016/03/ayarlanabilir-tasnabilir-guc-kaynag-yapm/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBugünkü yazımda nasıl basit bir şekilde bir powerbank\u0026rsquo;i ayarlanabilir güç\nkaynağına dönüştürebileceğimizden bahsedeceğim. Gerekli olan malzemeler sadece\nbir adet power bank ve bir adet MT3608 boost converter. Projeye başlamadan önce\nboost converter nedir ondan bahsetmek istiyorum. Boost converterlar voltaj\nyükseltmek için kullanılır. Kondansatör ve bobin ve diyot kullanarak bir switch\nyapısı kurarlar ve bu yapı ile hem voltajı yükseltirler hem de verimleri çok\nyüksek olur. Benim kulladığım modül MT3608 powerbankin pilinin çalışma voltaji\nolan 3.6 volt ile beslenebiliyor. 0 28 Volt arası 2 amper çıkış alınabiliyor.\nVerimi de yüzde 93 civarı. Projemize çok uygun yapıyor bu özellikler de onu. Hem\nde kısa devre koruması da var. Bu da güvenlik açısından da uygun hale getiriyor.\u003c/p\u003e","title":"[TR] Ayarlanabilir Taşınabilir Güç Kaynağı Yapımı"},{"content":"Herkese Merhabalar,\nSon zamanlarda ışık ile veri aktarımına ilgi duymaktayım. Bu konuda bir şeyler geliştirmek istiyorum. Bunun ilk aşaması olarak lazer ile haberleşme projemi gerçekleştirdim. Bu projedeki amacım daha çok lazerin ve fotodiyotun cevap süresi ölçmek yani maximum aktarım hızını hesaplamaktı. Aynı zamanda farklı iletişim protokollerini denedim. İlerleyen projeler için lazerin de fotodiyotun da yetersiz olduğunu görmüş oldum. Daha hızlı fotodiyotlarla ve ledlerle denemelerim sürecek. Projenin bu aşamadaki haline gelirsek:\nGönderici modül basitçe bir arduino ve bir lazerden oluşuyor. Bir transistör ile lazeri sürmeyi planlıyordum. Fakat lazer çok düşük akım çektiğini görünce doğrudan arduinoun pinine bağladım.\nGönderici modül ise 1 fotodiot 1 direnç ve logic analyzerdan oluşuyor. Foto diyot üzerine düşen lazer ışığına göre 1 veya 0 çıktı veriyor. Bu çıktıları logic analyzer ile okuyup, istediğimiz iletişim protokolüne göre decode edebiliyoruz.\nYukarıdaki çevre ışığının etkisini azaltmak için plastik bir kap ile kapatılmış hali. Aşağıdaki ise kapatılmadan önceki hali.\nTestimin sonuçları ise söyle: serial haberleşme ile maximum 19200 baud rate kadar güvenilir bir iletişim oldu. Manchester decoding kullanarak ise 38400 baudrate kadar haberleşebildim.\n","permalink":"https://mozanunal.com/2016/02/lazer-haberlesmesi/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eSon zamanlarda ışık ile veri aktarımına ilgi duymaktayım. Bu konuda bir şeyler\ngeliştirmek istiyorum. Bunun ilk aşaması olarak lazer ile haberleşme projemi\ngerçekleştirdim. Bu projedeki amacım daha çok lazerin ve fotodiyotun cevap\nsüresi ölçmek yani maximum aktarım hızını hesaplamaktı. Aynı zamanda farklı\niletişim protokollerini denedim. İlerleyen projeler için lazerin de fotodiyotun\nda yetersiz olduğunu görmüş oldum. Daha hızlı fotodiyotlarla ve ledlerle\ndenemelerim sürecek. Projenin bu aşamadaki haline gelirsek:\u003c/p\u003e","title":"[TR] Lazer Haberleşmesi"},{"content":"Herkese Merhabalar,\n2014 yılının Nisan ayında arkadaşlarımla beraber İstanbul Teknik Üniversitesi bünyesinde İTÜNOM Otonom Hava Araçları Takımını kurduk. 2 Senedir aktif olarak çalışmalarımıza devam ediyoruz. Amerikanın Maryland Eyaletinde düzenlenmekte olan Student Unmanned Air System yarışmasına 2015 yılında katıldık 2016 yılında da katılmak için hazırlanıyoruz.\nTakımımızda şu an 10 kişiyiz. 3 adet uçak, 2 adet uzay, 2 adet elektronik, 2 adet bilgisayar, 1 adet kontrol mühendisliğinden üyemiz var. Özellikle multidisipliner bir takım olmayı tercih ettik. Bu sayede her üyemizin farklı bir uzmanlığı var ve kolayca farklı sistemleri tasarlayıp bir araya getirebiliyoruz.\nTakımımızın Sitesi: https://www.itunom.com/\nFacebook Sayfası: https://www.facebook.com/itunom\nBiraz çalışmalarımızdan bahsetmek istiyorum. Çalışmalarımız genel itibariyle multikopterler üzerine. Toplanması, mekanik ve elektriksel analizleri (İtki analizi ve uçuş sırasında anlık akım analizi). Yarışmadaki görevlerin gereklerinden biri de hedeflerin otonom olarak tespiti. Bu nedenle görüntü işleme uzun mesafe yüksek çözünürlüklü fotoğraf transferi gibi konulara da ağırlık veriyoruz. En son projemiz ise kendi otopilotumuzu geliştirmek şu an belli bir yere geldik ama bitmedi tamamen henüz. https://github.com/mozanunal/SimplePilot buradan takip edebilirsiniz. Açık kaynaklı bir proje.\nYani uzun lafın kısası, boş zamanlarımızı verimli bir şekilde değerlendirmek isteyen bir grup İTÜ öğrencisiyiz. Biraz daha öznel olarak anlatmam gerekirse ben takımımızı bir aile gibi görüyorum. Genelde çalışmalarımızı derslerimizden sonra yapıyoruz. Çayımızı demleyip herkes kendi işini yapmaya çalışıyor. Takımımızın kendine özel bir dili oldu neredeyse\u0026hellip; Atölyemizde çalışırken geçirdiğim zamanlar benim için gerçekten güzel zamanlar oluyor. Beraber bir şeyler öğreniyoruz, şakalaşıyoruz, eğleniyoruz. Zaman zaman sabaha kadar orada çalıştığımız oluyor. Karşılaştığımız bir sürü güçlüğü zorluğu hep beraber aştık. Hep beraber geçirdiğimiz iyi zamanlarımız, kötü zamanlarımız oldu. Son olarak, derslerinden, boş zamanlarından fedakarlık edip takımıza emek veren tüm arkadaşlarıma buradan tekrar teşekkür etmek istiyorum. İnanıyorum ki hep beraber daha bir sürü başarılara imza atacağız ama bu güzel arkadaşlıklarla ben emeklerimin karşılığını çoktan almış gibi hissediyorum.\nBahsetmek istediğim bir diğer konu da şu: Takımımız çalışmalarını devam ettirebilmek için diğer öğrenci kulüpleri gibi sizlerin katkılarına ihtiyacı var. Bize yapabileceğiniz en küçük katkı bizi çok mutlu edecektir. Destek bulabileceğimiz yerlere bizi yönlendirebilir, ya da isterseniz kendiniz doğrudan paypal üzerinden veya banka hesabımıza katkıda bulunabilirsiniz.\nHesap bilgileri için: https://blog.itunom.com/iletisim/\nAyrıntılı bilgi ve sorularınız için: mehmetozanunal@gmail.com ","permalink":"https://mozanunal.com/2016/01/itunom-takm/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e2014 yılının Nisan ayında arkadaşlarımla beraber İstanbul Teknik Üniversitesi\nbünyesinde İTÜNOM Otonom Hava Araçları Takımını kurduk. 2 Senedir aktif olarak\nçalışmalarımıza devam ediyoruz. Amerikanın Maryland Eyaletinde düzenlenmekte\nolan Student Unmanned Air System yarışmasına 2015 yılında katıldık 2016 yılında\nda katılmak için hazırlanıyoruz.\u003c/p\u003e\n\u003cp\u003eTakımımızda şu an 10 kişiyiz. 3 adet uçak, 2 adet uzay, 2 adet elektronik, 2\nadet bilgisayar, 1 adet kontrol mühendisliğinden üyemiz var. Özellikle\nmultidisipliner bir takım olmayı tercih ettik. Bu sayede her üyemizin farklı bir\nuzmanlığı var ve kolayca farklı sistemleri tasarlayıp bir araya\ngetirebiliyoruz.\u003cbr\u003e\nTakımımızın Sitesi: \u003ca href=\"https://www.itunom.com/\"\u003ehttps://www.itunom.com/\u003c/a\u003e\u003cbr\u003e\nFacebook\nSayfası: \u003ca href=\"https://www.facebook.com/itunom\"\u003ehttps://www.facebook.com/itunom\u003c/a\u003e\u003c/p\u003e","title":"[TR] İTÜNOM Takımı"},{"content":"Herkese Merhabalar,\nBu seferki projem Star Warsa son film ile katılan BB-8 isimli droidin bir benzerini yapmak. Bu fikir aklıma nereden geldi derseniz. Son filmdeki en sempatik ve ilgi çekici karakterin BB-8 olduğunu düşünüyorum. Tabi ilk aklıma gelen nasıl çalıştığı\u0026hellip; Farklı fikirler yürütürken kendimi bu droidi nasıl yaparım diye tasarımlar yaptığım bir projenin içinde buluverdim. Elle tutulur tasarımlar ortaya çıkmaya başlayınca malzemelerimi topladım ve projeye başladım. Proje oldukça uzun ve daha çok mekanik bir proje bu yüzden 2 parçaya ayırdım kalanını ne zaman bitiririm bilmiyorum. Şu an devam edemiyorum çünkü lipo pillerim bitti ve şarj aletini malesef istanbulda unutmuşum. Neyse projemize geçelim.\nGerekli malzemeler 2 tane yüksek torklu, 1 tane daha düşük torklu 360 derece dönebilen servo, bir Arduino Nano, Bluetooth Modulü, Motor sürücü modüller bir Android Cep Telefonu kontrol için, mekanik kısım için kalın ataçlar ve bir adet dünya küre modeli (ana gövdemiz olarak).\nKabaca planladığım mekanik dizayn aşağıdaki gibi. açıklamak gerekirse \u0026ldquo;artı\u0026rdquo; şeklindeki mekanizmamız droidin kontrol edildiği ve tüm motoların bulunduğu yer. Ana küreye sadece kenarlardan motorlar aracılığıyla bağlı alt kısmına ise bir ağırlık bağlı metal bir parça olabilir ama kesinlikle bir disk olmasını öneririm. Benim bağladığım parça stabiliteye hiç iyi etki etmedi. Bu ağırlık sayesinde yan motorlar döndüğünde ağırlığın dönmesi daha zor olduğundan dışarıdaki küre dönmeye başlıyor bu sayede robotumuz ilerliyor. Üçüncü bir motorumuz ise o ağırlığı kendi ekseni etrafında döndürüyor. Momentumun korunumundan ağırlık kendi ekseni etrafında dönmeye başladığı anda küremiz de ters yönde kendi etrafında dönüyor. Kafa için ise mıknatıs kullanmayı düşünüyorum ama onları bölüm 2\u0026rsquo;de anlatacağım.\nProjemin şu anki halinin kısa bir tanıtım videosu :\nYapılışına geçecek olursak ilk önce model küremizi yerinden çıkarıp dışındaki harita kısmını soyuyoruz. Sonra ortadan ikiye ayırıyoruz. Maket bıçağı yardımıyla kolayca yapılabilecek bir işlem.\n2 adet 360 derece dönebilen servomuzu delikli pertinanks üzerine sabitliyoruz. Sağlamlığından emin olmak için plastik kelepçe kullanabiliriz. Servonun uçlarına kalın bir atacı şekillendirip takıyoruz. Penseyle küre kenarına göre şekillendirip bant ve sıcak silikon kullanarak kürenin kenarlarına sabitliyoruz. Ben devremi küçük bir pertinanks üzerine lehimledim. Devrede 1 adet Arduino Nano, 1 adet Bluetooth Modulü (HC-06), 1 adet motor sürücü devresi (Servolardan birini kontrol etmek için gerekli oldu 360 derece dönmesi için modifiye edince) ve yanlardaki 2 adet servoya da doğrudan bağlantı var. Devremi sabitlemeden önce pertinanksın altına ağırlığı taşıyacak bu sefer daha küçük bir servo sabitledim. Sabitlemek için plastik kelepçe bant kullandım. Sonra da devremi yukarı sabitledim.\nAğırlık olarak aşağıdaki kilit mekanizmasını kullandım ataç kullanarak onu alt taraftaki servoya monte ettim. Ama ağırlığımızın disk şeklinde olması gerekiyor sonraki versiyonda değiştireceğim.\nEn son olarak pili de ekleyince kürenin içinin son görüntüsü aşağıdaki gibi oldu. Bundan sonra tek yapmam gereken kendi yazdığım android programını çalıştırıp küreyi kapatıp BB-8 Droidimizi denemek. Kodları ve Android programı 2. bölümde paylaşacağım. Tekrar görüşmek üzere.\n","permalink":"https://mozanunal.com/2016/01/star-wars-bb-8-robot-yapm-bolum-1/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003cbr\u003e\nBu seferki projem Star Warsa son film ile katılan BB-8 isimli droidin bir\nbenzerini yapmak. Bu fikir aklıma nereden geldi derseniz. Son filmdeki en\nsempatik ve ilgi çekici karakterin BB-8 olduğunu düşünüyorum. Tabi ilk aklıma\ngelen nasıl çalıştığı\u0026hellip; Farklı fikirler yürütürken kendimi bu droidi nasıl\nyaparım diye tasarımlar yaptığım bir projenin içinde buluverdim. Elle tutulur\ntasarımlar ortaya çıkmaya başlayınca malzemelerimi topladım ve projeye başladım.\nProje oldukça uzun ve daha çok mekanik bir proje bu yüzden 2 parçaya ayırdım\nkalanını ne zaman bitiririm bilmiyorum. Şu an devam edemiyorum çünkü lipo\npillerim bitti ve şarj aletini malesef istanbulda unutmuşum. Neyse projemize\ngeçelim.\u003c/p\u003e","title":"[TR] Star Wars BB-8 Robot Yapımı"},{"content":"Herkese Merhabalar,\nBugünkü yazımda web tabanlı programlardan bahsetmek istiyorum. Web teknolojilerinin gelişmesiyle beraber browser tabanlı oldukça yararlı ve kullanımı da bir o kadar kolay programlar ortaya çıkmaya başladı. Hatta bunun bir üst aşaması olarak ChromeOS browser tabanlı bir işletim sistemi bile var. Ayrıca bu tarz programların projelerine dosyalarına her bilgisayardan ulaşabilmek, kurulum yapmadan bir çok şeyi halletme gibi avantajları da var. Böyle olunca ben de bu şekilde çalışan yararlı programları bir yazı altında toplamak istedim. Bilmediğim daha bir sürü program olduğuna eminim eğer bana yollayabilirseniz onları da yazıya ekleyebilirim.\nScheme It https://www.digikey.com/schemeit/\nDevre şeması çizilebilen pcb tasarlanabilen programdır. Digikey tarafından geliştirilmektedir. Kayıt olmanıza bile gerek yok tıklayın ve devrenizi çizmeye başlayın.\nCodenvy https://codenvy.com/\nBrowser üzerinden kod yazıp yazdığınız kodları derleyebileceğiniz bulut tabanlı ide. Desteklediği programramlama dili yelpazesi ise oldukça geniş.\n123D Circuits https://123d.circuits.io/\nElektronik devreler tasarlayıp simüle edip devreleriniz için PCB tasarlayabilirsiniz. Simülasyonlarınızda Arduino kullanabilirsiniz istediğiniz kodları da yüklemeniz mümkün. Programın kullanımı oldukça basit ve ciddi işler çıkarılabiliniyor. Autodesk firması tarafından geliştirilmekte olan bir program.\nPixlr https://pixlr.com/editor/\nBrowser üzerinden fotoğraf düzenleyebileceğiniz bir program. Kayıt bile olmadan direk kullanmaya başlayabiliyorsunuz.\nCodebender https://codebender.cc/\nTarayıcı tabanlı Arduino IDE\u0026rsquo;sı kütüphane desteği ve kod paylaşımı yönünden çok iyi durumda. Kodunuzu yazıp kütüphanelerinizi online olarak ekleyip kodunuzu derleyip Arduino\u0026rsquo;ya yükleyebiliyorsunuz.\nC9 https://c9.io/\nCodenvy gibi bu da browser tabanlı bir IDE. Bir sürü programlama dili seçeneği mevcut.\nDesignmantic https://www.designmantic.com/\nLogo dizayn programı, çok geniş bir ayar yelpazesi sunuyor ve kullanımı çok basit. Afiş kartvizit dizaynı gibi seçenekleri var.\nWolfram Alpha https://www.wolframalpha.com/examples/\nBu site hakkında sayfalarca yazı hazırlanabilir sanırım. En başta matematik problemlerini çözmek için ortaya çıkmış site veri tabanını o kadar genişletti ki çözüm sunduğu şeyler buraya sığdıramayacağım kadar uzun. Görüntü işleme ile resimdeki nesnelerin tahmin edilmesinden, müzikten, alışverişten, yiyecek içeceğe varıncaya kadar geniş bir konuya yayılmış durumda. Bir çok bilimsel hesaplamayı kolayca yapabilir üstüne nasıl yapılacağını da buradan öğrenebilirsiniz. Üniversiteleri araştırıp eğitim kariyerinizi planlayabilirsiniz. Günlere göre döviz kurları verilerini erişip onları istediğiniz gibi işleyebilirsiniz. Şu anki favori sitelerimden biri.\nBiodigital Human 3D https://human.biodigital.com/index.html\nBu da oldukça etkileyici bir çalışma. Human 3D programı kapsamında insan vücudu en küçük kılcallarına kadar modellenmiş. İstediklerinizi seçip istediklerinizi kaldırıp katman katman inceleyebilmeniz mümkün. Bir sürü hastalık için de yazılar ve vücuttaki hangi bölgeleri etkilediğini gösteren animasyonlar oluşturulmuş. Ayrıca bir kaç tık ile örneğin kolun anatomisine ulaşıp her hangi bir kasın üzerine tıklayıp işlevine ulaşabilirsiniz.\nMIT App Invertor https://appinventor.mit.edu/explore/\nMIT App Inventor görsel programlama kullanarak Android programları yapmanıza yarayan bir sitedir. 5 dakika içerisinde android programınızı yapıp telefonunuza yükleyebilirsiniz. Arayüzü ve arkasındaki tüm kodu sürükle bırak ile tasarlıyorsunuz ama bu basitliği yapabileceklerinizi neredeyse hiç sınırlamıyor. Bir çok sorunuzu çözecek uygulamaları kolayca yapmanız mümkün.\nTalky https://talky.io/\nBasit video chart programı. Sadece bir kaç link paylaşarak kolayca beraber konuşmak mümkün.\nDraw.io https://www.draw.io/\nBasit bir şema, flowchart, tablo çizme programı. Direk google drive veya dropbox üzerinden çalışılabiliyor. Kullanımı kolay aynı zamanda başarılı ve çok fazla çeşit çizimler yaratabileceğiniz bir program.\n","permalink":"https://mozanunal.com/2016/01/web-tabanl-programlar/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003cbr\u003e\nBugünkü yazımda web tabanlı programlardan bahsetmek istiyorum. Web\nteknolojilerinin gelişmesiyle beraber browser tabanlı oldukça yararlı ve\nkullanımı da bir o kadar kolay programlar ortaya çıkmaya başladı. Hatta bunun\nbir üst aşaması olarak ChromeOS browser tabanlı bir işletim sistemi bile var.\nAyrıca bu tarz programların projelerine dosyalarına her bilgisayardan\nulaşabilmek, kurulum yapmadan bir çok şeyi halletme gibi avantajları da var.\nBöyle olunca ben de bu şekilde çalışan yararlı programları bir yazı altında\ntoplamak istedim. Bilmediğim daha bir sürü program olduğuna eminim eğer bana\nyollayabilirseniz onları da yazıya ekleyebilirim.\u003c/p\u003e","title":"[TR] Web Tabanlı Programlar"},{"content":"Merhaba Arkadaşlar,\nBugünkü yazımda bir radyo modülünün teorik olarak ne kadar uzaklıkta çalışabildiğini hesaplayan projemi paylaşacağım. Amacım haberleşme modülleri seçilirken kolayca karşılaştırmalar yapılabilecek basit bir hesaplama ortamı oluşturmaktı. Bu tarz işler için en uygun program olduğunu düşündüğüm Excel programını kullandım.\nÖncelikle bu hesabı anlamama şuradaki link çok yardımcı oldu. Öncelikle onu incelemenizi tavsiye ederim. Oradaki bilgileri kısaca özetleyecek olursam:\nİlk olarak mesafeyi temel olarak etkilen 2 kavram var. Birincisi vericinin çıkış gücü, ikincisi ise alıcının alış hassasiyeti. Özellikle 2. etken sık sık önemi unutulan konulardan biri. Genelde aktarılan veri akış hızının artmasıyla alış hassasiyeti düşmektedir. Yeterli olacak minimum veri akış hızını seçmek de önemli noktalardan bir tanesidir. Çıkış gücüne anten ve kuvvetlendirici kazançları da eklenir. Bulunan bu değere toplam güç denir. Hesabımızı belirleyen bağıntı ise şöyledir:\nAlış Hassasiyeti \u0026lt; Toplam güç – Yol Zayıflaması Kaybı Eğer burayı eşit olarak alırsak maksimum mesafeyi hesaplamış oluruz ama ideal ortam için hesaplarımızı yaptığımız için büyük bir hata payı koymanızı tavsiye ederim (gerçekçi sonuçlar için)\nŞimdilik ben bir hata payı eklemedim çünkü donanımdan ve kullanım şeklinden ve daha bir sürü şeyden çok değişebilir. Maksimum üzerinden devam edelim. Yol zayıflamasının maksimum değerini de aşağıdaki gibi elde etmiş oluruz.\nToplam güç (dBm) - Alış hassasiyeti (dBm) = Yol Zayıflaması (dB) Yol zayıflamasını kullanarak mesafe ise aşağıdaki gibi hesaplanır.\nYol Zayıflaması (dB) - 20.log10(Frekans, MHz) + 27.55 = 20.log10(Mesafe, Metre) Çok önemli uyarı: Yaptığımız bu hesapla ortaya çıkan sonuç en idael koşullar için geçerlidir. Neleri hesaba katmadığımızı şöyle sıralayabiliriz:\nÖncelikle yaptığımız hesap Line of sight mesafe hesabı aradaya girebilecek hiç bir engel hesaba katılmadı. ( Dağ, ağaç, direk,) Hesaplar boş uzay için yapıldı. Havanın etkisi ve hava olaylarının etkisi hiç hesaba katılmadı. Yakın frekanslardaki her sinyal mesafeyi kısaltıcı etki gösterecektir. Antenlerin yapısındaki hatalar, çevresindeki nesnelerin \u0026ldquo;radiation pattern\u0026rdquo; yapacağı gürültüler hesaba katılmadı Anten kablolarında meydana gelebilcek kayıplar hesaba katılmadı. Gördüğünüz gibi bu şartlar altında burada hesaplayacağınız mesafe gerçekte elde edeceğinizden çok daha uzun olacaktır (Deneyimlerimde 10da biri 20de biri gibi mesafelerle karşı karşıya kaldım). Ama bu exceli farklı modulleri kıyaslamak için kolaylıkla kullanabilirsiniz\nRF mesafe hesaplama excelinin buradan indirebilirsiniz.\n","permalink":"https://mozanunal.com/2016/01/rf-mesafe-hesaplama-exceli/","summary":"\u003cp\u003e\u003cstrong\u003eMerhaba Arkadaşlar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBugünkü yazımda bir radyo modülünün teorik olarak ne kadar uzaklıkta\nçalışabildiğini hesaplayan projemi paylaşacağım. Amacım haberleşme modülleri\nseçilirken kolayca karşılaştırmalar yapılabilecek basit bir hesaplama ortamı\noluşturmaktı. Bu tarz işler için en uygun program olduğunu düşündüğüm Excel\nprogramını kullandım.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.mikrodalgamuhendisi.com/index.php/rf-soru-cevap-anasayfa/90-yeni-baslayanlar-icin-iletisim-mesafesi-hesab\"\u003eÖncelikle bu hesabı anlamama şuradaki link çok yardımcı oldu\u003c/a\u003e.\nÖncelikle onu incelemenizi tavsiye ederim. Oradaki bilgileri kısaca özetleyecek\nolursam:\u003c/p\u003e\n\u003cp\u003eİlk olarak mesafeyi temel olarak etkilen 2 kavram var. Birincisi vericinin çıkış\ngücü, ikincisi ise alıcının alış hassasiyeti. Özellikle 2. etken sık sık önemi\nunutulan konulardan biri. Genelde aktarılan veri akış hızının artmasıyla alış\nhassasiyeti düşmektedir. Yeterli olacak minimum veri akış hızını seçmek de\nönemli noktalardan bir tanesidir. Çıkış gücüne anten ve kuvvetlendirici\nkazançları da eklenir. Bulunan bu değere toplam güç denir. Hesabımızı belirleyen\nbağıntı ise şöyledir:\u003c/p\u003e","title":"[TR] RF Mesafe Hesaplama Exceli"},{"content":"Herkese Merhabalar,\nBu yazımda 5 $ dolara aldığım Saleae marka logic analyzerın (aslında orjinal ürün değil aldığım, o ürünün klonu) incelemesini paylaşmak istiyorum. Bu ürünü seçmemin nedeni fiyat performans oranını çok beğenmem ve dijital elektronikle uğraşan herkesin vazgeçilmezlerinden biri olacağını düşünmem.\nÖncelikle logic analzer nedir ile başlayalım. Logic analyzer, belli süre aralıklarında bir sinyali örnekleyerek oradaki sinyal seviyesinin binary olarak kaydedilmesini ve incelenebilmesini sağlayan alettir. Aynı zamanda bazılarında gelen bu binary verileri işleyip farklı protokoller kullanarak çözebilme özelliği vardır.\nSaleae Logic Anayzer\u0026rsquo;ın özelliklerini sayacak olursam şöyle:\n25 Mhz maximum örnekleme hızına sahip 8 Kanal I2C, I2S, SPI, Serial, Paralel, Can, DMX-512, Manchester gibi protokolleri kolaylıkla çözebilirsiniz. Pulse analizleri için de büyük kolaylıklar var. Mesela otomatik frekans, pulse witdh hesaplama gibi. Boyutları oldukça küçük Arayüzü ve kullanımı çok basit Kullanımına gelecek olursak Buradan bilgisayarda kullanabileceğiniz arayüz programını indirebilirsiniz.\nKurulum ve kullanımı da oldukça basit. Standart bir kurulum işlemi var. Kullandım için de almak istediğiniz örnekleme sayısı ve örnekleme frekansını arayüze giriyorsunuz. Analyzers ekmesinden istediğiniz protokolü de ekleyebilirsiniz. Sonrasın \u0026ldquo;Start Simulation\u0026rdquo; tuşuna basarak devam edebilirsiniz. Şimdilik anlatacaklarım bu kadar, tekrar görüşmek üzere\u0026hellip;\n](https://4.bp.blogspot.com/-iX_AqQzvCK4/Vn7FfbsXBdI/AAAAAAAAXOM/o79jXa9N29o/s1600/Capture.PNG)\n","permalink":"https://mozanunal.com/2015/12/5-logic-analyzer/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar\u003c/strong\u003e,\u003c/p\u003e\n\u003cp\u003eBu yazımda 5 $ dolara aldığım Saleae marka logic analyzerın (aslında orjinal\nürün değil aldığım, o ürünün klonu) incelemesini paylaşmak istiyorum. Bu ürünü\nseçmemin nedeni fiyat performans oranını çok beğenmem ve dijital elektronikle\nuğraşan herkesin vazgeçilmezlerinden biri olacağını düşünmem.\u003c/p\u003e\n\u003cp\u003eÖncelikle logic analzer nedir ile başlayalım. Logic analyzer, belli süre\naralıklarında bir sinyali örnekleyerek oradaki sinyal seviyesinin binary olarak\nkaydedilmesini ve incelenebilmesini sağlayan alettir. Aynı zamanda bazılarında\ngelen bu binary verileri işleyip farklı protokoller kullanarak çözebilme\nözelliği vardır.\u003c/p\u003e","title":"[TR] 5$ Logic Analyzer"},{"content":"Herkese Merhabalar,\nBu yazımda arduino kullanarak nasıl basit, ucuz ve işlevli bir RC kumanda yapabileceğimizi anlatacağım. Yapacağımız RC kumanda ile istediğiniz türde aracı, istediğiniz kadar kanalla kontrol etmeniz mümkün. Benim uygulamamda 2 adet 2 eksen joystick ve 1 potansiyometre bulunuyor. Yani 5 kanallı örnek bir uygulama yaptım. Öncelikle malzemelerden başlayalım.\nArduino Nano Nrf24l01 1 adet 10k potansiyometre 1 adet 10k direnç 2 adet 2 eksen joystick modulü Bu malzemelerle beraber toplam maliyetimiz 7- 8 dolar civarı oluyor. Maximum kullanım mesafesi ise 30 40 metre civarında hobi uygulamarına göre oldukça yeterli bir mesafe elde ediyoruz.\nBağlantılara gelecek olursak nrf24 modülü SPI ile çalışıyor. Arduino\u0026rsquo;nun uygun SPI pinlerine bağlıyoruz. Şemasını kolayca bulabilirsiniz. Joystick modulleri için de bir tanesi için 2 analog giriş olmak üzere Arduino Nanonun toplam 4 tane analog giriş pinin kullanıyoruz. Potansiyometrenin kullanımı için de 1 adet analog giriş pini kullanıyoruz.\nKumandanın koduyla alakalı olarak değinmek istediğim bir kaç nokta var. Baştaki ayarlarda nrf ile ilgili ayarlar yapılıyor. Bu modülle alakalı bir kaç önemli nokta şöyle:\nKanal seçimi çok önemli 2.4 ghz çok kullanılan bir frekans ve uygun kanal seçilmezse çok gürültü olabilir. Kanal taraması için arduino kodları var, doğru kanalı bulmak için onlardan yararlanabilirsiniz. Nrf24 modülü 3.3 volt ile çalışıyor. Fakat çektiği yüksek akım sebebiyle Arduino Nanonun 3.3 V pininden beslemesi biraz riskli. Onun yerine 5V pininin voltajını 2 diyot yardımıyle düşürüp öyle besledim. Harici bir regülatör bağlamak çok daha akla yatkın bir çözüm olacaktır tabi :) Payload size 10 olarak belirledim. Nedeni 5 adet integer verisi yollamam 2*5=10 byte göndermem gerekiyor. Normalde bir paket 32 byte fakat 10 byte ile sınırlandırarak rf modulünüzün performansını artırabilirsiniz. Başta belirlediğim ID sayesinde farklı birden fazla ID belirleyerek, birden fazla sayıda aracı kontrol edebilirsiniz. Max angle 12 veya datatosend[2]=-1*(analogRead(3)-500)*Max_angle/500; gibi satırlar tamamen kullanıma örnek olması amacıyla konmuştur. Yapmanız gereken sadece joysticklerden veya potansiyometreden aldığınız veriyi nasıl göndermek isterseniz o şekile çevirip \u0026ldquo;datatosend\u0026rdquo; array elemanlarına eşitlemektir. İstediğiniz türde aracı veya çok fazla farklı kanalı bu şekilde rahatça kontrol edebilirsiniz.\nKumanda Kodu\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include \u0026lt;SPI.h\u0026gt; #include \u0026lt;RF24.h\u0026gt; #include \u0026#34;nRF24L01.h\u0026#34; RF24 radio(7,8); int ID=1; int Max_angle=12; void setup() { radio.begin(); radio.setPayloadSize(10); radio.setChannel(80); radio.openWritingPipe(0xF0F0F0F0F0); radio.openReadingPipe(1,0xF0F0F0F0AA); radio.startListening(); } void loop() { int datatosend[5]; datatosend[0]=ID; datatosend[1]=(analogRead(0)-500)*2; datatosend[2]=-1*(analogRead(3)-500)*Max_angle/500; datatosend[3]=(analogRead(4)-500)*Max_angle/500; datatosend[4]=-1*(analogRead(1)-500)*Max_angle/500; datatosend[5]=(analogRead(2)-500)*Max_angle/500; radio.stopListening(); radio.write( datatosend, sizeof(datatosend) ); radio.startListening(); delay(50); } Aşağıdaki kod ise RC verilerini almak için gerekli fonksiyondur değiken boyutlarını ayarlayarak channel sayısını artırabilirsiniz. Tabi ki bu kodu kontrol edeceğiniz aracın koduna eklemeniz gerekmektedir.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 void Rc_Update() { int incomingdata[6]={0,0,0,0,0,0}; radio.read( incomingdata, sizeof(incomingdata) ); if(incomingdata[0]==ID) { ch_1=incomingdata[1]; ch_2=incomingdata[2]; ch_3=incomingdata[3]; ch_4=incomingdata[4]; ch_5=incomingdata[5]; } Serial.print(\u0026#34;RC=\u0026#34;); Serial.print(ch_1); Serial.print(\u0026#34;,\u0026#34;); Serial.print(ch_2); Serial.print(\u0026#34;,\u0026#34;); Serial.print(ch_3); Serial.print(\u0026#34;,\u0026#34;); Serial.print(ch_4); Serial.print(\u0026#34;,\u0026#34;); Serial.print(ch_5); Serial.println(); } ","permalink":"https://mozanunal.com/2015/11/diy-rc-kumanda-yapm/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBu yazımda arduino kullanarak nasıl basit, ucuz ve işlevli bir RC kumanda\nyapabileceğimizi anlatacağım. Yapacağımız RC kumanda ile istediğiniz türde\naracı, istediğiniz kadar kanalla kontrol etmeniz mümkün. Benim uygulamamda 2\nadet 2 eksen joystick ve 1 potansiyometre bulunuyor. Yani 5 kanallı örnek bir\nuygulama yaptım. Öncelikle malzemelerden başlayalım.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eArduino Nano\u003c/li\u003e\n\u003cli\u003eNrf24l01\u003c/li\u003e\n\u003cli\u003e1 adet 10k potansiyometre\u003c/li\u003e\n\u003cli\u003e1 adet 10k direnç\u003c/li\u003e\n\u003cli\u003e2 adet 2 eksen joystick modulü\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eBu malzemelerle beraber toplam maliyetimiz 7- 8 dolar civarı oluyor. Maximum\nkullanım mesafesi ise 30 40 metre civarında hobi uygulamarına göre oldukça\nyeterli bir mesafe elde ediyoruz.\u003c/p\u003e","title":"[TR] DIY RC Kumanda Yapımı"},{"content":"Herkese Merhabalar,\nBu yazdımda ilk mikroişlemcilerden biri olan 8051 mikrokontrolcüsü üzerinden assembly dili ve mikroişlemci nedir nasıl çalışır bu konulara giriş yapmak istiyorum. Başlamadan önce benim de kullanacağım 8051 entegresi simülasyon programını önermek istiyorum. Programın ismi EdSim51. İlkönce mikroişlemcilerle alakalı temel bir kaç kavramla başlayalım.\nROM(Read Only Memory): Temel olarak, belli bir miktarda bilginin kalıcı olarak yazıldığı bellektir**.** Bilgi saklamak için\nEEPROM: ROM\u0026rsquo;un yeniden yazılabilir halidir.\nRAM(Random Access Memory): Bilgi saklamak için elektriğe ihtiyaç duyar. CPU veri işlemek için kullandığı bellek tipi RAM\u0026rsquo;dir.\nRegisters: CPU registerları verileri geçici olarak saklamak için kullanılır. 8051 entegresinde bir tane data çeşidi vardır. O da 8 bittir. Eğer 8 bitten büyük datalarla işlem yapılmak istenirse data 8 bitlik parçalara ayrılmalıdır. 8051\u0026rsquo;de en çok kullanılar registerlar aşağıdaki gibidir.\nA (accumulator) : Lojik ve numeric işlemleri gerçekleştirmede kullanılır R0, R1, R2, R3, R4, R5, R6 : Genel amaçlı registerlar DTPR (data pointer) : low ve high olmak üzere 2 bytedan oluşur bu sayede 16 bitlik veri saklanır. PC (program counter) : Programın Kod hafızasındaki kaçıncı işlemde olduğunu tutar PSW (Program Status Word) : Aşağıda tekrar değineceğim Stack Pointer Register: Yine 8 bitlik stackin en üzerindeki adresi gösteren registerdır. 1.8051 Entegresi Bazı Assembly Komutları ve Örnekleri MOV Komutu: Bir registera veri yüklemek için kullanılır. Kullanımı şöyledir:\nMOV data yüklenecek register, yüklenecek data\n1 MOV A,#51H A registerına 51 hexadecimal sayısı yükleniştir. # Bir sayı olduğunu görtermek için kullanılmıştır.\n51 yüklenecek hexadecimal sayımız. Değeri 5x16+1=81\nH sayının hexadecimal olduğunu göstermek için kullanılır. Binary için B, Decimal için D kullanılır.\nEğer hexadecimal sayısı harfle baslıyorsa başına 0 koyulur.\nAşağıdaki kod grubunu çalıştırdığımızda simülasyon programımızın son görüntüsü aşağıdaki gibi olacaktır.\n1 2 3 4 5 MOV A,#51H MOV R1,#0FFH MOV R2,#3BH Görüldüğü gibi R1 R2 ve Accummulatora veriler yüklenmiştir.\nORG ve END Komutları\nOrg CPU\u0026rsquo;ya kaçıncı code memory satırıncan başlamısı gerektiğini söyleyen komuttur. Aşağıdaki gibi kullanılır.\n1 2 3 4 5 6 7 ORG 0H MOV R1,#31H MOV R2, 20H MOV R3,R2 MOV R4,R3 HERE: SJMP HERE END ADD Komutu\nToplama komutudur kullanımı şöyledir.\nADD Toplamın saklanacağı yer, eklenecek bilgi\nADD A,R1\nA=A+R1 olur.\nADD R1, A olamaz. Toplamın saklanacağı yer hep Accumlator registeri olmalıdır.\n1 2 3 4 5 ADD A, @R2 : R2 registerinin sakladığı adresteki ramde tutulan değer A\u0026#39;ya eklenir ADD A, 05 : 05 adresindeki ramde tutulan değer A\u0026#39;ya eklenir. ADD A, #05 : 05 sayısı A\u0026#39;ya eklenir. Bazı toplamalarda sonuç 255den büyük çıkabilir. Bu durumda bir eldemiz olmuş olur. Peki 8051 bu durumla nasıl başa çıkıyor. PSW registerını kullanarak tabi ki:\nPSW Registerı\n8 bitlik bir registerdır. Her biri ayrı bir durumu tutar.\nCY (PSW.7): Carry Flag yani eldeyi tutan bit budur. CLR C komutu ile temizlenebilir.\nAC (PSW.6); Auxiliary Carry Flag D3 bitinden D4 bitine elde olduğunda 1 olan bittir.\nF0 (PSW.5 ve PSW.1); Kullanıcının kendi tanımlayacağı şeyler için ayrılmıştır.\nRS1 and RS0 (PSW.4 ve PSW.3): Register Bank değiştirmak için kullanılır.\nOV (PSW.2): Over flow flag\u0026rsquo;tir.\nP (PSW.0): Parity Flagtır. Accumulatordaki sayı tek ise 1, çift ise 0dır.\nSUBB komutu\nÇıkarma işlemi komutudur.\nSUBB A,B\nA=A-B\nMUL komutu\nÇarpım komutudur.\nMUL AB şeklinde kullanılır arada virgül yoktur. Sadece A ve B registerları kullanılabilir.\nA=A.B\nDIV komutu\nBölme komutudur.\nDIV AB şekilde kullnılır arada virgül yoktur. Sadece A ve B registerları kullanılabilir.\nA=A/B\nLoop ve Jump komutu\nLoop oluşturmak için kullanılan komutlar yukarıdaki gibidir. Hepsi farklı bir koşulu kullanmak içindir. Aşağıdaki örnek kod ise kullanımlarına örnektir.\n1 2 3 4 5 6 7 8 9 10 11 12 13 ORG 0H MOV A, #0 ; clear A MOV R1, #10 ; load counter R1 =10 AGAIN: ADD A, # 05 ; add five to register A DJNZ R1, AGAIN ; repeat until R1=0 (10 times) MOV R3, A ; save A in R3 END SJMP: Program counterdan en fazla yarım byte uzaklıklarda bulunan bir yere atlamak için kullanılır.\nLJMP: Program counterdan yarım bytedan fazla uzaklıklarda bulunan bir yere atlamak için kullanılır.\nLCALL: Fonksiyon tanımlayıp çağırmak benzeri bir kullanımı vardır. Aşağıdaki örneği inceleyebilirsiniz.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 ORG 0H BACK : MOV A, #55H ; load A= 55 hex value MOV P1, A ; issue value of register A to port1 LCALL DELAY ; to call DELAY function created below MOV A, #0AAH ;load AAH hex value to A MOV P1,A ;issue value of register A to port 1 LCALL DELAY ; to call DELAY function as created below SJMP BACK ; keep doing this ; ________ this is the delay subroutine DELAY: MOV R5, #0FFH ; R5= 255 hex, the counter AGAIN: DJNZ R5, AGAIN ; stay here until R5 becomes zero RET ; return to caller END MOVX komutu MOVX komutu harici RAM\u0026rsquo;den veri alış verişi yapmak için kullanılır.\n1 2 MOV R0, #50H MOVX A, @R0 Bu iki satır kod ile harici RAM\u0026rsquo;deki 50H adresli yerdeki veri Accumulator registerına yüklenir.\n1 2 MOV DTPR, #5000H MOVX A, @DTPR DTPR registerı 16 bitliktir. Eğer 8 bitten büyük adresteki bir veriye ulaşılmak istenirse DTPR registerı kullanılabilir.\nPOP ve PUSH komutu\nStack işlemleri için kullanılır. Stack ilk giren datanın en son çıktığı veri yapısı çeşididir.\n1 2 3 4 5 6 MOV R6,#25H; MOV R1,#12H; MOV R4,#OF3H; PUSH 06H; PUSH 01H; POP 04H; Bu kod şöyle çalışacaktır. 25H sayısı (R6) stack\u0026rsquo;e eklenir. 12H sayısı stack\u0026rsquo;e eklenir. 12H sayısı stackten çıkarılır.\nXCH komutu\nXCH A, R2 şeklinde kullanılır. A ve R2nin içeriklerini değiştirir böyle kullanıldığında.\nMOVC komutu\nHarici RAM ve ROM kullanımı 8051 ile harici ram veya romlar çalıştırılabilir. Bunun için öncelikle 8051 üzerindeki bazı pinlerin ne işe yaradığıyla başlayalım.\nALE/PROG pini: Adress Latch Enable. Harici ram erişimi sırasında kullanılır. Mandallama işlevi vardır.\nPSEN pini: Program Store Enable. Harici program hafızasından veri okunacağı zaman kullanılır. Ayrıca harici rom veya epromlara OE giriş pini olarak da kullanılır.\nEA pini: External Adress. 0 olduğu zaman mikrokontrolcü program kodunu dışarıdan alabilir.\nRD pini: Okuma işlemini \u0026ldquo;enable\u0026rdquo; yapmak için kullanılır.\nWR pini: Yazma işlemini \u0026ldquo;enable \u0026quot; yapmak için kullanılır.\nHarici Program Belleği Kullanımı\nHarici Veri Belleği Kullanımı\nAdres Ayrıştırma\nBazı durumlarda adres değerleri için yeterli bit sayısına sahip olunamayabilir. Bu soruları çözmek için adres çözücü devreler kullanılır.\nParalel Uygulamalar ADC-DAC Kullanımı Timer Uygulamaları Uzun Lafın Kısası Aşağıdaki 2 görsel işlemci mimarisini çok iyi açıklayan 2 şema peki bize ne anlatıyorlar.\n8051 Entegresi Instruction Set Aşağdaki linkte hepsini kullanım anlatımlarıyla beraber bulabilirsiniz. Aynı zaman da OP-Code\u0026rsquo;ları da verilmiştir.\nhttps://www.win.tue.nl/~aeb/comp/8051/set8051.html](https://www.win.tue.nl/~aeb/comp/8051/set8051.html)\nAşağıdaki 2 resimde ise sık kullanılan komutları açıklamalarıyla bulabilirsiniz.\n","permalink":"https://mozanunal.com/2015/11/8051-entegresi-ile-assembly/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003cbr\u003e\n       Bu yazdımda ilk mikroişlemcilerden biri olan 8051 mikrokontrolcüsü\nüzerinden assembly dili ve mikroişlemci nedir nasıl çalışır bu konulara giriş\nyapmak istiyorum. Başlamadan önce benim de kullanacağım 8051 entegresi\nsimülasyon programını önermek istiyorum. Programın ismi EdSim51. İlkönce\nmikroişlemcilerle alakalı temel bir kaç kavramla başlayalım.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eROM(Read Only Memory):\u003c/strong\u003e Temel olarak, belli bir miktarda bilginin kalıcı\nolarak yazıldığı bellektir**.** Bilgi saklamak için\u003cbr\u003e\n\u003cstrong\u003eEEPROM:\u003c/strong\u003e ROM\u0026rsquo;un yeniden yazılabilir halidir.\u003cbr\u003e\n\u003cstrong\u003eRAM(Random Access Memory):\u003c/strong\u003e Bilgi saklamak için elektriğe ihtiyaç duyar. CPU\nveri işlemek için kullandığı bellek tipi RAM\u0026rsquo;dir.\u003cbr\u003e\n\u003cstrong\u003eRegisters:\u003c/strong\u003e CPU registerları verileri geçici olarak saklamak için kullanılır.\n8051 entegresinde bir tane data çeşidi vardır. O da 8 bittir. Eğer 8 bitten\nbüyük datalarla işlem yapılmak istenirse data 8 bitlik parçalara ayrılmalıdır.\n8051\u0026rsquo;de en çok kullanılar registerlar aşağıdaki gibidir.\u003c/p\u003e","title":"[TR] 8051 Entegresi İle Assembly Programlamaya Giriş"},{"content":"Hi,\nIn this article, DIY Raspberry Pi Laptop project will be told. I needed a low cost mini computer with high mobility but then i decided to make my own and i start to this project. Most of the parts(expect Raspberry pi 2 and its some of materials) were bought from china and the total cost of this project is 110$. There is video of this project under this paragraph. You can watch this then you learn how i did this project step by step.\n[![](https://1.bp.blogspot.com/-32Tefe5cxxQ/VfQJVHRLDKI/AAAAAAAANq0/a35hSfl8s2s/s320/IMG_20150912_123948.jpg)](https://1.bp.blogspot.com/-32Tefe5cxxQ/VfQJVHRLDKI/AAAAAAAANq0/a35hSfl8s2s/s1600/IMG_20150912_123948.jpg) 1. Raspberry Pi 2\nFirst, I want to start with Raspberry Pi 2. Raspberry pi is a mini computer that contains all the Pc compenents. Raspberry Pi 2 is the lastest version of it and it\u0026rsquo;s price is 35 $.\n2. Why Raspberry Pi Laptop?\nRaspberry pi 2 is a great platform for developing software but it is hard to find screen and keyboard everywhere. It decreases the portability of Raspberry Pi. In addition, it has a lot of input-output ports like 4 USB ports, 1 HDMI port. Third reason is low power consumption of Raspberry. The total power consumption of my system is 7.8 watt. It drains 650 mA from 3s lipo battery.\n3. Materials and Cost\nRaspberry Pi 2 35$\n4 Gb SD Cart 4$\nN070ICG-LD1 LCD Screen 45$\nHDMI Cable 3$\nTablet Case with Keyboard 4$\nUSB WIFI Adapter 5$\nLM2596 Regulater 2$\n1500 Mah 3S Lipo Battery 10$\nMouse 2$\n1 Meter Cable Cover. 2$\nTotal: 110$\n[![](https://3.bp.blogspot.com/-R-gtqqx3Djg/VfQJihkQa7I/AAAAAAAANq8/mHuuXTTYp6E/s320/IMG_20150903_182823.jpg)](https://3.bp.blogspot.com/-R-gtqqx3Djg/VfQJihkQa7I/AAAAAAAANq8/mHuuXTTYp6E/s1600/IMG_20150903_182823.jpg) Most of materials at the photo. I changed the battery after this photo. There are some of the materials below this photo. [![](https://4.bp.blogspot.com/-eOD2oDFN4k0/VfQJio0SdVI/AAAAAAAANq8/dVaLjcnmCL8/s320/IMG_20150903_182908.jpg)](https://4.bp.blogspot.com/-eOD2oDFN4k0/VfQJio0SdVI/AAAAAAAANq8/dVaLjcnmCL8/s1600/IMG_20150903_182908.jpg) **N070ICG-LD1 LCD Screen** The price of the screen is 45$ and you can find screen at same size for 20$. I choice this screen because of its quality. [![](https://4.bp.blogspot.com/-Dj_kyMUipJA/VfQJisZseoI/AAAAAAAANq8/ezXxDCD8tiQ/s320/IMG_20150903_182848.jpg)](https://4.bp.blogspot.com/-Dj_kyMUipJA/VfQJisZseoI/AAAAAAAANq8/ezXxDCD8tiQ/s1600/IMG_20150903_182848.jpg) **Raspberry Pi 2** [![](https://2.bp.blogspot.com/-R_Bkw6xovPI/VfQJii4lFYI/AAAAAAAANq8/3FCPmQY9NWY/s320/IMG_20150903_182839.jpg)](https://2.bp.blogspot.com/-R_Bkw6xovPI/VfQJii4lFYI/AAAAAAAANq8/3FCPmQY9NWY/s1600/IMG_20150903_182839.jpg) [![](https://2.bp.blogspot.com/-p6EjFBHxp4Y/VfQJiuVULbI/AAAAAAAANq8/aqs710Kl1tk/s320/IMG_20150903_183244.jpg)](https://2.bp.blogspot.com/-p6EjFBHxp4Y/VfQJiuVULbI/AAAAAAAANq8/aqs710Kl1tk/s1600/IMG_20150903_183244.jpg) **Tablet Cover with Keyboard ** **1 Meter Cable Cover** The main mechanic parts of the laptop. The box build with this two. [![](https://4.bp.blogspot.com/-tZLXEaO1KC4/VfQJij-sRoI/AAAAAAAANq8/JG4ZKDFvsEw/s320/IMG_20150903_182920.jpg)](https://4.bp.blogspot.com/-tZLXEaO1KC4/VfQJij-sRoI/AAAAAAAANq8/JG4ZKDFvsEw/s1600/IMG_20150903_182920.jpg) **USB WIFI Adapter ** Its is for connecting to the internet [ ](https://2.bp.blogspot.com/-R_Bkw6xovPI/VfQJii4lFYI/AAAAAAAANq8/3FCPmQY9NWY/s1600/IMG_20150903_182839.jpg) [![](https://1.bp.blogspot.com/-9wDllKFQutM/VfQJ3vOIxCI/AAAAAAAANrI/yaYmJnTDzFw/s320/IMG_20150905_154157.jpg)](https://1.bp.blogspot.com/-9wDllKFQutM/VfQJ3vOIxCI/AAAAAAAANrI/yaYmJnTDzFw/s1600/IMG_20150905_154157.jpg)[![](https://3.bp.blogspot.com/-g_HaMldZKjk/VfQJ3mr9_CI/AAAAAAAANrI/Jjh-nEyWZeU/s320/IMG_20150905_154221.jpg)](https://3.bp.blogspot.com/-g_HaMldZKjk/VfQJ3mr9_CI/AAAAAAAANrI/Jjh-nEyWZeU/s1600/IMG_20150905_154221.jpg) **Mini Usb Cable ** ** LM2596 Regulator Module** [![](https://3.bp.blogspot.com/-msg88QCwyF4/VfQJ3s3i8gI/AAAAAAAANrI/aNO1QZDK1AI/s320/IMG_20150905_154226.jpg)](https://3.bp.blogspot.com/-msg88QCwyF4/VfQJ3s3i8gI/AAAAAAAANrI/aNO1QZDK1AI/s1600/IMG_20150905_154226.jpg)[![](https://2.bp.blogspot.com/-RGHWRLZG8gA/VfQJ3gpcIfI/AAAAAAAANrI/E9lSwrjrou0/s320/IMG_20150905_154130.jpg)](https://2.bp.blogspot.com/-RGHWRLZG8gA/VfQJ3gpcIfI/AAAAAAAANrI/E9lSwrjrou0/s1600/IMG_20150905_154130.jpg) **LM2596 Regulator ****1500 Mah 3S Lipo Battery** [![](https://4.bp.blogspot.com/-oalw0-hcRMc/VfQJijQ-iuI/AAAAAAAANq8/H3XnqNDjGA8/s320/IMG_20150903_182925.jpg)](https://4.bp.blogspot.com/-oalw0-hcRMc/VfQJijQ-iuI/AAAAAAAANq8/H3XnqNDjGA8/s1600/IMG_20150903_182925.jpg) **Keyboard and earphones** 4. Assembly Instructions\n**1. **Before starting to the assembly. I build the circuit and test it. [![](https://2.bp.blogspot.com/-c_n2wcFEuxQ/VfQJitzS-UI/AAAAAAAANq8/_LjKDyw19kk/s320/IMG_20150903_191838.jpg)](https://2.bp.blogspot.com/-c_n2wcFEuxQ/VfQJitzS-UI/AAAAAAAANq8/_LjKDyw19kk/s1600/IMG_20150903_191838.jpg) [![](https://2.bp.blogspot.com/-Th1IbnE5h2I/VfQJinRCGBI/AAAAAAAANq8/oy-ghJWil64/s320/IMG_20150903_191822.jpg)](https://2.bp.blogspot.com/-Th1IbnE5h2I/VfQJinRCGBI/AAAAAAAANq8/oy-ghJWil64/s1600/IMG_20150903_191822.jpg) [![](https://3.bp.blogspot.com/-FRkCT2jAJkc/VfQJiqAwp-I/AAAAAAAANq8/K7c820dHfAI/s320/IMG_20150903_210341.jpg)](https://3.bp.blogspot.com/-FRkCT2jAJkc/VfQJiqAwp-I/AAAAAAAANq8/K7c820dHfAI/s1600/IMG_20150903_210341.jpg) After different versions have been tried, finally the working prototype was reached. This is the schematic of the circuit. Basically, LCD screen works with 12 volt and the Raspberry Pi 2 works with 5 volt. Therefore the circuit needs a regulator. There is a switch to cut the power from the battery. When battery is charging, the battery must be switch off and the circuit can be used with DC in jack on the LCD Driver Board. It is a good solution for off battery times. [![](https://1.bp.blogspot.com/-1tK3scEPnvU/VfSgRI7g3iI/AAAAAAAANsc/53lyOWL06Mw/s640/Ads%25C4%25B1z.png)](https://1.bp.blogspot.com/-1tK3scEPnvU/VfSgRI7g3iI/AAAAAAAANsc/53lyOWL06Mw/s1600/Ads%25C4%25B1z.png) **2. **At second level Raspberry Pi 2, LCD Driver Board and lipo battery is mounted. A piece of cable cover is placed buttom side of the box. In this way, cable of the keyboard is left in the cable cover. [![](https://3.bp.blogspot.com/-cslv2cYUhl8/VfSZGWLqkaI/AAAAAAAANrk/IzQ6NK09qUI/s320/IMG_20150905_160718.jpg)](https://3.bp.blogspot.com/-cslv2cYUhl8/VfSZGWLqkaI/AAAAAAAANrk/IzQ6NK09qUI/s1600/IMG_20150905_160718.jpg)[![](https://3.bp.blogspot.com/-1VydvjB2m7Q/VfSZGV7uigI/AAAAAAAANrk/ZlKe8DV5nOY/s320/IMG_20150905_160723.jpg)](https://3.bp.blogspot.com/-1VydvjB2m7Q/VfSZGV7uigI/AAAAAAAANrk/ZlKe8DV5nOY/s1600/IMG_20150905_160723.jpg) [![](https://4.bp.blogspot.com/-pdmyBWnOYR0/VfSZnZNHjCI/AAAAAAAANrs/ldIdg21VJ1U/s320/IMG_20150905_170026.jpg)](https://4.bp.blogspot.com/-pdmyBWnOYR0/VfSZnZNHjCI/AAAAAAAANrs/ldIdg21VJ1U/s1600/IMG_20150905_170026.jpg)[![](https://3.bp.blogspot.com/-htG5Yg5TazM/VfSZndG2o6I/AAAAAAAANrs/UmdcCb3MCaQ/s320/IMG_20150905_170752.jpg)](https://3.bp.blogspot.com/-htG5Yg5TazM/VfSZndG2o6I/AAAAAAAANrs/UmdcCb3MCaQ/s1600/IMG_20150905_170752.jpg) [![](https://3.bp.blogspot.com/--NS9jrgOfwE/VfSZ_Xh732I/AAAAAAAANr0/c2yLn1K2Nuk/s320/IMG_20150905_173301.jpg)](https://3.bp.blogspot.com/--NS9jrgOfwE/VfSZ_Xh732I/AAAAAAAANr0/c2yLn1K2Nuk/s1600/IMG_20150905_173301.jpg)[![](https://3.bp.blogspot.com/-L0VPF3u_3HU/VfSZ_fEesbI/AAAAAAAANr0/UFa3UWLMi6s/s320/IMG_20150905_173306.jpg)](https://3.bp.blogspot.com/-L0VPF3u_3HU/VfSZ_fEesbI/AAAAAAAANr0/UFa3UWLMi6s/s1600/IMG_20150905_173306.jpg) **3\\.** After the montage is completed, Some duck tape is added and the circuit was tried again. [![](https://3.bp.blogspot.com/-RLGVDbsgUjQ/VfSZ_UxPzHI/AAAAAAAANr0/mgYQy0GLSWg/s320/IMG_20150905_173907.jpg)](https://3.bp.blogspot.com/-RLGVDbsgUjQ/VfSZ_UxPzHI/AAAAAAAANr0/mgYQy0GLSWg/s1600/IMG_20150905_173907.jpg) [![](https://4.bp.blogspot.com/-6gc8iD7vDho/VfSZ_SHQ4wI/AAAAAAAANr0/XtQHC_bfmbA/s320/IMG_20150905_174217.jpg)](https://4.bp.blogspot.com/-6gc8iD7vDho/VfSZ_SHQ4wI/AAAAAAAANr0/XtQHC_bfmbA/s1600/IMG_20150905_174217.jpg) **4. **After I am assured the circuit works cleanly, it is continued with box. Cable cover is cut according to HDMI cable and the sockets. [![](https://1.bp.blogspot.com/-KrLyRibAROY/VfSabevI9UI/AAAAAAAANr8/1uDccccHYEA/s320/IMG_20150905_203031.jpg)](https://1.bp.blogspot.com/-KrLyRibAROY/VfSabevI9UI/AAAAAAAANr8/1uDccccHYEA/s1600/IMG_20150905_203031.jpg) **5. **Heat sinks are placed on the SOC of the Raspberry Pi 2 and LCD driver board. I want to be sure about that will not have a overheat problem. [![](https://2.bp.blogspot.com/-4g8wKTH8ShU/VfSalyEDxEI/AAAAAAAANsE/MVC0UzPXDTg/s320/IMG_20150905_203440.jpg)](https://2.bp.blogspot.com/-4g8wKTH8ShU/VfSalyEDxEI/AAAAAAAANsE/MVC0UzPXDTg/s1600/IMG_20150905_203440.jpg)[![](https://4.bp.blogspot.com/-YU7jGETjX2A/VfSal67aPHI/AAAAAAAANsE/vMBswIO0ZFQ/s320/IMG_20150905_203448.jpg)](https://4.bp.blogspot.com/-YU7jGETjX2A/VfSal67aPHI/AAAAAAAANsE/vMBswIO0ZFQ/s1600/IMG_20150905_203448.jpg) **5\\.** These two pieces are used for extending the audio output. In this way, audio outputs can be reach from outside of the box easily. [![](https://2.bp.blogspot.com/-d6Hyw1DwAEE/VfQJ3g-qoQI/AAAAAAAANrI/aTlXitkxoUs/s320/IMG_20150905_202620.jpg)](https://2.bp.blogspot.com/-d6Hyw1DwAEE/VfQJ3g-qoQI/AAAAAAAANrI/aTlXitkxoUs/s1600/IMG_20150905_202620.jpg)[![](https://1.bp.blogspot.com/-0YOtUekB4Vw/VfQJ3m6AWQI/AAAAAAAANrI/UpFTA7Cs3rU/s320/IMG_20150905_202613.jpg)](https://1.bp.blogspot.com/-0YOtUekB4Vw/VfQJ3m6AWQI/AAAAAAAANrI/UpFTA7Cs3rU/s1600/IMG_20150905_202613.jpg) **6.** The cap of a box is cut according to screen cables and sockets. So we completed the most parts of the box of our laptop. [![](https://2.bp.blogspot.com/-TYUwwOrm73Y/VfSal_FUv-I/AAAAAAAANsE/_xgsyb5eDBw/s320/IMG_20150905_212955.jpg)](https://2.bp.blogspot.com/-TYUwwOrm73Y/VfSal_FUv-I/AAAAAAAANsE/_xgsyb5eDBw/s1600/IMG_20150905_212955.jpg)[![](https://4.bp.blogspot.com/-zQHkyyvM6O8/VfSal273H9I/AAAAAAAANsE/cjv8g5jeP3w/s320/IMG_20150905_215736.jpg)](https://4.bp.blogspot.com/-zQHkyyvM6O8/VfSal273H9I/AAAAAAAANsE/cjv8g5jeP3w/s1600/IMG_20150905_215736.jpg) [![](https://3.bp.blogspot.com/-YPH9cF1jXc8/VfSalx1sAqI/AAAAAAAANsE/bUFxP_kAS8k/s320/IMG_20150905_215748.jpg)](https://3.bp.blogspot.com/-YPH9cF1jXc8/VfSalx1sAqI/AAAAAAAANsE/bUFxP_kAS8k/s1600/IMG_20150905_215748.jpg)[![](https://1.bp.blogspot.com/-qiYLoIREcuc/VfSalww8SII/AAAAAAAANsE/TagV3Kd_4Nk/s320/IMG_20150905_220610.jpg)](https://1.bp.blogspot.com/-qiYLoIREcuc/VfSalww8SII/AAAAAAAANsE/TagV3Kd_4Nk/s1600/IMG_20150905_220610.jpg) **7. **For good looking some duck tape is used. Low cost DIY Raspberry Pi Laptop is ready for usage. HDMI cable is reachable from outside of the box. Thus Raspberry Pi can be used with external screens or the screen can be used with other devices. [![](https://2.bp.blogspot.com/-1nmIjtyloP4/VfSal0E7VzI/AAAAAAAANsE/sDd_0fD3qjA/s320/IMG_20150905_223543.jpg)](https://2.bp.blogspot.com/-1nmIjtyloP4/VfSal0E7VzI/AAAAAAAANsE/sDd_0fD3qjA/s1600/IMG_20150905_223543.jpg) [![](https://3.bp.blogspot.com/-DAwICwi5_9U/VfSbqGJD1zI/AAAAAAAANsQ/XzcW3kOLchs/s320/IMG_20150905_230332.jpg)](https://3.bp.blogspot.com/-DAwICwi5_9U/VfSbqGJD1zI/AAAAAAAANsQ/XzcW3kOLchs/s1600/IMG_20150905_230332.jpg) [![](https://2.bp.blogspot.com/-hZ219ork5PQ/VfSbqHodVCI/AAAAAAAANsQ/VcLX9sj2M8g/s320/IMG_20150905_230427.jpg)](https://2.bp.blogspot.com/-hZ219ork5PQ/VfSbqHodVCI/AAAAAAAANsQ/VcLX9sj2M8g/s1600/IMG_20150905_230427.jpg) The average current drain by the laptop is 700 mA and Lipo battery has 1500 mAh capacity. The laptop can be use for 2 hour with this battery. [![](https://1.bp.blogspot.com/-eHS1O3Gv9J4/VfStPek73TI/AAAAAAAANss/l3KWJll-FqU/s200/IMG_20150905_163749.jpg)](https://1.bp.blogspot.com/-eHS1O3Gv9J4/VfStPek73TI/AAAAAAAANss/l3KWJll-FqU/s1600/IMG_20150905_163749.jpg)[![](https://3.bp.blogspot.com/-L7zec48A_lc/VfStPbIqcuI/AAAAAAAANss/Sp8wze46UJU/s200/IMG_20150905_163747.jpg)](https://3.bp.blogspot.com/-L7zec48A_lc/VfStPbIqcuI/AAAAAAAANss/Sp8wze46UJU/s1600/IMG_20150905_163747.jpg) **5\\. Consequence** Finally, we build a functional and simple laptop and it's cost 110 dollars.The laptop is great for develop software for Raspberry Pi. By using Raspberry Pi, you jump into the open source world of the Linux and the big community of Raspberry Pi 2\\. See you later... [![](https://2.bp.blogspot.com/-Tk2vzJQi_A0/VfSbqP49GlI/AAAAAAAANsQ/W7W9NZ8H9Ok/s400/IMG_20150912_124002.jpg)](https://2.bp.blogspot.com/-Tk2vzJQi_A0/VfSbqP49GlI/AAAAAAAANsQ/W7W9NZ8H9Ok/s1600/IMG_20150912_124002.jpg) ","permalink":"https://mozanunal.com/2015/10/diy-raspberry-pi-laptop-16/","summary":"\u003cp\u003e\u003cstrong\u003eHi,\u003c/strong\u003e\u003cbr\u003e\nIn this article, DIY Raspberry Pi Laptop project will be told. I needed a low\ncost mini computer with high mobility but then i decided to make my own and i\nstart to this project. Most of the parts(expect Raspberry pi 2 and its some of\nmaterials) were bought from china and the total cost of this project is 110$.\nThere is video of this project under this paragraph. You can watch this then you\nlearn how i did this project step by step.\u003c/p\u003e","title":"DIY Raspberry Pi Laptop"},{"content":"Herkese Merhabalar,\nBugünkü yazımda ESP8266 Wifi modülünün kullanımına yönelik yaptığım uygulamayı anlatacağım. Bu modülü daha önceki şu yazımda anlatmıştım. Ucuz fiyatına rağmen çok yetenekli bir modül. O yazımda ESP8266 Access Point olarak kullanılmıştı.Bu yazımdaki uygulamamda, hali hazırda var olan wifi ağına da bağlanabilecek. Bu sayede wifi olan yerlerde direk wifi üzerinden verilere ulaşılabilinirken, wifi çekmediği yerlerde ESP8266\u0026rsquo;nın kendi oluşturduğu Access Point üzerinden ulaşabilecek. Bilgilere istersek web browser üzerinden direk IP adresini yazarak, istersek aşağıda linkini verdiğim kendi yazdığım android programını kullanarak ulaşabileceğiz.\nTemel olarak proje şu şekilde çalışıyor: ESP8266 gerekli ayarlarda başlatılır. Belli aralıklarla Sıcaklık- Nem, Yağış ve CO2 sensöründen veri alınır. Daha sonra ESP üzerinde oluşturulan http server güncellenir.\nKodlar\nKodları ve gerekli 2 kütüphaneyi bu linkten indirebilirsiniz.\nMalzemeler ve Bağlantılar\nArduino Nano\nDHT11 sıcaklık ve nem sensörü Yağmur sensörü MQ135 Gaz sensörü 3.3v-5v Logic Conventer ESP8266 2 Adet Diyot\nESP8266 3.3 volt ile çalışıyor fakat arduinonun pinleri 5 volt giriş çıkış veriyor. Bu sorunun çözmek için Logic Conventer kullandım. Arduino Nano\u0026rsquo;nun 3.3 Volt pininden çok yüksek güç çekilemiyor bu yüzden ESP8266\u0026rsquo;yı direk bu pinden besleyemedim onun yerine.5 volt pininden çıkış aldım araya 2 adet diyot bağladım. Diyotlar voltajı 0.7\u0026rsquo;şer volt düşüyor. Bu sayede ESP\u0026rsquo;nin üzerindeki voltaj 3.6 volt oluyor. Bu voltajda ESP sorunsuz çalıştı. Zaman sorunundan dolayı böyle pratik bir çözüm yaptım, benim tavsiyem uygun güç değerinde 3.3 volt bir regülatör almanızdır.\nDHT11-Arduino\nVCC-\u0026gt; 5V GND-\u0026gt; GND OUT-\u0026gt; D4\nMQ135-Arduino\nVCC-\u0026gt; 5V GND-\u0026gt; GND A0-\u0026gt; A1\nYağmur Sensörü-Arduino\nVCC-\u0026gt; 5V GND-\u0026gt; GND A0-\u0026gt; A3\nESP8266\nVCC-\u0026gt;5 volt ama 2 diyot üzerinden GND-\u0026gt; GND RX-\u0026gt; D11 TX-\u0026gt; D10 CH_PD-\u0026gt; 3.3 V\nLogic Conventer üzerinden\nBu ekran alıntıları evimde hali hazırda varolan wifi bağlı iken aldığım verilere aittir.\nAndroid programını buradan indirebilirsiniz.\nESP8266 wifi bulamadığı zaman kendi bağlantı noktası kurar ve o wifi üzerinden verileri alabiliriz. Bu ekran görüntüleri ise wifi olmadığı bir yerdeki kullanımına aittir.\nKutunun Yapılışından Fotoğraflar\nİstasyona uygun kolay yapılabilecek bir kutu yapmaya karar verdim. Kutu gerekli idi çünkü yağmur sensörü yağmura temas etmeli fakat diğer sensörler ve arduino suyla temas etmemeli. Bir diğer sıkıntı ise gaz sensörünün gaz ölçümü için havayı ısıtması. Bu sensörün de sıcaklık sensöründen yalıtılması gereklidir. Bu sorunları çözmek için gaz sensörü kabın altında bıraktım bu sayede hem diğer sensörleri etkilemeyecek hem de yağmur yağarsa yağmurdan korunacak. Yağmur sensörü de kutunun üst tarafına monte ettim.\nAçıkca söylemek gerekirse kutum çok da güzel bir kutu olmadı ama benim deneme sürecim boyunca işimi görmeme yetti. Kutu konusunu geliştirmem gerektiğimin farkındayım ama :)\nTekrar görüşmek üzere\u0026hellip;\nKullanımdan Fotoğraflar\n","permalink":"https://mozanunal.com/2015/09/esp8266-ile-kisisel-meteoroloji/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBugünkü yazımda ESP8266 Wifi modülünün kullanımına yönelik yaptığım uygulamayı\nanlatacağım. Bu modülü daha önceki\n\u003ca href=\"https://mozanunal.com/2015/03/esp8266-modulu-html-server/\"\u003eşu yazımda\u003c/a\u003e\nanlatmıştım. Ucuz fiyatına rağmen çok yetenekli bir modül. O yazımda ESP8266\nAccess Point olarak kullanılmıştı.Bu yazımdaki uygulamamda, hali hazırda var\nolan wifi ağına da bağlanabilecek. Bu sayede wifi olan yerlerde direk wifi\nüzerinden verilere ulaşılabilinirken, wifi çekmediği yerlerde ESP8266\u0026rsquo;nın kendi\noluşturduğu Access Point üzerinden ulaşabilecek. Bilgilere istersek web browser\nüzerinden direk IP adresini yazarak, istersek aşağıda linkini verdiğim kendi\nyazdığım android programını kullanarak ulaşabileceğiz.\u003c/p\u003e","title":"[TR] ESP8266 ile Kişisel Meteoroloji İstasyonu"},{"content":"Herkese Merhabalar,\nBu yazımda Raspberry Pi 2 kartını kullanarak kendim için yaptığım laptop projesinden bahsetmek istiyorum. Kendime düşük maliyetli gündelik işlerimi halletmek için taşınabilir bir bilgisayar almaya karar vermiştim fakat neden kendim yapmak yerine satın alayım dedim ve bu projeye başladım. Malzemelerin çoğunu yurt dışından aldım ve bana toplam maliyeti 110$ kadar oldu.\nProjemin tanıtım videosunu izleyebilirsiniz. Yazının devamında ise Raspberry Pi laptopun yapılışını adım adım öğrenebilirsiniz.\n[![](https://1.bp.blogspot.com/-32Tefe5cxxQ/VfQJVHRLDKI/AAAAAAAANq0/a35hSfl8s2s/s320/IMG_20150912_123948.jpg)](https://1.bp.blogspot.com/-32Tefe5cxxQ/VfQJVHRLDKI/AAAAAAAANq0/a35hSfl8s2s/s1600/IMG_20150912_123948.jpg) 1. Raspberry Pi Nedir?\nÖncelikle Raspberry Pi\u0026rsquo;dan bahsetmek istiyorum. Raspberry Pi tüm bilgisayar bileşenlerinin bir kartta toplandığı, düşük maliyetli mini bilgisayardır. Şu an itibariyle, en son Raspberry Pi 2 çıkmıştır ve satış fiyatı 35 dolardır.\n2. Neden Raspberry Pi Laptop?\nRaspberry pi yazılım geliştirmek için çok önemli bir portal fakat her zaman uygun ekran klavye bulmak zor ve Raspberry Pi\u0026rsquo;ın taşınabilirliğini azaltıyor. Ayrıca üzerinde 4 usb portu, Hdmi portu gibi giriş çıkış birimleri bulunması sayesinde laptop yapılmaya oldukça uygun durumda. 3. olarak düşük güç tüketiminden söz edebiliriz. Benim sistemimin toplam güç tüketimi 7,8 watt civarında. 3S lipo pilimden ekranla beraber yaklaşık 650 mA akım çekiyor.\n3. Malzemeler ve Maliyet\nRaspberry Pi 2 35$\n4 Gb SD Kart 4$\nN070ICG-LD1 LCD Ekran 45$\nHDMI Kablo 3$\nKlavyeli Tablet Kılıfı 4$\nUSB WIFI Adaptörü 5$\nLM2596 Regülatör 2$\n1500 Mah 3S Lipo Pil 10$\nFare 2$\n1 Metre Kablo Koruyucu 2$\nToplam: 110$\n[![](https://3.bp.blogspot.com/-R-gtqqx3Djg/VfQJihkQa7I/AAAAAAAANq8/mHuuXTTYp6E/s320/IMG_20150903_182823.jpg)](https://3.bp.blogspot.com/-R-gtqqx3Djg/VfQJihkQa7I/AAAAAAAANq8/mHuuXTTYp6E/s1600/IMG_20150903_182823.jpg) **Malzemelerin çoğuna yukarıdan bir bakış sadece pili değiştirdim bu fotoğraftan sonra. Aşağıda da malzemelerin bir kısmınının fotoğrafları vardır. ** [![](https://4.bp.blogspot.com/-eOD2oDFN4k0/VfQJio0SdVI/AAAAAAAANq8/dVaLjcnmCL8/s320/IMG_20150903_182908.jpg)](https://4.bp.blogspot.com/-eOD2oDFN4k0/VfQJio0SdVI/AAAAAAAANq8/dVaLjcnmCL8/s1600/IMG_20150903_182908.jpg) **N070ICG-LD1 LCD Ekran** Ekranın fiyatı 45$ aynı boyutta 20$ da ekran bulabilirsiniz fakat ben yüksek çözünürlüklü bir ekranı tercih ettim. Nedeni ise laptopumu dizi izlemek için de kullanmayı planlamam. Beklediğimden çok çok daha iyi bir ekran çıktı açıkcası :) [![](https://4.bp.blogspot.com/-Dj_kyMUipJA/VfQJisZseoI/AAAAAAAANq8/ezXxDCD8tiQ/s320/IMG_20150903_182848.jpg)](https://4.bp.blogspot.com/-Dj_kyMUipJA/VfQJisZseoI/AAAAAAAANq8/ezXxDCD8tiQ/s1600/IMG_20150903_182848.jpg) **Raspberry Pi 2** [![](https://2.bp.blogspot.com/-R_Bkw6xovPI/VfQJii4lFYI/AAAAAAAANq8/3FCPmQY9NWY/s320/IMG_20150903_182839.jpg)](https://2.bp.blogspot.com/-R_Bkw6xovPI/VfQJii4lFYI/AAAAAAAANq8/3FCPmQY9NWY/s1600/IMG_20150903_182839.jpg) [![](https://2.bp.blogspot.com/-p6EjFBHxp4Y/VfQJiuVULbI/AAAAAAAANq8/aqs710Kl1tk/s320/IMG_20150903_183244.jpg)](https://2.bp.blogspot.com/-p6EjFBHxp4Y/VfQJiuVULbI/AAAAAAAANq8/aqs710Kl1tk/s1600/IMG_20150903_183244.jpg) **Klavyeli Tablet Kılıfı ** **1 Metre Kablo Koruyucu** Ana mekanik parçalarım bu ikisi oldukça uygun fiyata maloldu. Laptopumun mekanik kısmı basitçe bu tablet kılıfı ve kalo koruyucu ile üzerine yaptığım kutudan oluşuyor. [![](https://4.bp.blogspot.com/-tZLXEaO1KC4/VfQJij-sRoI/AAAAAAAANq8/JG4ZKDFvsEw/s320/IMG_20150903_182920.jpg)](https://4.bp.blogspot.com/-tZLXEaO1KC4/VfQJij-sRoI/AAAAAAAANq8/JG4ZKDFvsEw/s1600/IMG_20150903_182920.jpg) **USB WIFI Adaptörü ** Raspberry Pi uyumlu wifi adaptörü. Laptopumuzla internete girebilmemiz için. [ ](https://2.bp.blogspot.com/-R_Bkw6xovPI/VfQJii4lFYI/AAAAAAAANq8/3FCPmQY9NWY/s1600/IMG_20150903_182839.jpg) [![](https://1.bp.blogspot.com/-9wDllKFQutM/VfQJ3vOIxCI/AAAAAAAANrI/yaYmJnTDzFw/s320/IMG_20150905_154157.jpg)](https://1.bp.blogspot.com/-9wDllKFQutM/VfQJ3vOIxCI/AAAAAAAANrI/yaYmJnTDzFw/s1600/IMG_20150905_154157.jpg)[![](https://3.bp.blogspot.com/-g_HaMldZKjk/VfQJ3mr9_CI/AAAAAAAANrI/Jjh-nEyWZeU/s320/IMG_20150905_154221.jpg)](https://3.bp.blogspot.com/-g_HaMldZKjk/VfQJ3mr9_CI/AAAAAAAANrI/Jjh-nEyWZeU/s1600/IMG_20150905_154221.jpg) **Mini Usb Kablosu ** ** LM2596 Regülatör Modulü** [![](https://3.bp.blogspot.com/-msg88QCwyF4/VfQJ3s3i8gI/AAAAAAAANrI/aNO1QZDK1AI/s320/IMG_20150905_154226.jpg)](https://3.bp.blogspot.com/-msg88QCwyF4/VfQJ3s3i8gI/AAAAAAAANrI/aNO1QZDK1AI/s1600/IMG_20150905_154226.jpg)[![](https://2.bp.blogspot.com/-RGHWRLZG8gA/VfQJ3gpcIfI/AAAAAAAANrI/E9lSwrjrou0/s320/IMG_20150905_154130.jpg)](https://2.bp.blogspot.com/-RGHWRLZG8gA/VfQJ3gpcIfI/AAAAAAAANrI/E9lSwrjrou0/s1600/IMG_20150905_154130.jpg) **LM2596 Regülatör Arka Tarafı ****1500 Mah 3S Lipo Pil ** [![](https://4.bp.blogspot.com/-oalw0-hcRMc/VfQJijQ-iuI/AAAAAAAANq8/H3XnqNDjGA8/s320/IMG_20150903_182925.jpg)](https://4.bp.blogspot.com/-oalw0-hcRMc/VfQJijQ-iuI/AAAAAAAANq8/H3XnqNDjGA8/s1600/IMG_20150903_182925.jpg) **Tabi ki ses çıkışı için kulakık ve laptopumuzu kullanabilmemiz için fare. ** 4. Yapılış Aşamaları\n**1\\.** Montaja başlamadan önce devremi kurdum ve test ettim. [![](https://2.bp.blogspot.com/-c_n2wcFEuxQ/VfQJitzS-UI/AAAAAAAANq8/_LjKDyw19kk/s320/IMG_20150903_191838.jpg)](https://2.bp.blogspot.com/-c_n2wcFEuxQ/VfQJitzS-UI/AAAAAAAANq8/_LjKDyw19kk/s1600/IMG_20150903_191838.jpg) [![](https://2.bp.blogspot.com/-Th1IbnE5h2I/VfQJinRCGBI/AAAAAAAANq8/oy-ghJWil64/s320/IMG_20150903_191822.jpg)](https://2.bp.blogspot.com/-Th1IbnE5h2I/VfQJinRCGBI/AAAAAAAANq8/oy-ghJWil64/s1600/IMG_20150903_191822.jpg) [![](https://3.bp.blogspot.com/-FRkCT2jAJkc/VfQJiqAwp-I/AAAAAAAANq8/K7c820dHfAI/s320/IMG_20150903_210341.jpg)](https://3.bp.blogspot.com/-FRkCT2jAJkc/VfQJiqAwp-I/AAAAAAAANq8/K7c820dHfAI/s1600/IMG_20150903_210341.jpg) Farklı versiyonlar denedikten sonra çalışan prototipe ulaştıktan sonra devremi lehimledim. Devrenin son hali aşağıdaki gibidir. Basitçe açıklamak gerekirse; LCD ekran 12 volt ile çalışırken Raspberry Pi 2 5 volt ile çalışıyor bu yüzden Lm2596 regülatör modulünü kullanarak 12 voltluk voltajımız 5 volta ayarlanıyor. Pilden devreye gelen gücü kesmek için araya bir anahtar koydum. Batarya şarj olurken anahtarı kapatıyorum bu sayede bataryadan akım çekimiyor. Ayrıca anahtar iletimde değilken LCD Driver Boardın üzerindeki DC IN jakı kullnılarak da devremi besleyebiliyorum. Batarya bittiğinde kullanmak için oldukça güzel bir çözüm oldu. [![](https://1.bp.blogspot.com/-1tK3scEPnvU/VfSgRI7g3iI/AAAAAAAANsc/53lyOWL06Mw/s640/Ads%25C4%25B1z.png)](https://1.bp.blogspot.com/-1tK3scEPnvU/VfSgRI7g3iI/AAAAAAAANsc/53lyOWL06Mw/s1600/Ads%25C4%25B1z.png) **2\\.** Aşamada Raspberry Pi 2, LCD Driver Board ve Lipp pilin montajını gerçekleştirdim. Montaj için çift taraflı bant kullandım. Ayrıca daha sonra kutumuzun bir parçasını oluşturacak bir kablo koruyucu parçası alt tarafa yerleştirdim. Klavye kablosunu ve Pil anahtarını bu kablo koruyucunun içine yerleştirdim. [![](https://3.bp.blogspot.com/-cslv2cYUhl8/VfSZGWLqkaI/AAAAAAAANrk/IzQ6NK09qUI/s320/IMG_20150905_160718.jpg)](https://3.bp.blogspot.com/-cslv2cYUhl8/VfSZGWLqkaI/AAAAAAAANrk/IzQ6NK09qUI/s1600/IMG_20150905_160718.jpg)[![](https://3.bp.blogspot.com/-1VydvjB2m7Q/VfSZGV7uigI/AAAAAAAANrk/ZlKe8DV5nOY/s320/IMG_20150905_160723.jpg)](https://3.bp.blogspot.com/-1VydvjB2m7Q/VfSZGV7uigI/AAAAAAAANrk/ZlKe8DV5nOY/s1600/IMG_20150905_160723.jpg) [![](https://4.bp.blogspot.com/-pdmyBWnOYR0/VfSZnZNHjCI/AAAAAAAANrs/ldIdg21VJ1U/s320/IMG_20150905_170026.jpg)](https://4.bp.blogspot.com/-pdmyBWnOYR0/VfSZnZNHjCI/AAAAAAAANrs/ldIdg21VJ1U/s1600/IMG_20150905_170026.jpg)[![](https://3.bp.blogspot.com/-htG5Yg5TazM/VfSZndG2o6I/AAAAAAAANrs/UmdcCb3MCaQ/s320/IMG_20150905_170752.jpg)](https://3.bp.blogspot.com/-htG5Yg5TazM/VfSZndG2o6I/AAAAAAAANrs/UmdcCb3MCaQ/s1600/IMG_20150905_170752.jpg) [![](https://3.bp.blogspot.com/--NS9jrgOfwE/VfSZ_Xh732I/AAAAAAAANr0/c2yLn1K2Nuk/s320/IMG_20150905_173301.jpg)](https://3.bp.blogspot.com/--NS9jrgOfwE/VfSZ_Xh732I/AAAAAAAANr0/c2yLn1K2Nuk/s1600/IMG_20150905_173301.jpg)[![](https://3.bp.blogspot.com/-L0VPF3u_3HU/VfSZ_fEesbI/AAAAAAAANr0/UFa3UWLMi6s/s320/IMG_20150905_173306.jpg)](https://3.bp.blogspot.com/-L0VPF3u_3HU/VfSZ_fEesbI/AAAAAAAANr0/UFa3UWLMi6s/s1600/IMG_20150905_173306.jpg) **3\\.** Montajlar tamamlanınca elemanlarının dizilişinin son hali aşağıdaki gibi oldu. Sağlamlaştırmak için duck tape ekledim ve devremin çalışıp çalışmadığını tekrar denedim. [![](https://3.bp.blogspot.com/-RLGVDbsgUjQ/VfSZ_UxPzHI/AAAAAAAANr0/mgYQy0GLSWg/s320/IMG_20150905_173907.jpg)](https://3.bp.blogspot.com/-RLGVDbsgUjQ/VfSZ_UxPzHI/AAAAAAAANr0/mgYQy0GLSWg/s1600/IMG_20150905_173907.jpg) [![](https://4.bp.blogspot.com/-6gc8iD7vDho/VfSZ_SHQ4wI/AAAAAAAANr0/XtQHC_bfmbA/s320/IMG_20150905_174217.jpg)](https://4.bp.blogspot.com/-6gc8iD7vDho/VfSZ_SHQ4wI/AAAAAAAANr0/XtQHC_bfmbA/s1600/IMG_20150905_174217.jpg) **4\\.** Çalıştığından emin olduktan sonra kutu yapımına devam ettim Kablo koruyucu plastiği Hdmi kablosu ve soketlere uygun şekilde kestim. [![](https://1.bp.blogspot.com/-KrLyRibAROY/VfSabevI9UI/AAAAAAAANr8/1uDccccHYEA/s320/IMG_20150905_203031.jpg)](https://1.bp.blogspot.com/-KrLyRibAROY/VfSabevI9UI/AAAAAAAANr8/1uDccccHYEA/s1600/IMG_20150905_203031.jpg) **5\\.** Lcd Driver Boarddaki ve Raspberry Pi'daki çipler üzerine soğutucu metaller yerleştirdim. Kapalı kutuda kullanacağım için ısınma problemi olmaması konusunda emin olmaya istedim. [![](https://2.bp.blogspot.com/-4g8wKTH8ShU/VfSalyEDxEI/AAAAAAAANsE/MVC0UzPXDTg/s320/IMG_20150905_203440.jpg)](https://2.bp.blogspot.com/-4g8wKTH8ShU/VfSalyEDxEI/AAAAAAAANsE/MVC0UzPXDTg/s1600/IMG_20150905_203440.jpg)[![](https://4.bp.blogspot.com/-YU7jGETjX2A/VfSal67aPHI/AAAAAAAANsE/vMBswIO0ZFQ/s320/IMG_20150905_203448.jpg)](https://4.bp.blogspot.com/-YU7jGETjX2A/VfSal67aPHI/AAAAAAAANsE/vMBswIO0ZFQ/s1600/IMG_20150905_203448.jpg) **5\\.** Ses çıkışını kutunun dışına çıkarmak için aşağıdaki gibi bir erkek bir dişi jak kullandım. Fakat daha basit bir yöntem olarak kısa kulaklık çoklayıcı kablolardan kullanabilirsiniz. Böylece birden fazla ses çıkışınız olur ve bunları lehimlemekle uğraşmanız gerekmez. [![](https://2.bp.blogspot.com/-d6Hyw1DwAEE/VfQJ3g-qoQI/AAAAAAAANrI/aTlXitkxoUs/s320/IMG_20150905_202620.jpg)](https://2.bp.blogspot.com/-d6Hyw1DwAEE/VfQJ3g-qoQI/AAAAAAAANrI/aTlXitkxoUs/s1600/IMG_20150905_202620.jpg)[![](https://1.bp.blogspot.com/-0YOtUekB4Vw/VfQJ3m6AWQI/AAAAAAAANrI/UpFTA7Cs3rU/s320/IMG_20150905_202613.jpg)](https://1.bp.blogspot.com/-0YOtUekB4Vw/VfQJ3m6AWQI/AAAAAAAANrI/UpFTA7Cs3rU/s1600/IMG_20150905_202613.jpg) **6.** Plastik bir kutunun kapağını söküp soketlere ve ekranın kablosununa uyumlu olacak şekilde kestim. Üzerine de ekranı monte ettim. Böylece kutumuz tamamlanmış oldu. [![](https://2.bp.blogspot.com/-TYUwwOrm73Y/VfSal_FUv-I/AAAAAAAANsE/_xgsyb5eDBw/s320/IMG_20150905_212955.jpg)](https://2.bp.blogspot.com/-TYUwwOrm73Y/VfSal_FUv-I/AAAAAAAANsE/_xgsyb5eDBw/s1600/IMG_20150905_212955.jpg)[![](https://4.bp.blogspot.com/-zQHkyyvM6O8/VfSal273H9I/AAAAAAAANsE/cjv8g5jeP3w/s320/IMG_20150905_215736.jpg)](https://4.bp.blogspot.com/-zQHkyyvM6O8/VfSal273H9I/AAAAAAAANsE/cjv8g5jeP3w/s1600/IMG_20150905_215736.jpg) [![](https://3.bp.blogspot.com/-YPH9cF1jXc8/VfSalx1sAqI/AAAAAAAANsE/bUFxP_kAS8k/s320/IMG_20150905_215748.jpg)](https://3.bp.blogspot.com/-YPH9cF1jXc8/VfSalx1sAqI/AAAAAAAANsE/bUFxP_kAS8k/s1600/IMG_20150905_215748.jpg)[![](https://1.bp.blogspot.com/-qiYLoIREcuc/VfSalww8SII/AAAAAAAANsE/TagV3Kd_4Nk/s320/IMG_20150905_220610.jpg)](https://1.bp.blogspot.com/-qiYLoIREcuc/VfSalww8SII/AAAAAAAANsE/TagV3Kd_4Nk/s1600/IMG_20150905_220610.jpg) **7\\.** Kutumuz neredeyse bitti güzel görüntü için malzemeleri siyah duck tape ile bantladım. Böylece projemiz bitmiş oldu. Düşük maliyetli DIY Raspberry Pi Laptopumuz kullanıma hazır. Hdmi kablo kutunun dışından dolaşarak LCD Driver Board'a giriyor. Kablonun ekrana girdiği ucu çıkarabiliyoruz bu sayede ekran başka Hdmi Av cihazlarla kullanılabiliyor. Ayrıca Raspberry Pi'dan çıkan Hdmi kabloyu da başka ekranlara televizyona bağlayabiliyoruz. Bu da laptopumuza daha fazla fonksiyonellik katıyor. [![](https://2.bp.blogspot.com/-1nmIjtyloP4/VfSal0E7VzI/AAAAAAAANsE/sDd_0fD3qjA/s320/IMG_20150905_223543.jpg)](https://2.bp.blogspot.com/-1nmIjtyloP4/VfSal0E7VzI/AAAAAAAANsE/sDd_0fD3qjA/s1600/IMG_20150905_223543.jpg) [![](https://3.bp.blogspot.com/-DAwICwi5_9U/VfSbqGJD1zI/AAAAAAAANsQ/XzcW3kOLchs/s320/IMG_20150905_230332.jpg)](https://3.bp.blogspot.com/-DAwICwi5_9U/VfSbqGJD1zI/AAAAAAAANsQ/XzcW3kOLchs/s1600/IMG_20150905_230332.jpg) [![](https://2.bp.blogspot.com/-hZ219ork5PQ/VfSbqHodVCI/AAAAAAAANsQ/VcLX9sj2M8g/s320/IMG_20150905_230427.jpg)](https://2.bp.blogspot.com/-hZ219ork5PQ/VfSbqHodVCI/AAAAAAAANsQ/VcLX9sj2M8g/s1600/IMG_20150905_230427.jpg) Laptopun pilden çektiği ortalama akım aşağıda gözüktüğü gibi. 1500 mAh pil ile yaklaşık 2 saat kesintisiz kullanabiliyoruz. [![](https://1.bp.blogspot.com/-eHS1O3Gv9J4/VfStPek73TI/AAAAAAAANss/l3KWJll-FqU/s200/IMG_20150905_163749.jpg)](https://1.bp.blogspot.com/-eHS1O3Gv9J4/VfStPek73TI/AAAAAAAANss/l3KWJll-FqU/s1600/IMG_20150905_163749.jpg)[![](https://3.bp.blogspot.com/-L7zec48A_lc/VfStPbIqcuI/AAAAAAAANss/Sp8wze46UJU/s200/IMG_20150905_163747.jpg)](https://3.bp.blogspot.com/-L7zec48A_lc/VfStPbIqcuI/AAAAAAAANss/Sp8wze46UJU/s1600/IMG_20150905_163747.jpg) **5\\. Sonuç** Evvet... Projemiz sol halini böylece almış oldu. 110 dolar gibi bir fiyata küçük fonksiyonel basit bir laptop elde etmiş olduk. Bir çoğunuz sorabilir biraz daha para ödeyerek bu boyutlarda bir android tableti neden tercih etmediniz diye. Açıkcası bazı alanlarda öyle bir tabletin daha işe yarar olacağını kabul ediyorum. Fakat benim Raspberry Pi üzerinde yazılım geliştirmem gerek ve bu bulabildiğim en etkili çözüm oldu. Böylece çok farklı amaçlar için Raspberry Pi kullanabiliyorum. Ayrıca Raspberry Pi 2'nin arkasındaki topluluk ve Linux'un özgür dünyasını kullanabildiğim bir laptop olması da çok büyük artılar benim için. Tekrar görüşmek üzere... [![](https://2.bp.blogspot.com/-Tk2vzJQi_A0/VfSbqP49GlI/AAAAAAAANsQ/W7W9NZ8H9Ok/s400/IMG_20150912_124002.jpg)](https://2.bp.blogspot.com/-Tk2vzJQi_A0/VfSbqP49GlI/AAAAAAAANsQ/W7W9NZ8H9Ok/s1600/IMG_20150912_124002.jpg) ","permalink":"https://mozanunal.com/2015/09/diy-raspberry-pi-laptop/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003cbr\u003e\n       Bu yazımda Raspberry Pi 2 kartını kullanarak kendim için yaptığım laptop\nprojesinden bahsetmek istiyorum. Kendime düşük maliyetli gündelik işlerimi\nhalletmek için taşınabilir bir bilgisayar almaya karar vermiştim fakat neden\nkendim yapmak yerine satın alayım dedim ve bu projeye başladım. Malzemelerin\nçoğunu yurt dışından aldım ve bana toplam maliyeti 110$ kadar oldu.\u003cbr\u003e\nProjemin tanıtım videosunu izleyebilirsiniz. Yazının devamında ise Raspberry Pi\nlaptopun yapılışını adım adım öğrenebilirsiniz.\u003c/p\u003e\n\u003cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003e\u003ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https://i.ytimg.com/vi/Ys97-3S9MQo/0.jpg\" frameborder=\"0\" height=\"266\" src=\"https://www.youtube.com/embed/Ys97-3S9MQo?feature=player_embedded\" width=\"320\"\u003e\u003c/iframe\u003e\u003c/div\u003e\n\u003cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003e[![](https://1.bp.blogspot.com/-32Tefe5cxxQ/VfQJVHRLDKI/AAAAAAAANq0/a35hSfl8s2s/s320/IMG_20150912_123948.jpg)](https://1.bp.blogspot.com/-32Tefe5cxxQ/VfQJVHRLDKI/AAAAAAAANq0/a35hSfl8s2s/s1600/IMG_20150912_123948.jpg)\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003e1. Raspberry Pi Nedir?\u003c/strong\u003e\u003cbr\u003e\n      Öncelikle Raspberry Pi\u0026rsquo;dan bahsetmek istiyorum. Raspberry Pi tüm\nbilgisayar bileşenlerinin bir kartta toplandığı, düşük maliyetli mini\nbilgisayardır. Şu an itibariyle, en son Raspberry Pi 2 çıkmıştır ve satış fiyatı\n35 dolardır.\u003cbr\u003e\n\u003cstrong\u003e2. Neden Raspberry Pi Laptop?\u003c/strong\u003e\u003cbr\u003e\n      Raspberry pi yazılım geliştirmek için çok önemli bir portal fakat her\nzaman uygun ekran klavye bulmak zor ve Raspberry Pi\u0026rsquo;ın taşınabilirliğini\nazaltıyor. Ayrıca üzerinde 4 usb portu, Hdmi portu gibi giriş çıkış birimleri\nbulunması sayesinde laptop yapılmaya oldukça uygun durumda. 3. olarak düşük güç\ntüketiminden söz edebiliriz. Benim sistemimin toplam güç tüketimi 7,8 watt\ncivarında. 3S lipo pilimden ekranla beraber yaklaşık 650 mA akım çekiyor.\u003cbr\u003e\n\u003cstrong\u003e3. Malzemeler ve Maliyet\u003c/strong\u003e\u003cbr\u003e\nRaspberry Pi 2                     35$\u003cbr\u003e\n4 Gb SD Kart                       4$\u003cbr\u003e\nN070ICG-LD1 LCD Ekran   45$\u003cbr\u003e\nHDMI Kablo                        3$\u003cbr\u003e\nKlavyeli Tablet Kılıfı            4$\u003cbr\u003e\nUSB WIFI Adaptörü            5$\u003cbr\u003e\nLM2596 Regülatör               2$\u003cbr\u003e\n1500 Mah 3S Lipo Pil           10$\u003cbr\u003e\nFare                                     2$\u003cbr\u003e\n1 Metre Kablo Koruyucu       2$\u003cbr\u003e\n\u003cstrong\u003eToplam:                             110$\u003c/strong\u003e\u003c/p\u003e","title":"[TR] DIY Raspberry Pi Laptop"},{"content":"Herkese Merhabalar,\nYapacağım bir proje için fırçalı bir motorun Arduino ile hızını kontrol etmem gerekiyordu. Bunun için elimdeki fırçalı motor için elektronik hız kontrolü yani ESC (Electronic Speed Control) yapmaya karar verdim.\nÖncellikle kendi motorumun ve devrelerimin besleme gerilimi yazayım. Çünkü devre bu özelliklere göre dizayn edilecektir. Siz de kendi malzemelerinize ve voltajlarınıza göre kendi devrenizi dizayn edebilirsiniz. Benim elimdeki motoru besleme voltajım 7.4 volt ve motorun çektiği maximum akım 2 amperdir. Hız kontrolü için göndereceğim PWM sinyalinin genliği de (Arduinonun çalışma voltajı) 5 volttur. Bu şartlar altında devremi bir power mosfet ile tasarlamaya karar verdim. Mosfette var olması gereken özellikler 5 volt anahtarlamaya uygun rds ve Vgs özelliklerine sahip olması, üzerinden 2 amper akım rahatça geçebilmesidir. Bu nedenlerden dolayı ben IRL540N mosfetini seçtim. Kendisi bir logic mosfet bu sayede 5 volt gibi düşük bir Vgs voltajı ile devreyi anahtarlayabiliyor. Ayıca üzerinden 28 amper sıkıntısız geçebiliyor. Bu özellikleriyle projemiz için oldukça uygun. Datasheetine buradan ulaşabilirsiniz.\nUygun mosfeti seçmek için LTSpice programı üzerinden simülasyon yapmam gerekti aşağıdan simülasyon devresi ve elde ettiğim grafikleri inceleyebilirsiniz.\nŞekildeki devrede V2 voltajı, arduinodan mosfeti sürmek için uygulanacak olan voltajı temsil etmektedir. O voltaj aralığında düzgün çalışıp çalışmayacağını anlamak için 0-5 volt aralığındaki bütün voltajlar uygulanarak yükümüz yani R2 üzerinden geçen akım takip edilmiştir. 2.2 volt ile rahatlıkla anahtarlama yapılmaktadır.\nŞekildeki gördüğümüz gibi PWM göndereceğimiz yerden 0 volt uygulandığında motorun üzerinden geçen akım sıfıra yakın iken, 5 volt gönderildiğinde motorumuz çalışıyor.\nMotorun arduino pini üzerinden kontrolü bu şekilde, fakat PWM kavramına yabancı iseniz hız kontrolünü nasıl yaptığımı anlamamış olabilirsiniz. PWM (Pulse Width Modulation) ,yani Sinyal Genişlik Modülasyonu, belli bir frekansta ve faklı genişliklerde bir dijital işarettir. Aşağıdaki şekilden inceleyebileceğiniz gibi farklı genişliklerde PWM sinyalleri uygulanarak motorun hız kontrolü sağlanır.\nDiyot mosfeti motorda indüklenecek ters akımdan dolayısıyla gerilimden kurtarmak için oraya konulmuştur. Ve son olarak yaptığım devrenin gerçek hayata geçirilmiş halini ve denenmesini aşağıda bulabilirsiniz. Tekrar görüşmek üzere\u0026hellip;\n","permalink":"https://mozanunal.com/2015/08/frcal-motorlar-icin-esc-yapm/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eYapacağım bir proje için fırçalı bir motorun Arduino ile hızını kontrol etmem\ngerekiyordu. Bunun için elimdeki fırçalı motor için elektronik hız kontrolü yani\nESC (Electronic Speed Control) yapmaya karar verdim.\u003c/p\u003e\n\u003cp\u003eÖncellikle kendi motorumun ve devrelerimin besleme gerilimi yazayım. Çünkü devre\nbu özelliklere göre dizayn edilecektir. Siz de kendi malzemelerinize ve\nvoltajlarınıza göre kendi devrenizi dizayn edebilirsiniz. Benim elimdeki motoru\nbesleme voltajım 7.4 volt ve motorun çektiği maximum akım 2 amperdir. Hız\nkontrolü için göndereceğim PWM sinyalinin genliği de (Arduinonun çalışma\nvoltajı) 5 volttur. Bu şartlar altında devremi bir power mosfet ile tasarlamaya\nkarar verdim. Mosfette var olması gereken özellikler 5 volt anahtarlamaya uygun\nrds ve Vgs özelliklerine sahip olması, üzerinden 2 amper akım rahatça\ngeçebilmesidir. Bu nedenlerden dolayı ben IRL540N mosfetini seçtim. Kendisi bir\nlogic mosfet bu sayede 5 volt gibi düşük bir Vgs voltajı ile devreyi\nanahtarlayabiliyor. Ayıca üzerinden 28 amper sıkıntısız geçebiliyor. Bu\nözellikleriyle projemiz için oldukça\nuygun. \u003ca href=\"https://www.irf.com/product-info/datasheets/data/irl540n.pdf\"\u003eDatasheetine buradan ulaşabilirsiniz.\u003c/a\u003e\u003c/p\u003e","title":"[TR] Fırçalı motorlar için ESC Yapımı"},{"content":"Herkese Merhabalar,\nBugün size bir android uygulaması olan Droid Script uygulamasından bahsetmek istiyorum. Programa burayı tıklayarak ulaşabilirsiniz. Bu uygulama bana göre en iyi android uygulamasıdır. Droid Script java script tabanlı Android uygulama geliştirme uygulamasıdır. Bu program sayesinde android üzerinde android için kolayca uygulama geliştirebilirsiniz. Bunu yapabileceğiniz farklı uygulamalar bulabilmeniz mümkün. Droid Script ayıran özellikler ise şöyle sıralayabiliriz:\nÇok gelişmiş program içi dokümantasyon (Programdan hiç çıkmadan dokümantasyon bölümünden bakarak uygulamalarınızı geliştirebilirsiniz ) Telefon donanımına kolay ulaşım (Gps, kamera, sensörler, bluetooth) Çok geniş örnek uygulama havuzu (Aklınıza gelebilecek her şeyin örneği var ve yine program içinden ulaşabiliyorsunuz.) Jqplot Canvgauge gibi Java Script kütüphanelerini uygulamalarınızda gömülü olarak kullanabilirsiniz.( Gerçek zamanlı sensör grafikleri çizdirebilir, çeşitli Gauge ekleyebilirsiniz.) Google Speech Recognition ve Google Text to Speech desteği WebGL sayesinde yüksek performanslı yüksek görsellikte oyun tasarımı Veri tabanı oluşturabilirsiniz. Web browser ve TCP UDP gibi network programlama desteği. Eğer telefon üzerinden geliştirmek istemiyorsanız Wifi aracılığıyla bilgisayarınızdaki browser üzerinden doğrudan bilgisayarınızda programınızı geliştirip tek tuş ile telefonunuzda deneyebilirsiniz. Kısacası, Android programlama asıl odaklandığınız nokta değilse fakat projelerinizde Android kullanmak istiyorsanız Droid Script tam aradığınız program. Fazla zaman ayırmadan istediğiniz uygulamayı geliştirmeniz mümkün.\nÖrnekler\nDokümentasyonu\nKamera örnek uygulama\nAndroid içindeki geliştirme ortamı\nWebGL ile yapılmış Flappy Bird tarzı oyun\nNetwork uygulama örnekleri\nCanvGauge Kütüphanesi Kullanımı\nDokümantasyonun içinden\nBrowser tabanlı geliştirme ortamı\n","permalink":"https://mozanunal.com/2015/08/droid-script/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003cbr\u003e\n      Bugün size bir android uygulaması olan Droid Script uygulamasından\nbahsetmek istiyorum.\n\u003ca href=\"https://play.google.com/store/apps/details?id=com.smartphoneremote.androidscriptfree\"\u003ePrograma burayı tıklayarak ulaşabilirsiniz\u003c/a\u003e.\nBu uygulama bana göre en iyi android uygulamasıdır. Droid Script java script\ntabanlı Android uygulama geliştirme uygulamasıdır. Bu program sayesinde android\nüzerinde android için kolayca uygulama geliştirebilirsiniz. Bunu yapabileceğiniz\nfarklı uygulamalar bulabilmeniz mümkün. Droid Script ayıran özellikler ise şöyle\nsıralayabiliriz:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eÇok gelişmiş program içi dokümantasyon (Programdan hiç çıkmadan dokümantasyon\nbölümünden bakarak uygulamalarınızı geliştirebilirsiniz )\u003c/li\u003e\n\u003cli\u003eTelefon donanımına kolay ulaşım (Gps, kamera, sensörler, bluetooth)\u003c/li\u003e\n\u003cli\u003eÇok geniş örnek uygulama havuzu (Aklınıza gelebilecek her şeyin örneği var ve\nyine program içinden ulaşabiliyorsunuz.)\u003c/li\u003e\n\u003cli\u003eJqplot Canvgauge gibi Java Script kütüphanelerini uygulamalarınızda gömülü\nolarak kullanabilirsiniz.( Gerçek zamanlı sensör grafikleri çizdirebilir,\nçeşitli Gauge ekleyebilirsiniz.)\u003c/li\u003e\n\u003cli\u003eGoogle Speech Recognition ve Google Text to Speech desteği\u003c/li\u003e\n\u003cli\u003eWebGL sayesinde yüksek performanslı yüksek görsellikte oyun tasarımı\u003c/li\u003e\n\u003cli\u003eVeri tabanı oluşturabilirsiniz.\u003c/li\u003e\n\u003cli\u003eWeb browser ve TCP UDP gibi network programlama desteği.\u003c/li\u003e\n\u003cli\u003eEğer telefon üzerinden geliştirmek istemiyorsanız Wifi aracılığıyla\nbilgisayarınızdaki browser üzerinden doğrudan bilgisayarınızda programınızı\ngeliştirip tek tuş ile telefonunuzda deneyebilirsiniz.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eKısacası, Android programlama asıl odaklandığınız nokta değilse fakat\nprojelerinizde Android kullanmak istiyorsanız Droid Script tam aradığınız\nprogram. Fazla zaman ayırmadan istediğiniz uygulamayı geliştirmeniz mümkün.\u003c/p\u003e","title":"[TR] Droid Script"},{"content":"Herkese Merhabalar,\nBatarya kapasite testi için çeşitli yöntemler geliştirilmiştir. Bunlardan ilk akıla geleni bataryanın uçlarına sabit direnç bağlayıp çekilen akım ve zaman üzerinden kapasite hesabı yapmaktır. Fakat bataryaların zamanla deşarj oldukça voltajı azalır bu da akımın değişmesine yol açacaktır. Bu sorunu çözmek için ise deşarj esnasında mümkün olduğunca çok voltaj örneklenerek anlık akım hesaplanıp interpolasyon yöntemleriyle kapasiteye ulaşılabilir. Fakat bu sıkıntıları aşmak için ikinci bir ölçüm yöntemi vardır; Sabit akım deşarj devresi.\nSabit akım deşarj devresi bataryadan sabit akım çekerek deşarj olmasını sağlar. Bu sayede doğrudan akımın çekildiği toplam zaman tutularak pilin kapasitesi kolayca hesaplanır. Devremize geçecek olursak gerekli malzemeler;\nIrfz44N mosfet lt1001 ya da lm358 opamp 9 voltluk pil 0.5 volt en az 1W direnç 100k (büyüklüğü çok kritik değil) Diyot (benimkiyle aynı değerleri almak için 1N914) Devreyi açıklamak gerekirse; 9 voltluk pil opampı sürmek ve referans voltajını oluşturmak için kullanılır. R2 direnci ve diyot sayesinde referans gerilimi oluşturulur. Referans gerilimi R1direncinin voltajına eşit olur böylece Vref / R1 = I akımı mosfet üzerinden dolayısıyla bataryadan çekilen akım olmuş olur. Bu yüzden Vref gerilimi sabit olmalıdır ki akım da sabit olsun. Bir diyot üzerinden akım geçirirken (diyota göre değişmekle birlikte) üzerinde 0.7 civarı voltaj düşümü yaşanır. Üzerinden geçen akım değiştikçe bu değer çok olmamakla birlikte değişir. Bu değerin etkisi ihmal edilebilecek seviyededir.\nBu devre standart voltajı 3.7 volt civarı olan lithium ion veya li po bataryaların testi için tasarlanmıştır. O voltajda bir batarya tam dolu iken 4.2 volt boş iken ise 3 volt civarında voltaja sahiptir. Aşağıda bataryanın voltajı 4.2 volttan 3 volta giderken akım grafiğini bulabilirsiniz. Bataryadan çekilen akım 965 mA seviyesindedir. Neredeyse hiç değişmez.\nBunun nedeni aşağıda görüldüğü gibi diyotun uçları arasındaki gerilimin de sabit olmasıdır.\nBu devrenin sıkıntılı yanlarından biri mosfet üzerinde çok fazla voltaj düşümü olmasıdır. Bu da mosfetin aşırı derecede ısınmasına yol açar. Bu sorun için mosfete ilave olarak kocaman bir heat sink takılması gerekir. Yine de tehlikeli olabilir devreyi yapacaklar için tavsiyem devre çalışmakta iken mosfete dokunmamalarıdır.\nDikkat edeceğimiz bir diğer nokta ise 9 voltluk pilden çekilen akım. R2 direnci yüksek tutularak 9 voltluk pilden çekilen akım azaltılır. Devrenin ömrü uzatılır.\n","permalink":"https://mozanunal.com/2015/08/bataryalar-icin-sabit-akm-desarj/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBatarya kapasite testi için çeşitli yöntemler geliştirilmiştir. Bunlardan ilk\nakıla geleni bataryanın uçlarına sabit direnç bağlayıp çekilen akım ve zaman\nüzerinden kapasite hesabı yapmaktır. Fakat bataryaların zamanla deşarj oldukça\nvoltajı azalır bu da akımın değişmesine yol açacaktır. Bu sorunu çözmek için ise\ndeşarj esnasında mümkün olduğunca çok voltaj örneklenerek anlık akım hesaplanıp\ninterpolasyon yöntemleriyle kapasiteye ulaşılabilir. Fakat bu sıkıntıları aşmak\niçin ikinci bir ölçüm yöntemi vardır; Sabit akım deşarj devresi.\u003c/p\u003e","title":"[TR] Bataryalar için Sabit Akım Deşarj Devresi Yapımı"},{"content":"Herkese Merhabalar,\nBu yazımda PID kontrol algoritmalarından bahsetmek istiyorum. Bu yazıyı yazmamın 2 sebebi var. PID algoritmaları hakkında bir çok yazı okudum fakat coğu akademik ve karmaşık yazılar. Benim amacım anlaşılırlığı ve ayrıntıyı dengeli bir şekilde maximum değerlerinde kullanmak. İkincisi ise bu algoritmanın özel olarak multikopterlerde kullanımını basit bir şekilde açıklayan bir yazıya rastlamadım. Bu yüzden bu yazıyı yazmaya karar verdim.\nBir otopilotun en temel 2 bileşeni hava aracının yönelimini tespit eden IMU sensörü ve PID algoritmasıdır. IMU sensörü içinde bir kaç sensör barındırır ve amacı hava aracının 3 boyutlu uzaydaki yönelimini bulmaktır. IMU konusundan bu yazımda bahsetmiştim. PID algoritmasının görevi ise temel olarak şöyledir: Yönelimi (3 eksendeki yere göre açılar) sensörler üzerinden alır, istenen açıları da kullanıcıdan alır. Bu ikisi arasındaki farkı en düşük seviyeye düşürmeyi amaçlar. İşte PID algoritmasının görevi bu farkı minimuma indirmek için gerekli motor hız değerlerini hesaplamaktır.\nMultikopterler için her 3 için ayrı ayrı PID kontrol algoritmaları uygulanır. İstenilen değer ile şu anki değerin farkı alınarak hata elde edilir. PID algoritması bu hata değerlerine uygulandıktan sonra motorların çıkış değerleri hesaplanır. Sonra bu verilen çıkış hata değişkenini bulmak üzere tekrar girişe yönlendirilir. Böylece döngü tamamlanmış olur. PID, Proportional, Integral ve Derivative olmak üzere 3 farklı algoritmanın uygulanmasıyla elde edilir. Örnekle açıklamak gerekirse: Multikopterimizin pitch açısı için kullnılan PID kontrol algoritmasını ele alalım. P algoritmasından gelen değer, multikopterimizin şu anki pitch açısı ile kontrol edenin istediği pitch açısı arasındaki farka yani anlık hataya bağlıdır. I algoritmasından gelen değer, pitch açısının geçmiş hatalarının toplamına bağlıdır. D algoritmasından gelen değer ise gelecek açı hatalarının tahminine bağlıdır.\n**Bu algoritmalardan elde edilen değerler belli katsayılarla(Kp, Ki, Kd) çarpılarak son çıkış değişkeni elde edilir. Bu katsayılara PID katsayıları denir. PID tuning olayı bu katsayıların uygun stabiliteyi sağlayacak şekilde ayarlanmasıdır. **Simdi bu 3 PID algoritmasının nasıl çalıştığını daha ayrıntılı inceleyelim.\nProportional\nProportional, ana kontrol algoritmamızdır. Diğer katsayılar 0 olsa bile sadece bu algoritmayla (stabilite düşük de olsa) hover yapabilir. Proportional, hava aracımızın şu anki açı hatasını baz alarak ilerler. Basitçe anlatmak gerekirse Kp katsayısı ne kadar yüksek olursa multikopter o kadar fazla kendini düzeltmeye çalışır. Eğer olması gerekenden yüksek Kp katsayısı seçilirse kendini fazla düzeltecek ve \u0026ldquo;overshoot\u0026rdquo; denen kavram ortaya çıkacaktır. Multikopter oldukça fazla duyarlı olacak ve yüksek frekansta titremeye başlayacaktır.\nIntegral\nIntegral, geçmiş hataların toplamını baz alarak ilerleyen algoritmadır. P genellikle hatayı yok etmek için tek başına yeterli değildir. Basitçe, istenen I değeri hataların zamanla çarpılıp toplanmasıyla elde edilir. Yani hatanın sayısal integrali hesaplanmış olur. I algoritması sayesinde multikopterimizin tam istediğimiz değere gelme özelliği artar fakat aynı zamanda istenilen değere gelme zamanı artar. Özellikle düzensiz rüzgarda ve ağırlık merkezi bozukluğu, tribulans gibi olumsuz etkenleri yok etmek için oldukça yararlıdır. Ki katsayısı artırıldığında daha yumuşak ve daha az agresif bir uçuş karakteristiği elde edilir. Yüksek Ki yine titreşimlere neden olur ama daha düşük frekanstadır böylece Kp\u0026rsquo;den kaynaklanan sorundan ayrılabilir.\nDerivative\nD parametresi gelecek hata tahminini baz alan bir parametredir. Etkisini ise istenilen açı değeri ile şuanki açı değeri arasındaki bir yay olarak düşünebiliriz. Görevi şokları absorbe ederek sonradan oluşabilecek hataları, \u0026ldquo;overshootları\u0026rdquo; baştan engellemektir. Bazı uçuş kontrolcüler bu parametreyi kullanmaz(Örnek: KK 2.0).\nPID Tuning İpuçları\nAyarlamaya P parametresinden başlanır. P parametresini ayarlamak için düşük bir değerden başlanır ve titreşim ve osilasyonlar görmeye başlayana kadar artırılır. Düşük frekanstaki osilasyonları Ki parametresine, Yüksek frekanstakiler is genellikle Kp veya Kd bağlıdır. Eğer aracınızda titreşimler görüyorsanız Kp parametresini azaltmak için acele etmeyin. İlk olarak Kd parametresini artırmayı deneyebilirsiniz.\nAkrobasi modu için;\nBirazcık yüksek P Birazcık düşük I D artırılır. Yumuşak akıcı uçuş için;\nBirazcık düşük P Birazcık yüksek I D azaltılır. Son olarak farklı PID ayarlarının stabiliteye etkisi hakkında açıklayıcı bir video göz atmanızı tavsiye ederim. Tekrar görüşmek üzere.\n","permalink":"https://mozanunal.com/2015/07/multikopterler-icin-pid-kontrol/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBu yazımda PID kontrol algoritmalarından bahsetmek istiyorum. Bu yazıyı yazmamın\n2 sebebi var. PID algoritmaları hakkında bir çok yazı okudum fakat coğu akademik\nve karmaşık yazılar. Benim amacım anlaşılırlığı ve ayrıntıyı dengeli bir şekilde\nmaximum değerlerinde kullanmak. İkincisi ise bu algoritmanın özel olarak\nmultikopterlerde kullanımını basit bir şekilde açıklayan bir yazıya rastlamadım.\nBu yüzden bu yazıyı yazmaya karar verdim.\u003c/p\u003e\n\u003cp\u003eBir otopilotun en temel 2 bileşeni hava aracının yönelimini tespit eden IMU\nsensörü ve PID algoritmasıdır. IMU sensörü içinde bir kaç sensör barındırır ve\namacı hava aracının 3 boyutlu uzaydaki yönelimini bulmaktır. IMU konusundan\n\u003ca href=\"https://mozanunal.com/2014/11/imu-aclarnn-3-boyutlu-olarak/\"\u003ebu yazımda bahsetmiştim\u003c/a\u003e.\nPID algoritmasının görevi ise temel olarak şöyledir: Yönelimi (3 eksendeki yere\ngöre açılar) sensörler üzerinden alır, istenen açıları da kullanıcıdan alır. Bu\nikisi arasındaki farkı en düşük seviyeye düşürmeyi amaçlar. İşte PID\nalgoritmasının görevi bu farkı minimuma indirmek için gerekli motor hız\ndeğerlerini hesaplamaktır.\u003c/p\u003e","title":"[TR] Multikopterler için PID kontrol"},{"content":"Herkese Merhabalar,\nDaha önce kolay bulunabilecek malzemelerden nasıl gimbal yapılabileceğinden bahsetmiştim (O yazıya buradan ulaşabiliriniz). Kontrol kartını sonra anlatacağım demiştim. Veee bu yazımda arduino ve MPU6050 sensörü kullanarak nasıl bir gimbal kontrol kartı yapabileceğimizden bahsedeceğim. Bu kart sayesinde gimbalin yere göre açısını kontrol edebileceğiz. Yere göre açısının sabit kalmasını da kontrol kartı üzerindeki IMU sensörü ile sağlayacağız(Ayrıntılı bilgi için tıklayınız). Kontrol kartı saniyede 100 değer okuyup servo PWM değerlerini ona göre güncelliyor. Bu sayede oldukça yüksek çözünürlüklü her türlü seviyede kullanılabilecek bir kontrol kartı yapmış oluyoruz. Ayrıca başa koyduğum ayar parametreleri sayesinde her boyutta ve çeşitte servo gimbale kolayca uyumlu hale getirilebilir. Kontrol kartının tanıtım videosu aşağıdadır.\nBağlantılara gelecek olursak MPU6050 I2C pinlerinden arduinoya bağlanıyor. Gnd pini gndye, Vcc pini ise 3.3 volta bağlanıyor. Çalışma voltajı 3.3 volt olduğu için. Servoların sinyal pinlerini ayarlardan seçtiğimiz dijital pinlere bağlıyoruz. Servoların beslemesi eğer küçük servolar ise arduino üzerinden eğer yüksek akım çeken servolarsa harici olarak yapabilirsiniz. Fakat harici besleme yaparsanız arduino ve güç kaynağının topraklarını eşitlemeyi unutmayın.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 ////////////////////Ayarlar//////////////// //pitch int p_pin=8; int p_neturalpos=90; int p_gain=1; int p_min=30; int p_max=150; int p_reverse=0; //roll int r_pin=9; int r_neturalpos=90; int r_gain=1; int r_min=30; int r_max=150; int r_reverse=0; /////////////////////////////////////////////// Bunlar, koddaki ayar parametreleri, çeşitli gimballere kolay adapte edilebilmesi içindir. İlk pozisyonunu, en düşük, en yüksek servo açılarını, kazancını bu parametrelerle kontrol edeceğiz. Kazanç ise kontrol kartındaki açı değişimlerinin servoya kaçla çarpılarak yansıtılacağının parametresidir.\u0026ldquo;Reverse\u0026rdquo; değişkeni \u0026ldquo;1\u0026rdquo; veya \u0026ldquo;0\u0026rdquo; yapılarak yönün ters çevirilmesi sağlanabilir. Benim gimbalim için \u0026ldquo;Pitch\u0026rdquo; eksenini ters yapmam gerekmişti.\nSistemin Fotoğrafları\nProjenin full kaynak kodu:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 #include \u0026lt;I2Cdev.h\u0026gt; #include \u0026lt;MPU60X0.h\u0026gt; #include \u0026lt;EEPROM.h\u0026gt; #include \u0026#34;DebugUtils.h\u0026#34; #include \u0026#34;CommunicationUtils.h\u0026#34; #include \u0026#34;FreeIMU.h\u0026#34; #include \u0026lt;Wire.h\u0026gt; #include \u0026lt;SPI.h\u0026gt; #include \u0026lt;Servo.h\u0026gt; ////////////////////Ayarlar//////////////// //pitch int p_pin=8; int p_neturalpos=90; int p_gain=1; int p_min=30; int p_max=150; int p_reverse=0; //roll int r_pin=9; int r_neturalpos=90; int r_gain=1; int r_min=30; int r_max=150; int r_reverse=0; /////////////////////////////////////////////// Servo pitchservo; Servo rollservo; int p_angle=90; int r_angle=90; int raw_values[9]; float ypr[3]; // yaw pitch roll float val[9]; FreeIMU my3IMU = FreeIMU(); void setup() { Serial.begin(115200); pitchservo.attach(p_pin); rollservo.attach(r_pin); Wire.begin(); delay(5); my3IMU.init(); delay(5); } void loop() { my3IMU.getYawPitchRoll(ypr); Serial.print(\u0026#34;Yaw: \u0026#34;); Serial.print(ypr[0]); Serial.print(\u0026#34; Pitch: \u0026#34;); Serial.print(ypr[1]); Serial.print(\u0026#34; Roll: \u0026#34;); Serial.print(ypr[2]); Serial.println(\u0026#34;\u0026#34;); p_angle=p_neturalpos+ypr[1]*p_gain; if(p_angle\u0026gt;p_max){ p_angle=p_max; } if(p_angle\u0026lt;p_min){ p_angle=p_min; } if(p_reverse=1){ p_angle=180-p_angle; } pitchservo.write(p_angle); r_angle=r_neturalpos+ypr[2]*r_gain; if(r_angle\u0026gt;r_max){ r_angle=r_max; } if(r_angle\u0026lt;r_min){ r_angle=r_min; } if(r_reverse=1){ r_angle=180-r_angle; } rollservo.write(r_angle); delay(10); } ","permalink":"https://mozanunal.com/2015/07/arduino-gimbal-kontrol-kart/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eDaha önce kolay bulunabilecek malzemelerden nasıl gimbal yapılabileceğinden\nbahsetmiştim\n(\u003ca href=\"https://mozanunal.com/2015/06/2-eksenli-servo-gimbal-yapm/\"\u003eO yazıya buradan ulaşabiliriniz\u003c/a\u003e).\nKontrol kartını sonra anlatacağım demiştim. Veee bu yazımda arduino ve MPU6050\nsensörü kullanarak nasıl bir gimbal kontrol kartı yapabileceğimizden\nbahsedeceğim. Bu kart sayesinde gimbalin yere göre açısını kontrol edebileceğiz.\nYere göre açısının sabit kalmasını da kontrol kartı üzerindeki IMU sensörü ile\nsağlayacağız(\u003ca href=\"https://mozanunal.com/2014/11/imu-aclarnn-3-boyutlu-olarak/\"\u003eAyrıntılı bilgi için tıklayınız\u003c/a\u003e).\nKontrol kartı saniyede 100 değer okuyup servo PWM değerlerini ona göre\ngüncelliyor. Bu sayede oldukça yüksek çözünürlüklü her türlü seviyede\nkullanılabilecek bir kontrol kartı yapmış oluyoruz. Ayrıca başa koyduğum ayar\nparametreleri sayesinde her boyutta ve çeşitte servo gimbale kolayca uyumlu hale\ngetirilebilir. Kontrol kartının tanıtım videosu aşağıdadır.\u003c/p\u003e","title":"[TR] Arduino Gimbal Kontrol Kartı"},{"content":"Merhaba Arkadaşlar,\nBu yazımda kendi yazdığım bir Android uygulamasından bahsedeceğim. Telefonda youtube kullanmanın en sıkıntılı yanlarından biri video açıkken başka uygulamalara geçtiğimiz zaman videonun durdurulmasıdır. Bu uygulama sayesinde program arka plana alınsa bile video oynamaya devam eder ve sesini duyabilirsiniz.Programı burdan indirebilirsiniz.\nNot: Programı sadece 3 telefonda deneme şansı bulabildim. Belki başka telefonlarda çalışmayabilir şimdiden uyarmak isterim.\nFor foreign visitors:\nOne of the biggest problem about Youtube is that stopping videos when youtube at back ground or screen off. Therefore i decided to develop an app for solving this problem. You can download the app from here. Note: I can try the app only 3 android phone may be it does not work another android phones.\nScreenshoots from the app App will continue to work at back ground and can be accessible from notifications menu. ","permalink":"https://mozanunal.com/2015/06/youtube-arka-plan-muzik-dinleyici/","summary":"\u003cp\u003e\u003cstrong\u003eMerhaba Arkadaşlar,\u003c/strong\u003e\u003cbr\u003e\nBu yazımda kendi yazdığım bir Android uygulamasından bahsedeceğim. Telefonda\nyoutube kullanmanın en sıkıntılı yanlarından biri video açıkken başka\nuygulamalara geçtiğimiz zaman videonun durdurulmasıdır. Bu uygulama sayesinde\nprogram arka plana alınsa bile video oynamaya devam eder ve sesini\nduyabilirsiniz.\u003ca href=\"https://drive.google.com/file/d/0B5j__Lyt9ozbQXExRTRnX1pSTW8/view?usp=sharing\"\u003eProgramı burdan indirebilirsiniz.\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eNot: Programı sadece 3 telefonda deneme şansı bulabildim. Belki başka\ntelefonlarda çalışmayabilir şimdiden uyarmak isterim.\u003c/p\u003e\n\u003cp\u003eFor foreign visitors:\u003cbr\u003e\nOne of the biggest problem about Youtube is that stopping videos when youtube at\nback ground or screen off. Therefore i decided to develop an app for solving\nthis problem.\n\u003ca href=\"https://drive.google.com/file/d/0B5j__Lyt9ozbQXExRTRnX1pSTW8/view\"\u003eYou can download the app from here. \u003c/a\u003e\u003cbr\u003e\nNote: I can try the app only 3 android phone may be it does not work another\nandroid phones.\u003c/p\u003e","title":"[TR] Youtube Arka Plan Müzik Dinleyici"},{"content":"Herkese Merhabalar,\nBu yazımda her yerde temin edilebilecek ve maliyetsiz malzemelerle nasıl mini servo gimbal yapılacağını anlatacağım. Bu arada en baştan belirteyim kontrol kartı ve açı stabilizasyonu için daha sonra bir yazı hazırlayacağım.\nProje içi kullandığım malzemeler 2 adet servo, Arduino Nano, mini kamera, yoğurt kabı, ve ataç. Gimbalin yapım aşamaları resimlerde sırasıyla anlatılmıştır. Özetlemek gerekirse;\nYoğurt kabından bir köşe 2 kenarıyla beraber çıkarılır. Servolardan bir tanesi için oyuk açılır ve servo oraya vidalanır. Bu servonun koluna ataç vidalanır. Ataç 90 derece büküldükten sonra diğer servo biraz da bant yardımıyla sabitlenir. Burada dikkat etmemiz gereken servoların dönme eksenlerinin kameranın ağırlık merkezinden geçmesidir. Bu sayede servolara binen yükük minimuma düşer. Kamera için yapılan kap vida yardımıyla 2. servonun koluna sabitlenir. Ve son neredeyse hiç maliyetli 2 eksen gimbal yapmış olduk. Biraz titreşim problemi olacaktır diye tahmin ediyorum. Daha az esnek malzemeler kullanılarak bu sorun aşılabilir. ](https://3.bp.blogspot.com/-7reOfYet5uw/VXIBX-SRikI/AAAAAAAALK4/q6v1h2KQXWw/s1600/IMG_20150605_163841.jpg)\n](https://1.bp.blogspot.com/-LrD4-jgunyk/VXIBX6uM7GI/AAAAAAAALK4/CvCm2Tbsu5E/s1600/IMG_20150605_184307.jpg)\n](https://2.bp.blogspot.com/-INWUSdu4ZgU/VXIBXyZIR5I/AAAAAAAALK4/1RNDcbYhUKg/s1600/IMG_20150605_192448.jpg)\n](https://2.bp.blogspot.com/--8i34PRyVUU/VXIBX8ONISI/AAAAAAAALK4/RcaaFgQ40zg/s1600/IMG_20150605_192500.jpg)\nGimbalin servo deneme videosu. Kontrol kartı ve açı stabilizasyonuyla alakalı bir yazı en kısa zamanda yayınlayacağım. Tekrar görüşmek üzere.\n","permalink":"https://mozanunal.com/2015/06/2-eksenli-servo-gimbal-yapm/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003cbr\u003e\nBu yazımda her yerde temin edilebilecek ve maliyetsiz malzemelerle nasıl mini\nservo gimbal yapılacağını anlatacağım. Bu arada en baştan belirteyim kontrol\nkartı ve açı stabilizasyonu için daha sonra bir yazı hazırlayacağım.\u003c/p\u003e\n\u003cp\u003eProje içi kullandığım malzemeler 2 adet servo, Arduino Nano, mini kamera, yoğurt\nkabı, ve ataç. Gimbalin yapım aşamaları resimlerde sırasıyla anlatılmıştır.\nÖzetlemek gerekirse;\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eYoğurt kabından bir köşe 2 kenarıyla beraber çıkarılır.\u003c/li\u003e\n\u003cli\u003eServolardan bir tanesi için oyuk açılır ve servo oraya vidalanır.\u003c/li\u003e\n\u003cli\u003eBu servonun koluna ataç vidalanır.\u003c/li\u003e\n\u003cli\u003eAtaç 90 derece büküldükten sonra diğer servo biraz da bant yardımıyla\nsabitlenir.\u003c/li\u003e\n\u003cli\u003eBurada dikkat etmemiz gereken servoların dönme eksenlerinin kameranın ağırlık\nmerkezinden geçmesidir. Bu sayede servolara binen yükük minimuma düşer.\u003c/li\u003e\n\u003cli\u003eKamera için yapılan kap vida yardımıyla 2. servonun koluna sabitlenir.\u003c/li\u003e\n\u003cli\u003eVe son neredeyse hiç maliyetli 2 eksen gimbal yapmış olduk. Biraz titreşim\nproblemi olacaktır diye tahmin ediyorum. Daha az esnek malzemeler\nkullanılarak bu sorun aşılabilir. \u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://3.bp.blogspot.com/-7reOfYet5uw/VXIBX-SRikI/AAAAAAAALK4/q6v1h2KQXWw/s320/IMG_20150605_163841.jpg\"\u003e](\u003ca href=\"https://3.bp.blogspot.com/-7reOfYet5uw/VXIBX-SRikI/AAAAAAAALK4/q6v1h2KQXWw/s1600/IMG_20150605_163841.jpg\"\u003ehttps://3.bp.blogspot.com/-7reOfYet5uw/VXIBX-SRikI/AAAAAAAALK4/q6v1h2KQXWw/s1600/IMG_20150605_163841.jpg\u003c/a\u003e)\u003c/p\u003e","title":"[TR] 2 Eksenli Servo Gimbal Yapımı"},{"content":"Hi,\nI usually write my blog in Turkish but at this project i decided to write it in English. Because I cannot find any successful tutorial about this issue. I took e-mails or contacts from different countries about my projects if they are unusual so i am going to write some of my article in English.\nAt this project, visualization of android device with IMU sensors will be explained.The orientation of an android device will be shown at PC. Android camera and PC communicate with each other with a WI- FI connection. I wrote 2 program for this project. First one is android app (can download from here). Second one is visualizer program for PC. At android app IMU angles of the\nAndroid phone are sent to PC by using UDP network protocol. After you install the app write your PC\u0026rsquo;s IP to this program. Also you can change the using port.\nPC program is written in Processing 2. Program firstly take the IMU angles from android phone over wifi connection. Then update the 3 dimensional shape on the screen by this data. To use my processing code Processing UDP library must be downloaded.\nConsequently, needs for this project:\nAndroid device Open Android IMU App Processing 2 for PC Processing UDP Library This code for Processing Finally, it is a video of presentation of my project. I hope you enjoy this.\n","permalink":"https://mozanunal.com/2015/05/android-phone-imu-visualizer/","summary":"\u003cp\u003e\u003cstrong\u003eHi,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eI usually write my blog in Turkish but at this project i decided to write it in\nEnglish. Because I cannot find any successful tutorial about this issue. I took\ne-mails or contacts from different countries about my projects if they\nare unusual so i am going to write some of my article in English.\u003c/p\u003e\n\u003cp\u003eAt this project, visualization of android device with IMU sensors will be\nexplained.The orientation of an android device will be shown at PC. Android\ncamera and PC communicate with each other with a WI- FI connection. I wrote 2\nprogram for this project. First one is android app\n(\u003ca href=\"https://drive.google.com/file/d/0B5j__Lyt9ozbNG9SdVBOOVowTjg/view?usp=sharing\"\u003ecan download from here\u003c/a\u003e).\nSecond one is visualizer program for PC. At android app IMU angles of the\u003cbr\u003e\nAndroid phone are sent to PC by using UDP network protocol. After you install\nthe app write your PC\u0026rsquo;s IP to this program. Also you can change the using port.\u003c/p\u003e","title":"[TR] Android Phone IMU Visualizer"},{"content":"Merhaba Arkadaşlar,\nBugün size Arduino Due ile yaptığım osiloskop bahsedeceğim. Arduino Dueyi seçmemin bir kaç nedeni var tabi. Arduino Duede standart Arduinoların 8 bitlik Atmega işlemcilerinden farklı olarak 32 bitlik Arm Cortex M3 var. Bu işlemcinin 84 Mhzlik saat hızı bu proje için elverişli kılıyor.\nOsiloskop projesine başlarken amacım Due ile mümkün olan en yüksek örnekleme hızlı osiloskobu yapmaktı. İlk olarak arduinonun standart AnalogRead() fonksiyonunu denedim. Bir örnek alma süresi 40 uS kadar sürdü. Daha sonra bu bağlantıyı buldum ve oradaki ayarları Duenin ADCsine uyguladım. Osiloskobun son kodu aşağıdaki gibidir. Bu kod sayesinde ADClere direk registerlar.\nüzerinden ulaşıyoruz. Arduinonun fonksiyonunda her analog değer alma işleminde ilkönce ADC\u0026rsquo;yi açıyor, okuduktan sonra ise kapatıyor. Bu kodda ise ADCyi FREE RUN modunda kullanmış oluyoruz. Bu sayede bir örnekleme ortalama 1 uS sürüyor yani 1 Mega Sample Per Second (MSa/s) bir osiloskop yapmış olduk.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 unsigned long start_time; unsigned long stop_time; unsigned long values[1000]; void setup() { Serial.begin(9600); ADC-\u0026gt;ADC_MR |= 0x80; //FREE RUN Adc moda geçilir. ADC-\u0026gt;ADC_CHER = 0x80; //A0 pinini enable yap } void loop() { unsigned int i; start_time = micros(); for(i=0;i\u0026lt;1000;i++){ while((ADC-\u0026gt;ADC_ISR \u0026amp; 0x80)==0); // örnekleme yapılana kadar bekle values[i]=ADC-\u0026gt;ADC_CDR[7]; //değeri al } stop_time = micros(); Serial.print(\u0026#34;Total time: \u0026#34;); Serial.println(stop_time-start_time); Serial.print(\u0026#34;Average time per conversion: \u0026#34;); Serial.println((float)(stop_time-start_time)/1000); Serial.print(\u0026#34;$, \u0026#34;); for(i=0;i\u0026lt;1000;i++) { Serial.print(values[i]); Serial.print(\u0026#34;,\u0026#34;); } Serial.println(); delay(2000); } Osiloskop arayüzünü ise C# dilini kullanarak yazdım. Osiloskop için kullunanılan bu kütüphaneyi kullandım. Arayüzden görüntüler de aşağıdadır.\nOsilopkop denemeleri\nCom port seçiminin yapıldığı pencere\n","permalink":"https://mozanunal.com/2015/05/arduino-due-osiloskop/","summary":"\u003cp\u003e\u003cstrong\u003eMerhaba Arkadaşlar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBugün size Arduino Due ile yaptığım osiloskop bahsedeceğim. Arduino Dueyi\nseçmemin bir kaç nedeni var tabi. Arduino Duede standart Arduinoların 8 bitlik\nAtmega işlemcilerinden farklı olarak 32 bitlik Arm Cortex M3 var. Bu işlemcinin\n84 Mhzlik saat hızı bu proje için elverişli kılıyor.\u003c/p\u003e\n\u003cp\u003eOsiloskop projesine başlarken amacım Due ile mümkün olan en yüksek örnekleme\nhızlı osiloskobu yapmaktı. İlk olarak arduinonun standart AnalogRead()\nfonksiyonunu denedim. Bir örnek alma süresi 40 uS kadar sürdü. Daha sonra\n\u003ca href=\"https://frenki.net/2013/10/fast-analogread-with-arduino-due/\"\u003ebu bağlantıyı\u003c/a\u003e\nbuldum ve oradaki ayarları Duenin ADCsine uyguladım. Osiloskobun son kodu\naşağıdaki gibidir. Bu kod sayesinde ADClere direk registerlar.\u003c/p\u003e","title":"[TR] Arduino Due Osiloskop"},{"content":"Merhaba Arkadaşlar,\nBugünkü yazımda NyARToolkit\u0026rsquo;ten bahsedeceğim. Bu toolkit sayesinde kameradan aldığımız görüntüler üzerine 3 Boyutlu nesneler yerleştirebiliyoruz. İstediğimiz 3 boyutlu grafik hatta animasyon yerleştirilebilir. Google Glass tarzı giyilebilir teknolojilerle daha yaratıcı uygulamalar yapılabilir. Simülasyon ve oyun dünyası için çeşitli uygulamalar geliştirilebilir. Hatta hologramlar yapmanın şimdilik en gerçekleştirilebilir yolu olarak gözüküyor. Toolkit bir çok programlama diliyle kullanılabiliyor. Ben Processing ile kullandım basit olduğu için. Toolkiti kullandığım şöyle bir tanıtım videosu hazırladım:\nToolkiti kullanmak için gerekenler:\n1. Processing 2\n2. NyARToolkit Kütüphanesi(Processing içerisinden add library diyerek kurulabilir.)\n3. Kütüphanemizin tanıyabileceği patternlar(kendiniz de üretebilirsiniz)\n4. Bu kaynak kod\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 import processing.video.*; import jp.nyatla.nyar4psg.*; Capture cam; MultiMarker nya_r; MultiMarker nya_l; PFont font=createFont(\u0026#34;FFScala\u0026#34;, 32); void setup() { size(640,480,P3D); colorMode(RGB, 100); println(MultiMarker.VERSION); cam=new Capture(this,640,480); nya_l=new MultiMarker(this,width,height,\u0026#34;camera_para.dat\u0026#34;,new NyAR4PsgConfig(NyAR4PsgConfig.CS_LEFT_HAND,NyAR4PsgConfig.TM_NYARTK)); nya_l.addARMarker(\u0026#34;patt.hiro\u0026#34;,80); nya_r=new MultiMarker(this,width,height,\u0026#34;camera_para.dat\u0026#34;,new NyAR4PsgConfig(NyAR4PsgConfig.CS_RIGHT_HAND,NyAR4PsgConfig.TM_NYARTK)); nya_r.addARMarker(\u0026#34;patt.kanji\u0026#34;,80); cam.start(); } int c=0; void drawgrid() { pushMatrix(); stroke(0); strokeWeight(2); line(0,0,0,100,0,0); textFont(font,20.0); text(\u0026#34;X\u0026#34;,100,0,0); line(0,0,0,0,100,0); textFont(font,20.0); text(\u0026#34;Y\u0026#34;,0,100,0); line(0,0,0,0,0,100); textFont(font,20.0); text(\u0026#34;Z\u0026#34;,0,0,100); popMatrix(); } void draw() { c++; if (cam.available() !=true) { return; } cam.read(); nya_r.detect(cam); nya_l.detect(cam); background(0); nya_r.drawBackground(cam); //right if((nya_r.isExistMarker(0))) { nya_r.beginTransform(0); fill(0,0,255); drawgrid(); translate(0,0,20); rotate((float)c/100); sphere(40); nya_r.endTransform(); } //left if((nya_l.isExistMarker(0))) { nya_l.beginTransform(0); fill(0,255,0); drawgrid(); translate(0,0,20); rotate((float)c/100); box(40); nya_l.endTransform(); } } ","permalink":"https://mozanunal.com/2015/04/processing-ile-artrlms-gerceklik/","summary":"\u003cp\u003e\u003cstrong\u003eMerhaba Arkadaşlar,\u003c/strong\u003e\u003cbr\u003e\nBugünkü yazımda NyARToolkit\u0026rsquo;ten bahsedeceğim. Bu toolkit sayesinde kameradan\naldığımız görüntüler üzerine 3 Boyutlu nesneler yerleştirebiliyoruz. İstediğimiz\n3 boyutlu grafik hatta animasyon yerleştirilebilir. Google Glass tarzı\ngiyilebilir teknolojilerle daha yaratıcı uygulamalar yapılabilir. Simülasyon ve\noyun dünyası için çeşitli uygulamalar geliştirilebilir. Hatta hologramlar\nyapmanın şimdilik en gerçekleştirilebilir yolu olarak gözüküyor. Toolkit bir çok\nprogramlama diliyle kullanılabiliyor. Ben Processing ile kullandım basit olduğu\niçin. Toolkiti kullandığım şöyle bir tanıtım videosu hazırladım:\u003c/p\u003e","title":"[TR] Processing ile Artırılmış Gerçeklik"},{"content":"Herkese Merhabalar,\nBu yazımda daha önce yaptığım bir uygulamanın 2. versiyonundan bahsedeceğim. Programımı daha önce şöyle anlatmıştım: Bu program sayesinde ekstra hiç bir ekipman kullanmadan 2 boyutlu bilgisayar ekranını 3 boyutlu görme uygulamasını gerçekleştirebileceğimiz bir şeye dönüştürüyoruz. Bunu nasıl yapıyor diye soracak olursanız görüntü işleme sayesinde!.Programda webcam üzerinden yüz tespiti yapılıyor ve ekrana nereden baktığı tespit ediliyor. Hesaplanan bu açı daha sonra kullandığım 3 boyut kütüphanesi olan OpenGL\u0026rsquo;in kamerasını ayarlamak için kullanılıyor. böylece ekrana bakış yönünüze göre değişen bir 3D görme uygulaması hazırlanmış oluyor.\nBu versiyonla gelen yeniliklere gelecek olursak en büyük değişiklik artık bilgisayardan uzaklığımıza göre cisim yakınlaşıp uzaklaşıyor. Biraz da grafiklerde değişiklik yapmak istedim yaptığım performans iyileştirmesi sayesinde programın çözünürlüğü artık 720p. Eklediğim diğer şeyse Low Pass Filter. Peki nedir diyecek olursanız; sisteme eski giren verilerle şu anki verilerin ortalamasını alır(ne kadar geriden alınacağı, ne kadar ağırlıklı bir ortalama olacağı değişebilir) bu sayede daha \u0026ldquo;smooth\u0026rdquo; sonuçlar elde edilebilir.\n","permalink":"https://mozanunal.com/2015/03/baks-acs-tabanl-3-boyutlu-gorus2/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBu yazımda daha önce yaptığım bir uygulamanın 2. versiyonundan bahsedeceğim.\nProgramımı daha önce şöyle anlatmıştım:  Bu program sayesinde ekstra hiç bir\nekipman kullanmadan 2 boyutlu bilgisayar ekranını 3 boyutlu görme uygulamasını\ngerçekleştirebileceğimiz bir şeye dönüştürüyoruz. Bunu nasıl yapıyor diye\nsoracak olursanız görüntü işleme sayesinde!.Programda webcam üzerinden yüz\ntespiti yapılıyor ve ekrana nereden baktığı tespit ediliyor. Hesaplanan bu açı\ndaha sonra kullandığım 3 boyut kütüphanesi olan OpenGL\u0026rsquo;in kamerasını ayarlamak\niçin kullanılıyor. böylece ekrana bakış yönünüze göre değişen bir 3D görme\nuygulaması hazırlanmış oluyor.\u003c/p\u003e","title":"[TR] Bakış Açısı Tabanlı 3 Boyutlu Görüş Versiyon 2.00"},{"content":"Merhaba arkadaşlar,\nBugünkü yazımda bir PIR sensörü olan HC-SR501 inceleyeceğiz. PIR sensörünün açılımı Passive Infrared Sensor. Son 4- 5 yılda çok hızlı bir yayılım gösterdi bu sensörler ve insan algılayınca çalışan lambalar, otomatik el kurutma vb makinalar olarak hayatımıza girdi. Modulumüzden bahsetmeden önce PIR sensör nedir onu açıklamak istiyorum. PIR sensör ortamdaki kızılötesi ışınları ölçer.\nAlıcılarda çok farklı yere doğru odaklanan frensel lensi bulunur bu sayede belli bir alandaki tüm enerji ölçülmüş olur. Canlıların sıcaklığı ortalama 36 derece civarlarında olduğundan merceğin üzerine düşen kızılötesi ışınların toplam enerjisi y ir. Böylece canlı varlığı tespit edilmiş olur.\nGelelim modülümüze. Çalışma voltajı 3.6- 20 volt arasında. Resimde gösterilen \u0026ldquo;Sensivity Adjust\u0026rdquo; tripotundan hassasiyet ayarlanıyor. Diğer trimpottan ise 0.5 -300 saniye ayarını yapabiliriz. Modül bir cisim algılayınca \u0026ldquo;Output\u0026rdquo; pininden çıkış veriyor. Test etmek için bir Arduino kodu yazdım.Koddaki yaptığım tek şey dijital veriyi okuyup ekrana seri port üzerinden bilgisayara yollatmak. Zaten sadece lamba çalıştırmak için Arduino kullanmak gereksiz olur. Bir transistör ile çıkış güçlendirilip röle sürmek daha mantıklı olacaktır.\nBenim bilgileri aldığım modulün datasheet\u0026rsquo;i de burada.\nhttps://www.mpja.com/download/31227sc.pdf\n","permalink":"https://mozanunal.com/2015/03/hc-sr501-pir-sensoru/","summary":"\u003cp\u003e\u003cstrong\u003eMerhaba arkadaşlar,\u003c/strong\u003e\u003cbr\u003e\nBugünkü yazımda bir PIR sensörü olan HC-SR501 inceleyeceğiz. PIR sensörünün\naçılımı Passive Infrared Sensor. Son 4- 5 yılda çok hızlı bir yayılım gösterdi\nbu sensörler ve insan algılayınca çalışan lambalar, otomatik el kurutma vb\nmakinalar olarak hayatımıza girdi. Modulumüzden bahsetmeden önce PIR sensör\nnedir onu açıklamak istiyorum. PIR sensör ortamdaki kızılötesi ışınları ölçer.\u003c/p\u003e\n\u003cp\u003eAlıcılarda çok farklı yere doğru odaklanan frensel lensi bulunur bu sayede belli\nbir alandaki tüm enerji ölçülmüş olur. Canlıların sıcaklığı ortalama 36 derece\ncivarlarında olduğundan merceğin üzerine düşen kızılötesi ışınların toplam\nenerjisi y ir. Böylece canlı varlığı tespit edilmiş olur.\u003c/p\u003e","title":"[TR] HC-SR501 PIR Sensörü"},{"content":"Merhaba arkadaşlar,\nBugünkü yazımda ESP8266 modüllerinden bahsetmek istiyorum. Bu modül seri port üzerinden haberleşen wifi modülü. Fiyatı yaklaşık 5 $ özelliklerini gördüğünüz fiyatından çok daha fazlasını hakkettiğini göreceksiniz. Özelliklerine geçecek olursak;\n802.11 b/g/n desteği\nWi-Fi Direct (P2P) Desteği\nDahili TCP/IP protokol yığını\n+19,5dBm çıkış gücü (802.11b modunda)\nKaçak akım \u0026lt; 10uA\nDahili düşük güç tüketimine sahip 32-bit\u0026rsquo;lik işlemci\nSDIO 1.1/2.0, SPI ve UART desteği\nSTBC, 1x1 MIMO, 2x1 MIMO\nUyanma ve veri paketi alma süresi \u0026lt; 2ms\nStand-by durumunda güç tüketimi \u0026lt; 1mW\nModülümüz yaygın tüm wifi protokollerini destekliyor, yerel ağdan ve internet üzerinden yapabileceğimiz binlerce çeşit uygulama için oldukça elverişli. Üzerinde 32 bitlik işlemci mevcut. 19.5 dBm çıkış gücüne sahip, full güç ile çalıştırılırsa antensiz 400 metreden fazla antenli ise 4km\u0026rsquo;den fazla uzaklıktan sinyal alınabildiği test edilmiş bu fiyat ve bu boyutta bir modül için rakamlar çok iyi.Buradan mesafe testi videosunu izleyebilirsiniz. Boyut konusuna gelecek olursak boyutları 2.1 cmX 1.3 cm, üzerinde dahili PCB anten bulunuyor.\nInternet of Things\nEsp8266\u0026rsquo;nın özellikleri böyle fakat biz ne için kullanacağız. 1999 yılında ortaya atılan son yıllarda ise popülerleşen bir kavram var, \u0026ldquo;Internet of Things\u0026rdquo; yani Türkçesi\u0026quot; Nesnelerin İnterneti\u0026quot; kavramı, insanlar dışında diğer eşyaların da (buz dolabı, ocak, klima, evin kapısı\u0026hellip;) bir iletişim ağına sahip olup, birbiriyle haberleşmesi. İşte bu küçük wifi modülleri bu noktada devreye giriyor. Kullanımları basit, düşük maliyetli, enerji tüketimleri düzenlenebilir olan bu modüller, kolayca herhangi bir eşyamızı \u0026ldquo;Online\u0026rdquo; hale getirebilir, bilgisayar telefon gibi herhangi bir ağa bağlanabilen aletlerle kontrol edebilen şeylere dönüştürebilir. \u0026ldquo;Online\u0026rdquo; eşyalarımızı haberleştirerek daha akıllı, daha efektif hale getirebilir.Aynı zamanda hali hazırda var olan wifi ağlarını kullanmaları modullerin entegre edilebilirliğini artırıyor.\nBu yazıda Esp8266 modülünün kullanımına sadece bir giriş yapacağız, modülümüzle HTML sayfası oluşturup, bilgisayarımızdan bağlanacağız. Modülümüzün kullanımına gelecek olursak pin dizilimi aşağıdaki gibidir.\nBizim yapacağımız bağlantılar ise şu şekilde olmalıdır.\nVCC\u0026mdash;\u0026gt; Arduino 3.3 V\nGND\u0026mdash;\u0026gt; Arduino GND\nRX\u0026mdash;\u0026ndash;\u0026gt;Serial 1 TX\nTX\u0026mdash;\u0026ndash;\u0026gt;Serial 1 RX\nCH_PD\u0026gt; Arduino 3.3 V\nÖnemli Uyarı: Bu modül 3.3 volt ile çalışmaktadır ve rx tx pini de 5 volta dayanıklı değildir. Ben bu projede Arduino DUE kullandığım için problem yaşamadım fakat diğer Arduino modellerinin 5 voltlukları kullanılacağı zaman level shifter entegrelerine ihtiyaç duyulur.\nArduino kodu aşağıdadır eğer başka bir Arduino ile kullanacaksanız \u0026ldquo;Serial1\u0026rdquo; yerine \u0026ldquo;SoftwareSerial\u0026rdquo; kullanmanızı öneririm.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 #include \u0026lt;Wire.h\u0026gt; #define DEBUG true void setup() { Serial.begin(9600);// Arduino-Pc haberleşmesi Debug için kullanacağım Serial1.begin(9600); // Arduinoyu Esp8266 bağladığımız serial port sendData(\u0026#34;AT+RST\\r\\n\u0026#34;,2000,DEBUG); // reset sendData(\u0026#34;AT+CWMODE=3\\r\\n\u0026#34;,1000,DEBUG); // MOde olarak access point seçilir sendData(\u0026#34;AT+CIFSR\\r\\n\u0026#34;,1000,DEBUG); // Modulün ip adresi alınır sendData(\u0026#34;AT+CIPMUX=1\\r\\n\u0026#34;,1000,DEBUG); // birden fazla bağlantıya izin ver sendData(\u0026#34;AT+CIPSERVER=1,80\\r\\n\u0026#34;,1000,DEBUG); // Port= 80 yapılır } int sayi=0; void loop() { if(Serial1.available()) { if(Serial1.find(\u0026#34;+IPD,\u0026#34;)) { delay(300); int connectionId = Serial1.read()-48; // 48 çıkarılır çünkü char to int fönüşümü yapmamız gerek // ASCCI table da 0 sayısı 48 ile ifade edilir yani: // \u0026#39;0\u0026#39; - 48 = 0 // \u0026#39;1\u0026#39; - 48 = 1 String webpage = \u0026#34;\u0026lt;head\u0026gt;\u0026lt;meta http-equiv=\u0026#34;\u0026#34;refresh\u0026#34;\u0026#34; content=\u0026#34;\u0026#34;10\u0026#34;\u0026#34;\u0026gt;\u0026lt;/head\u0026gt;\u0026#34;; webpage+=\u0026#34;\u0026lt;h1\u0026gt;Esp8266 Html Testi\u0026lt;/h1\u0026gt;\u0026lt;h2\u0026gt;\u0026#34;; webpage+= \u0026#34;mozanunal.com\u0026#34;; webpage+=\u0026#34;\u0026lt;/h2\u0026gt;\u0026#34;; String cipSend = \u0026#34;AT+CIPSEND=\u0026#34;; cipSend += connectionId; cipSend += \u0026#34;,\u0026#34;; cipSend +=webpage.length(); cipSend +=\u0026#34;\\r\\n\u0026#34;; sendData(cipSend,1000,DEBUG); sendData(webpage,1000,DEBUG); String closeCommand = \u0026#34;AT+CIPCLOSE=\u0026#34;; closeCommand+=connectionId; closeCommand+=\u0026#34;\\r\\n\u0026#34;; sendData(closeCommand,3000,DEBUG); } } } String sendData(String command, const int timeout, boolean debug) { String response = \u0026#34;\u0026#34;; Serial1.print(command); // send the read character to the esp8266 long int time = millis(); while( (time+timeout) \u0026gt; millis()) { while(Serial1.available()) { // The esp has data so display its output to the serial window char c = Serial1.read(); // read the next character. response+=c; } } if(debug) { Serial.print(response); } return response; } Esp8266yı Acces Point olarak kullanıyoruz. Yani bizim için wifi ağı kurar kodu yükledikten sonra ağa bağlanın.\nSerial porttan gelen veriler bu şekilde olmalıdır. Problem yaşadığımızda buradan kontrol edip DEBUG yapabiliriz.\nProgramımızın çıktısı bu şekilde olacaktır.\nString halinde Arduino\u0026rsquo;ya yüklediğimiz HTML dosyasını modül wifi ağında paylaşır.\n","permalink":"https://mozanunal.com/2015/03/esp8266-modulu-html-server/","summary":"\u003cp\u003e\u003cstrong\u003eMerhaba arkadaşlar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBugünkü yazımda ESP8266 modüllerinden bahsetmek istiyorum. Bu modül seri port\nüzerinden haberleşen wifi modülü. Fiyatı yaklaşık 5 $ özelliklerini gördüğünüz\nfiyatından çok daha fazlasını hakkettiğini göreceksiniz. Özelliklerine geçecek\nolursak;\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e802.11 b/g/n desteği\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWi-Fi Direct (P2P) Desteği\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDahili TCP/IP protokol yığını\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e+19,5dBm çıkış gücü (802.11b modunda)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eKaçak akım \u0026lt; 10uA\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDahili düşük güç tüketimine sahip 32-bit\u0026rsquo;lik işlemci\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSDIO 1.1/2.0, SPI ve UART desteği\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSTBC, 1x1 MIMO, 2x1 MIMO\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUyanma ve veri paketi alma süresi \u0026lt; 2ms\u003c/p\u003e","title":"[TR] ESP8266 Modulü Web Server"},{"content":"Herkese Merhabalar,\nBugünkü yazımda ICSP olarak kısaltıllan \u0026ldquo;In Circuit Serial Programing\u0026quot;ten bahsedeceğim. Türkçeye devre içerisinde programlama olarak çevrilebilir. Oldukça avantajlı bir programlama şeklidir. Özellikle Pic programlarken sıkça kullanılır. Devresi hazır hale getirilmiş lehimlenmiş Picleri bu yöntem ile devreden sökmeden programlayabiliriz.PIC KIT 2, ICSP programlama için en çok kullanılan modullerden biridir. Ben de onu kullandım, kullandığım Pic ise PIC16f877a\u0026rsquo;dır. Bağlantılar ise okla işaretletli yönden diğer tarafa doğru şu şekildedir;\nMCRL(VPP) VDD GND ICSPDAT/PGD ICSPCLK/PGK Auxiliary Programınızı pic için geliştirilmiş bir dilde yazmanız gerekiyor. Seçeneklerinizden bazıları, Pic C, Pic Basic Pro, Assembly, Mikro C. Bu yazdığımız programı derleyip .hex formatına çeviriyoruz. Başka bir program kullanarak da derlediğimiz .hex formatındaki dosyaları Pic\u0026rsquo;e aktarıyoruz.\nÖnemli not: Hazır oluşturulmuş bir devredeki Pic programlayacaksanız devrenin çektiği akıma dikkat etmeniz gerekli. Çünkü PIC KIT 2(ve ya benzeri programlayıcılar) verebileceği maximum akım çok yüksek değildir. Ortak Gnd\u0026rsquo;li harici beslemeler sorunumuzu çözecektir.\n","permalink":"https://mozanunal.com/2015/01/pic-icin-in-circuit-serial/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBugünkü yazımda ICSP olarak kısaltıllan \u0026ldquo;In Circuit Serial Programing\u0026quot;ten\nbahsedeceğim. Türkçeye devre içerisinde programlama olarak çevrilebilir. Oldukça\navantajlı bir programlama şeklidir. Özellikle Pic programlarken sıkça\nkullanılır. Devresi hazır hale getirilmiş lehimlenmiş Picleri bu yöntem ile\ndevreden sökmeden programlayabiliriz.PIC KIT 2, ICSP programlama için en  çok\nkullanılan modullerden biridir. Ben de onu kullandım, kullandığım Pic ise\nPIC16f877a\u0026rsquo;dır. Bağlantılar ise okla işaretletli yönden diğer tarafa doğru şu\nşekildedir;\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMCRL(VPP)\u003c/li\u003e\n\u003cli\u003eVDD\u003c/li\u003e\n\u003cli\u003eGND\u003c/li\u003e\n\u003cli\u003eICSPDAT/PGD\u003c/li\u003e\n\u003cli\u003eICSPCLK/PGK\u003c/li\u003e\n\u003cli\u003eAuxiliary\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eProgramınızı pic için geliştirilmiş bir dilde yazmanız gerekiyor.\nSeçeneklerinizden bazıları, Pic C, Pic Basic Pro, Assembly, Mikro C. Bu\nyazdığımız programı derleyip .hex formatına çeviriyoruz. Başka bir program\nkullanarak da derlediğimiz .hex formatındaki dosyaları Pic\u0026rsquo;e aktarıyoruz.\u003c/p\u003e","title":"[TR] PIC İçin In Circuit Serial Programming (ICSP)"},{"content":"Merhaba Arkadaşlar\nBugünkü yazımda Arduino ile melodi çalma uygulamasından bahsedeceğim. Kullandığım malzemeler Arduino ve bir buzzer. Pin bağlantıları da oldukça basit buzzerın eksi ucu GND\u0026rsquo;ye, + ucu da 12. pine bağlanıyor. 12. Pin dijital pin, farklı frekanslarda 1-0 yapılarak notaların çalınması sağlanır. Notaların çalınma süreleri de nota frekansının verilme süresi değiştirilerek arduino tarafından ayarlanıyor. Böylece istediğimiz melodiyi elde etmiş oluyoruz. Ayrıntılı bilgiye buradan ulaşabilirsiniz. Arduino koduna aşağıdan ulaşabilirsiniz(Kod alıntıdır. Tek tek notalarla uğraşmamak için notaları çıkarılmış bir koddan aldım.). Tekrar görüşmek üzere.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 /* This example uses a piezo speaker to play melodies. It sends * a square wave of the appropriate frequency to the piezo, generating * the corresponding tone. * * The calculation of the tones is made following the mathematical * operation: * * timeHigh = period / 2 = 1 / (2 * toneFrequency) * * where the different tones are described as in the table: * * note frequency period timeHigh * c 261 Hz 3830 1915 * d 294 Hz 3400 1700 * e 329 Hz 3038 1519 * f 349 Hz 2864 1432 * g 392 Hz 2550 1275 * a 440 Hz 2272 1136 * b 493 Hz 2028 1014 * C 523 Hz 1912 956 * * https://www.arduino.cc/en/Tutorial/Melody */ int speakerPin = 12; int length = 295; // the number of notes char notes[] = \u0026#34;EE E CE G g C g e a b ia gEGA FG E CDb C g e a b ia gEGA FG E CDb GNFR E uaC aCD GNFR E 1 11 GNFR E uaC aCD L D C CC C CD EC ag CC C CDE CC C CD EC ag EE E CE G g C g e a b ia gEGA FG E CDb C g e a b ia gEGA FG E CDb EC g u aF Fa bAAAGFEC ag EC g u aF Fa bF FFEDCe ec \u0026#34;; // a space represents a rest float beats[] = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, //Page 1 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 4, //Page 2 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, //Page4 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, //Page 5 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1.3, 1.3, 1.3, 1.3, 1.3, 1.3, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1.3, 1.3, 1.3, 1, 1, 1, 1, 1, 1, 2 }; //Page 6 int tempo = 95; void playTone(int ton1, int duration) { for (long i = 0; i \u0026lt; duration * 1000L; i += ton1) { tone(speakerPin, ton1); delayMicroseconds(ton1); } noTone(speakerPin); } void playNote(char note, int duration) { // c c# d d# e f f# g g# a a# b char names[] = { \u0026#39; \u0026#39;, \u0026#39;!\u0026#39;, \u0026#39;2\u0026#39;, \u0026#39;3\u0026#39;, \u0026#39;4\u0026#39;, \u0026#39;5\u0026#39;, \u0026#39;6\u0026#39;, \u0026#39;7\u0026#39;, \u0026#39;8\u0026#39;, \u0026#39;9\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;-\u0026#39;, \u0026#39;=\u0026#39;, \u0026#39;c\u0026#39;, \u0026#39;d\u0026#39;, \u0026#39;e\u0026#39;, \u0026#39;f\u0026#39;, \u0026#39;g\u0026#39;, \u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;C\u0026#39;, \u0026#39;D\u0026#39;, \u0026#39;E\u0026#39;, \u0026#39;F\u0026#39;, \u0026#39;G\u0026#39;, \u0026#39;A\u0026#39;, \u0026#39;B\u0026#39;, \u0026#39;i\u0026#39;, \u0026#39;N\u0026#39;, \u0026#39;R\u0026#39;, \u0026#39;u\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;L\u0026#39;, \u0026#39;k\u0026#39;}; // [i = b flat] [N = G flat] [R = D#] [u = g#] [1 = C oct. 5] [L = E flat] int tones[] = { 0, 1046, 138, 146, 155, 164, 174, 184, 195, 207, 220, 233, 246, 261, 293, 329, 349, 391, 440, 493, 523, 587, 659, 698, 783, 880, 987, 466, 740, 622, 415, 1046, 622u, 227}; // play the tone corresponding to the note name for (int i = 0; i \u0026lt; 34; i++) { if (names[i] == note) { playTone(tones[i], duration); } } } void setup() { pinMode(speakerPin, OUTPUT); } void loop() { for (int i = 0; i \u0026lt; length; i++) { if (notes[i] == \u0026#39; \u0026#39;) { delay(beats[i] * tempo); // rest } else { playNote(notes[i], beats[i] * tempo); } // pause between notes delay(tempo / 2); } } ","permalink":"https://mozanunal.com/2015/01/arduino-ile-super-mario-melodisi-calmak/","summary":"\u003cp\u003e\u003cstrong\u003eMerhaba Arkadaşlar\u003c/strong\u003e\u003cbr\u003e\nBugünkü yazımda Arduino ile melodi çalma uygulamasından bahsedeceğim.\nKullandığım malzemeler Arduino ve bir buzzer. Pin bağlantıları da oldukça basit\nbuzzerın eksi ucu GND\u0026rsquo;ye,  + ucu da 12. pine bağlanıyor. 12. Pin dijital pin,\nfarklı frekanslarda 1-0 yapılarak notaların çalınması sağlanır. Notaların\nçalınma süreleri de nota frekansının verilme süresi değiştirilerek arduino\ntarafından ayarlanıyor. Böylece istediğimiz melodiyi elde etmiş oluyoruz.\nAyrıntılı bilgiye \u003ca href=\"https://www.arduino.cc/en/Tutorial/Melody\"\u003eburadan\u003c/a\u003e\nulaşabilirsiniz. Arduino koduna aşağıdan ulaşabilirsiniz(Kod alıntıdır. Tek tek\nnotalarla uğraşmamak için notaları çıkarılmış bir koddan aldım.). Tekrar\ngörüşmek üzere.\u003c/p\u003e","title":"[TR] Arduino İle Super Mario Melodisi Çalmak"},{"content":"Merhabalar,\nBugünkü yazımda yaptığım robot koldan bahsedeceğim. Robot kolum Arduino kontrollü. Mekanik aksamında 4 adet servo kullandım. Alt kısmını 2 eksenli mini kamera gimbalinden yaptım. Kalan kısmı ise plastik bir kapı keserek yaptım. Servoları plastik parçalara vidaladım. Kullandığım servolar 9 gramlık mikro servolar. Verebilecekleri tork 1.8 kg.cm . Ben robot kola kesme şeker ve kalemtıraş gibi küçük nesneler taşıttım. Onlar için yeterli oldu. Kolun kontrolü için 2 tane 2 eksenli joystick kullandım. Arduinonun 4 analog pininden joystickleri bağladım. 4 servonun kontrolü için de 4 dijital pini kullandım. Tutma mekanizması olarak ise ataçtan bir kıskaç yaptım. Servolara güç uygulatıp sıkıştırınca esnekliği sayesinde oldukça iyi sonuç verdi. Aşağıda resimleri ve tanıtım videosu bulunmaktadır. Tekrar görüşmek üzere.\n","permalink":"https://mozanunal.com/2015/01/robot-kol/","summary":"\u003cp\u003e\u003cstrong\u003eMerhabalar,\u003c/strong\u003e\u003cbr\u003e\n      Bugünkü yazımda yaptığım robot koldan bahsedeceğim. Robot kolum Arduino\nkontrollü. Mekanik aksamında 4 adet servo kullandım. Alt kısmını 2 eksenli mini\nkamera gimbalinden yaptım. Kalan kısmı ise plastik bir kapı keserek yaptım.\nServoları plastik parçalara vidaladım. Kullandığım servolar 9 gramlık mikro\nservolar. Verebilecekleri tork 1.8 kg.cm . Ben robot kola kesme şeker ve\nkalemtıraş gibi küçük nesneler taşıttım. Onlar için yeterli oldu. Kolun kontrolü\niçin 2 tane 2 eksenli joystick kullandım. Arduinonun 4 analog pininden\njoystickleri bağladım. 4 servonun kontrolü için de 4 dijital pini kullandım.\nTutma mekanizması olarak ise ataçtan bir kıskaç yaptım. Servolara güç uygulatıp\nsıkıştırınca esnekliği sayesinde oldukça iyi sonuç verdi. Aşağıda resimleri ve\ntanıtım videosu bulunmaktadır. Tekrar görüşmek üzere.\u003c/p\u003e","title":"[TR] Robot Kol"},{"content":"Tekrardan Merhabalar,\nVoltaj regülatörleri elektronik devrelerde büyük önem taşır. Çoğu mikroişlemci, entegre belli bir voltajda çalışır. Aynı zamanda bir devrede farklı voltajlarda çalışan bölümler olabilir. Bu gibi durumlarda regülatör kullanırız.Yazıda konumuz LM78XX entegreleri. LM78XX entegreleri, voltaj regülatörü entegreleridir. Geniş voltaj aralığında voltajı regüle edebilirler. Entegrelerin ismindeki son 2 rakam hangi voltaja regüle ettiğini gösterirler. Örneğin; LM7805 5 volta, LM7812 12 volta regüle eder. Kullanımı oldukça kolay olduğu için sıklıkla kullanılırlar. Kullanımını 7805 üzerinden aşağıda anlattım.\nLM7805 Entegresi Kullanımı\n7805 entegresi sabit 5 volt gerilim almamızı sağlayan bir devre elemanıdır. bu devre elemanımız şekilde görüldüğü gibi 3 bacaklıdır.1. bacağı yüksek volt girişi, 2. bacağı GND ve 3. bacağı 5 volt çıkışıdır. 7 - 35 volt arası girişi 5 volta regüle eder. Eğer 400 miliamperden fazla akım alacaksınız soğutucu kullanmanızı tavsiye ederim.\n","permalink":"https://mozanunal.com/2015/01/lm78xx-voltaj-regulatoru-entegrelerini/","summary":"\u003cp\u003e\u003cstrong\u003eTekrardan Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eVoltaj regülatörleri elektronik devrelerde büyük önem taşır. Çoğu mikroişlemci,\nentegre belli bir voltajda çalışır. Aynı zamanda bir devrede farklı voltajlarda\nçalışan bölümler olabilir. Bu gibi durumlarda regülatör kullanırız.Yazıda\nkonumuz LM78XX entegreleri. LM78XX entegreleri, voltaj regülatörü\nentegreleridir. Geniş voltaj aralığında voltajı regüle edebilirler. Entegrelerin\nismindeki son 2 rakam hangi voltaja regüle ettiğini gösterirler. Örneğin; LM7805\n5 volta, LM7812 12 volta regüle eder. Kullanımı oldukça kolay olduğu için\nsıklıkla kullanılırlar. Kullanımını 7805 üzerinden aşağıda anlattım.\u003c/p\u003e","title":"[TR] LM78XX Voltaj Regülatörü Entegrelerini Kullanma"},{"content":"Merhabalar!\nBugünkü yazımda LCD göstergeli bir mesafe ölçerin nasıl yapılabileceğini anlatacağım. Projede Arduino, LCD modülü ve HC-SR04 modülü kullandım. Mesafe hesaplama işini \u0026ldquo;NewPing\u0026rdquo; isimli kütüphaneye yaptırdım. Bu aldığım mesafe verilerini de LCD ekrana bastırıyorum kod bu kadar basit. HC-SR04 ultrasonik mesafe hesaplama modulü. Mesafe hesabı için ses dalgalarını kullanıyor. Ses hızına göre geri dönüş süresini hesaplıyor bu sayede uzaklık hakkında bilgi sahibi olmuş oluyoruz.\nUygulamanın Arduino Kodunu paylaşıyorum. Bağlantılar da kod içerisinde verilmiştir.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 /* The circuit: * LCD RS pin to digital pin 12 * LCD Enable pin to digital pin 11 * LCD D4 pin to digital pin 5 * LCD D5 pin to digital pin 4 * LCD D6 pin to digital pin 3 * LCD D7 pin to digital pin 2 * LCD R/W pin to ground * 10K resistor: * ends to +5V and ground * wiper to LCD VO pin (pin 3) */ // include the library code: #include \u0026lt;LiquidCrystal.h\u0026gt; #include \u0026lt;NewPing.h\u0026gt; #define TRIGGER_PIN 7 // Arduino pin tied to trigger pin on the ultrasonic sensor. #define ECHO_PIN 6 // Arduino pin tied to echo pin on the ultrasonic sensor. #define MAX_DISTANCE 200 // Maximum distance we want to ping for (in centimeters). Maximum sensor distance is rated at 400-500cm. // initialize the library with the numbers of the interface pins LiquidCrystal lcd(12, 11, 5, 4, 3, 2); NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE); void setup() { lcd.begin(16, 2); lcd.print(\u0026#34;UZAKLIK\u0026#34;); Serial.begin(115200); // Open serial monitor at 115200 baud to see ping results. } void loop() { delay(1000); unsigned int uS = sonar.ping(); Serial.print(\u0026#34;Ping: \u0026#34;); Serial.print(uS / US_ROUNDTRIP_CM); Serial.println(\u0026#34;cm\u0026#34;); lcd.setCursor(0, 1); lcd.print(uS / US_ROUNDTRIP_CM); } ","permalink":"https://mozanunal.com/2015/01/lcd-gostergeli-mesafe-olcer/","summary":"\u003cp\u003e\u003cstrong\u003eMerhabalar!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBugünkü yazımda LCD göstergeli bir mesafe ölçerin nasıl yapılabileceğini\nanlatacağım. Projede Arduino, LCD modülü ve HC-SR04 modülü kullandım. Mesafe\nhesaplama işini \u0026ldquo;NewPing\u0026rdquo; isimli kütüphaneye yaptırdım. Bu aldığım mesafe\nverilerini de LCD ekrana bastırıyorum kod bu kadar basit. HC-SR04 ultrasonik\nmesafe hesaplama modulü. Mesafe hesabı için ses dalgalarını kullanıyor. Ses\nhızına göre geri dönüş süresini hesaplıyor bu sayede uzaklık hakkında bilgi\nsahibi olmuş oluyoruz.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://2.bp.blogspot.com/-imW1-EwFBzI/VLK22y3CYhI/AAAAAAAAGjE/IiK8R_IY9rM/s1600/IMG_20150111_183709.jpg\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://3.bp.blogspot.com/-QmoDFE2QbYc/VLK23M3z7hI/AAAAAAAAGjI/q0U5KHUuEiU/s1600/IMG_20150111_183748.jpg\"\u003e\u003c/p\u003e\n\u003cp\u003eUygulamanın Arduino Kodunu paylaşıyorum. Bağlantılar da kod içerisinde\nverilmiştir.\u003c/p\u003e","title":"[TR] LCD Göstergeli Mesafe Ölçer"},{"content":"Merhabalar!\nBugünkü yazımda SDR ile uçaklardan veri alıp onları haritada takip etmeyi anlatacağım. Bunun için gerekli olan yazılımlar ADSBsharp ve ADSBScope yazılımlarıdır. Ben donanım olarak 10 $ Çin\u0026rsquo;den aldığım SDR\u0026rsquo;yi kullandım. Anten olarak ise 5 TL\u0026rsquo;lik TV anteni kullandık. Bu anten tabi ki bu iş için uygun anten değil. Çalışacağımız frekans 1090 Mhz benim antenimle sadece yakın çevredeki uçaklardan veri almak mümkün. En kısa zamanda antenlerle ilgili bir yazı yayınlayacağım o zamana kadar şurayı inceleyebilirsiniz. Yapacağımız iş temel olarak söyle: Uçaklar uçarken koordinantları, rotaları vb şeklinde ADSB diye kısaltılan bir bilgilendirme dataları yollayarak uçarlar. Bizim SDR ile yaptığımız şey 1090 Mhz sinyalleri alıp onları decode etmek. Decode işlemi için ADSBSharp (RTL 1090 alternatifidir.) yazılımını kullanabilirsiniz. Daha sonra decode edilen data port üzerinden başka bir programa aktarılır. Bu program ile elde edilen veriler bir arayüze aktarılır ve uçak harita üzerinde gösterilir. Haritada gösterme işi için ADSBScope yazılıımını kullandım. Aşağıda yazılımların nasıl kullanıldığını anlatığım videoyu paylaşıyorum 2 adet fotoğrafla beraber. Görüşmek üzere\u0026hellip;\n","permalink":"https://mozanunal.com/2015/01/sdr-ile-ucaklarn-yaynlarndan-yerlerini/","summary":"\u003cp\u003e\u003cstrong\u003eMerhabalar!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBugünkü yazımda SDR ile uçaklardan veri alıp onları haritada takip etmeyi\nanlatacağım. Bunun için gerekli olan yazılımlar ADSBsharp ve ADSBScope\nyazılımlarıdır. Ben donanım olarak 10 $ Çin\u0026rsquo;den aldığım SDR\u0026rsquo;yi kullandım. Anten\nolarak ise 5 TL\u0026rsquo;lik TV anteni kullandık. Bu anten tabi ki bu iş için uygun anten\ndeğil. Çalışacağımız frekans 1090 Mhz benim antenimle sadece yakın çevredeki\nuçaklardan veri almak mümkün. En kısa zamanda antenlerle ilgili bir yazı\nyayınlayacağım o zamana kadar\n\u003ca href=\"https://www.rtl-sdr.com/adsb-aircraft-radar-with-rtl-sdr/\"\u003eşurayı inceleyebilirsiniz\u003c/a\u003e.\nYapacağımız iş temel olarak söyle: Uçaklar uçarken koordinantları, rotaları vb\nşeklinde ADSB diye kısaltılan bir bilgilendirme dataları yollayarak uçarlar.\nBizim SDR ile yaptığımız şey 1090 Mhz sinyalleri alıp onları decode etmek.\nDecode işlemi için ADSBSharp (RTL 1090 alternatifidir.) yazılımını\nkullanabilirsiniz. Daha sonra decode edilen data port üzerinden başka bir\nprograma aktarılır. Bu program ile elde edilen veriler bir arayüze aktarılır ve\nuçak harita üzerinde gösterilir. Haritada gösterme işi için ADSBScope\nyazılıımını kullandım. Aşağıda yazılımların nasıl kullanıldığını anlatığım\nvideoyu paylaşıyorum 2 adet fotoğrafla beraber. Görüşmek üzere\u0026hellip;\u003c/p\u003e","title":"[TR] SDR ile Uçakların Yayınlarından Yerlerini Tespit Etmek"},{"content":"Herkese Merhabalar!\nSDR için ilk uygulama olarak TV izleme uygulamasını seçtim. Çünkü bu modüller Tv alıcı modülleri olarak satılıyorlar. Bunu yapmak için 2 program seçeneğiniz var 1.si TVSharp, ikincisi ise SDR# + PAL / SECAM TV plugin. Program ve plugin aynı kişi tarafından yazılmıştır ve kullanımları benzerdir. Aşağıda programların kullanıldığı bir video hazırladım. Antenim ve evimin konumu kötü olduğu için yayın kalitesi çok kötü ama en azından yazılımsal olarak nasıl hazırlık yapılması gerektiğini anlatmaya çalıştım. Tekrar görüşmek üzere\u0026hellip;\n","permalink":"https://mozanunal.com/2015/01/sdr-ile-bilgisayardan-tv-izlemek/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eSDR için ilk uygulama olarak TV izleme uygulamasını seçtim. Çünkü bu modüller Tv\nalıcı modülleri olarak satılıyorlar. Bunu yapmak için 2 program seçeneğiniz var\n1.si TVSharp, ikincisi ise SDR# + PAL / SECAM TV  plugin. Program ve plugin aynı\nkişi tarafından yazılmıştır ve kullanımları benzerdir. Aşağıda programların\nkullanıldığı bir video hazırladım. Antenim ve evimin konumu kötü olduğu için\nyayın kalitesi çok kötü ama en azından yazılımsal olarak nasıl hazırlık\nyapılması gerektiğini anlatmaya çalıştım. Tekrar görüşmek üzere\u0026hellip;\u003c/p\u003e","title":"[TR] SDR ile Bilgisayardan TV izlemek"},{"content":"Herkese Merhabalar!\nBu yazımda yaptığım Android programı sizlerle paylaşmak istiyorum. Programımın adı Adres Defteri, Size gerekli olan adresleri kolayca kaydetmenize daha sonra navigasyon için kullanmanızı veya başkalarıyla paylaşmanızı sağlayan ve bunu çok kolaylaştıran bir program. Adres Defteri Programımını buradan indirebilirsiniz.H Programın kullanımını aşağıdan öğrenebilirsiniz.\nGps bağlanınca GPS: yazan yerde bulunduğunuz yerin koordinantları çıkar.\nDaha sonra adresin ismi yazılır ve kaydet butonuna basılır.\nKaydınız başarılı ise böyle bir mesaj alırsınız.\nDaha sonraki \u0026ldquo;Kaydedilmiş Adresi Aç\u0026rdquo; butonuna basarak daha önce kaydettiğiniz adresleri görebilirsiniz. Adresi seçecek olursanız bu şekilde ismi ve koordinatlarının ekranda çıktığını göreceksiniz.\nHaritada göstere basarak koordinatlarına Google Maps üzerinden ulaşıp navigasyon için kullanabilirsiniz. Ya da \u0026ldquo;Adresi Paylaş\u0026rdquo; butonuna basarak istediğiniz program üzerinden arkadaşlarınızla paylaşabilirsiniz\n","permalink":"https://mozanunal.com/2015/01/yeni-android-programm-adres-defteri/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBu yazımda yaptığım Android programı sizlerle paylaşmak istiyorum. Programımın\nadı Adres Defteri, Size gerekli olan adresleri kolayca kaydetmenize daha sonra\nnavigasyon için kullanmanızı veya başkalarıyla paylaşmanızı sağlayan ve bunu çok\nkolaylaştıran bir\nprogram. \u003ca href=\"https://drive.google.com/file/d/0B5j__Lyt9ozbdElDaVBKWmlKY1k/view?usp=sharing\"\u003eAdres Defteri Programımını buradan indirebilirsiniz.\u003c/a\u003eH\nProgramın kullanımını aşağıdan öğrenebilirsiniz.\u003c/p\u003e\n\u003cp\u003eGps bağlanınca GPS: yazan yerde bulunduğunuz yerin koordinantları çıkar.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://2.bp.blogspot.com/-QXEe-6LkU14/VK29Nfmx__I/AAAAAAAAGak/xogtu16x_og/s720/Screenshot_2015-01-07-14-06-02.png\"\u003e\u003c/p\u003e\n\u003cp\u003eDaha sonra adresin ismi yazılır ve kaydet butonuna basılır.\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://1.bp.blogspot.com/-P4DNz4UUnUU/VK29NYQk5pI/AAAAAAAAGag/TgviIDhFYZ0/s720/Screenshot_2015-01-07-14-06-30.png\"\u003e\u003c/p\u003e\n\u003cp\u003eKaydınız başarılı ise böyle bir mesaj alırsınız.\u003c/p\u003e","title":"[TR] Yeni Android Programım: Adres Defteri"},{"content":"Herkese Merhabalar!\nBugünkü yazımda yeni bir hobimden bahsetmet istiyorum. Yeni hobim, \u0026ldquo;Software defined radio\u0026rdquo;. Bu aslında bir rf modulü, Farkı ise belli frekans aralığında dinleme yapabilmesi. Yani bu sayede farklı frekanslardaki radyo dalgalarını alıp inceleyebilir, çözümleyebilirsiniz. SDR hakkında deneysel bir şeyler yapmak isterseniz en iyi yöntem bilgisayar için ucuz tv alıcılarından almak. Ben Aliexpress sitesinden 10 $ aldım. En ucuz SDR\u0026rsquo;ler genelde RTL2832U+R820T çip setlidir. Benim aldığım modül 25MHz - 1700MHz arası tarama yapabiliyor. Kendi anteni ve kumandasıyla beraber geldi. Genelde bu modullerle gelen antenlerle FMden başka bi şey dinleyebilmek pek mümkün olmuyor. Fakat geliştirilen uygun antenlerle Uluslararası Uzay İstasyonundan(ISS) bile veri alabilmek mümkün. Bunlardan kurulumdan sonra bahsedeceğim.\nEvet gelelim kullanma kısmına. Genelde yazılım olarak SDR# Programı kullanılıyor. Programın kullanımı oldukça kolay ve bir çok eklentisi bulunuyor. Bu yüzden ben de SDR# seçtim. Programı buradan indirebilirsiniz. Programın kurulumu oldukça basit o yüzden bu kısmı geçiyorum. Kurduktan sonra Driver değişimi yapmamız gerekiyor. Bunun için ise Zadig isimli programı kuallnabilirsiniz. Options\u0026rsquo;tan \u0026ldquo;Show All Devices\u0026rdquo; seçilir. Daha sonra \u0026ldquo;Bulk-In,Interface(Interface 0)\u0026rdquo; seçilir. Sağ taraftaki driver olarak \u0026ldquo;WinUSB\u0026rdquo; seçilir \u0026ldquo;Reinstall Driver\u0026rdquo; tıklanır ve uzun bir yükleme sürecinin ardından SDR# programı kullanıma hazırdır. İlk uygulama olarak FM dinleme uygulaması yaptım çünkü ekstra anten gerektirmiyor. Modulü denemek için ideal bir uygulama. Ayar butonuna tıklayıp ayarları aşağıdaki gibi yapıyoruz. Radio sekmesinin altına WFM seçilir. Alttaki ayarları bu uygulama için değiştirmeye gerek yok.\nGerekli ayarlar yapıldığında SDR# görüntüsü bu şekilde olacak. Sinyalin yüksek olduğu yerleri kırmızı renkten farkedebilirsiniz. Farklı kanallar ayrı ayrı gözükecektir.\nGelelim Sdr ile yapabileceklerinize: FM radio dinlenebilir, karasal TV yayınına bağlanabilir, ISS den veri almak, NOAA Hava durumu uydularından veri ve resim almak(Wxtoimg), amatör radyo bandında iletişim kurmak, uçakların koordinant verilerini almak, GPS uydularına bağlanmak gibi uygun frekans aralığında iletişim kurulabilir. Tabi ki uygun anten gereklidir. Bunlardan sonraki yazılarımda bahsedeceğim. Tekrar görüşmek üzere..\n","permalink":"https://mozanunal.com/2015/01/software-defined-radioya-giris/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBugünkü yazımda yeni bir hobimden bahsetmet istiyorum. Yeni hobim, \u0026ldquo;Software\ndefined radio\u0026rdquo;. Bu aslında bir rf modulü, Farkı ise belli frekans aralığında\ndinleme yapabilmesi. Yani bu sayede farklı frekanslardaki radyo dalgalarını alıp\ninceleyebilir, çözümleyebilirsiniz. SDR hakkında deneysel bir şeyler yapmak\nisterseniz en iyi yöntem bilgisayar için ucuz tv alıcılarından almak. Ben\nAliexpress sitesinden 10 $ aldım. En ucuz SDR\u0026rsquo;ler genelde \u003cstrong\u003eRTL2832U+R820T çip\nsetlidir.\u003c/strong\u003e Benim aldığım modül 25MHz - 1700MHz arası tarama yapabiliyor. Kendi\nanteni ve kumandasıyla beraber geldi. Genelde bu modullerle gelen antenlerle\nFMden başka bi şey dinleyebilmek pek mümkün olmuyor. Fakat geliştirilen uygun\nantenlerle Uluslararası Uzay İstasyonundan(ISS) bile veri alabilmek mümkün.\nBunlardan kurulumdan sonra bahsedeceğim.\u003c/p\u003e","title":"[TR] Software Defined Radioya Giriş"},{"content":"Herkese Merhabalar,\nİlk yazılarımdan birinde seri port üzerinden grafik çizen bir programın C#\u0026rsquo;ta nasıl yazılabileceğini anlatmıştım(Buradan ulaşabilirsiniz.) Bu yazımda ise programın derlenmiş ve setup haline getirilmiş halini paylaşıyorum. Fark ettim ki bir sürü insan böyle bir programa ihtiyaç duyuyormuş. Bu program sayesinde Arduinonuzdan(başka işlemciler veya boardlar da olabilir.) veya herhangi bir serial port cihazından gönderdiğiniz \u0026ldquo;string\u0026rdquo; formattındaki verilerin gerçek zamanlı olarak grafiğini çizdirebilirsiniz. Tek dikkat etmeniz gereken gelen verinin\n1 $,data1,data2,data3, şeklinde olmasıdır aksi takdirde program gelen veriyi dikkate almaz. Programla alakalı iyi, kötü görüşlerinizi veya sorunları, bugları bana yollayabilirsiniz.\nProgramı buradan indirebiliriniz\nProgramın kaynak koduna buradan ulaşabilirsiniz.\n","permalink":"https://mozanunal.com/2014/12/serial-port-grapher/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003cbr\u003e\nİlk yazılarımdan birinde seri port üzerinden grafik çizen bir programın C#\u0026rsquo;ta\nnasıl yazılabileceğini\nanlatmıştım(\u003ca href=\"https://mozanunal.com/2014/05/c-gercek-zamanl-grafik-cizme-program/\"\u003eBuradan ulaşabilirsiniz\u003c/a\u003e.)\nBu yazımda ise programın derlenmiş ve setup haline getirilmiş halini\npaylaşıyorum. Fark ettim ki bir sürü insan böyle bir programa ihtiyaç\nduyuyormuş. Bu program sayesinde Arduinonuzdan(başka işlemciler veya boardlar da\nolabilir.) veya herhangi bir serial port cihazından gönderdiğiniz \u0026ldquo;string\u0026rdquo;\nformattındaki verilerin gerçek zamanlı  olarak grafiğini çizdirebilirsiniz. Tek\ndikkat etmeniz gereken gelen verinin\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$,data1,data2,data3,\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eşeklinde olmasıdır aksi takdirde program gelen veriyi dikkate almaz. Programla\nalakalı iyi, kötü görüşlerinizi veya sorunları, bugları bana yollayabilirsiniz.\u003cbr\u003e\n\u003ca href=\"https://drive.google.com/file/d/0B5j__Lyt9ozbU3JELTV3MWpqWFk/view?usp=sharing\"\u003eProgramı buradan indirebiliriniz\u003c/a\u003e\u003c/p\u003e","title":"[TR] Serial Port Grapher"},{"content":"Herkese Merhabalar,\nBu yazımda size uzun zamandır üzerinde araştırmalar yaptığım ve bir şeyler üretmek istediğim 3 boyutlu görme konusunda yaptığım programdan bahsedeceğim. Bu program sayesinde ekstra hiç bir ekipman kullanmadan 2 boyutlu bilgisayar ekranını 3 boyutlu görme uygulamasını gerçekleştirebileceğimiz bir şeye dönüştürüyoruz. Bunu nasıl yapıyor diye soracak olursanız görüntü işleme sayesinde!. Programda webcam üzerinden yüz tespiti yapılıyor ve ekrana nereden baktığı tespit ediliyor. Hesaplanan bu açı daha sonra kullandığım 3 boyut kütüphanesi olan OpenGL\u0026rsquo;in kamerasını ayarlamak için kullanılıyor. böylece ekrana bakış yönünüze göre değişen bir 3D görme uygulaması hazırlanmış oluyor.\nProgramın tanıtım videosu aşağıdadır. Çizdiğim grafikler çok iyi değil malesef bu konuda çok bilgili olmadığımdan. Programın çalışma mantığını anlatmak için küpün arkasına webcamden aldığım görüntüyü koydum. Açının tam olarak nasıl değiştiğini anlatmak için. Tekrar görüşmek üzere\u0026hellip;\n","permalink":"https://mozanunal.com/2014/12/baks-acs-tabanl-3-boyutlu-gorus/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar,\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBu yazımda size uzun zamandır üzerinde araştırmalar yaptığım ve bir şeyler\nüretmek istediğim 3 boyutlu görme konusunda yaptığım programdan bahsedeceğim. Bu\nprogram sayesinde ekstra hiç bir ekipman kullanmadan 2 boyutlu bilgisayar\nekranını 3 boyutlu görme uygulamasını gerçekleştirebileceğimiz bir şeye\ndönüştürüyoruz. Bunu nasıl yapıyor diye soracak olursanız görüntü işleme\nsayesinde!. Programda webcam üzerinden yüz tespiti yapılıyor ve ekrana nereden\nbaktığı tespit ediliyor. Hesaplanan bu açı daha sonra kullandığım 3 boyut\nkütüphanesi olan OpenGL\u0026rsquo;in kamerasını ayarlamak için kullanılıyor. böylece\nekrana bakış yönünüze göre değişen bir 3D görme uygulaması hazırlanmış oluyor.\u003c/p\u003e","title":"[TR] Bakış Açısı Tabanlı 3 Boyutlu Görüş"},{"content":"Herkese Merhabalar,\nBugünkü yazımda Linuxta kullanabileceğiniz bir kaç yararlı programdan bahsetmek istiyorum. Bu programlar windows kullanıcılarının aşina olduğu, güzel alternatif programlar. Ben de kullandığım bu programları sizinle paylaşmak istedim. Yani öyle Linux\u0026rsquo;taki en iyi 10 program bunlar, hepsi sıfır hatalı diye iddalı bir başlıkla çıkmıyorum kaşınıza :D. Neyse programlara geçelim.\nİlk program Ubuntu Software Center. Bu program üzerinden Ubuntu\u0026rsquo;da çalışabilen bir çok programa ulaşabiliyorsunuz ve onları indirip kurabiliyorsunuz. Güzel şekilde kategorize edilmiş ve eklenti seçeneklerini seçme özelliği eklenmiş gerçekten hoş ve işleri kolaylaştıran bir program. İkincisi, olmazsa olmaz programımız Mozilla Firefox. İnternete girmek tabi ki Ubuntu\u0026rsquo;da da sıkça kullanılan bir eylem. Mozilla bu iş için en iyi araçlardan biri. Bir tarayıcıdan istenilen tüm özelliklere sahip. Sıradaki programımız GIMP. Bu bir resim düzenleme programı. Özellikleri ise ünlü Photoshop programı ile yarışır düzeyde. Efektleri, filtreleri, layerlarla çalışabilme özellikleri hoş gerçekten. Evveeet! 4. Sıradaki programımız Phyton IDLE. Phyton 2 ve 3 için ayrı versiyonları mevcut. Linuxun anadillerinden biri olan Phyton\u0026rsquo;da kod yazmak için sayısız IDE seçeneğinizden biri. Basitliğiyle beni cezbetti. Programı açmışken de bir \u0026ldquo;Hello World\u0026rdquo; yazmamak olmaz dedim, yazdım. Programımız Libre Office. Bu program Microsoft Office alternatifi olarak düşünülmüş. Onun dosyalarını açabiliyor, değiştirebiliyor. Nerdeyse tüm Office dosya türlerini destekliyor. ]\nProgramımız gerçekten bedava alternatifleri arasında en iyi program. İsmi Blender. Bu programla 3D modelleme, animasyonlar, efektler yapabilirsiniz. Hatta mevcut oyun motoru ile kendi 3D oyununuzu yapabilirsiniz. Program gerçekten çok professyonel, modelleme, texturing, animasyon yapma konusunda çok başarılı. Başka platformların kullanıcısı olsanız bile denemenizi şiddetle tavsiye ediyorum. Arduino, Open Source camiasının en popüler platformlarından biri. Arduinoyu bilmeyenler için anlatayım. Hobi elektronikçileri için üretilmiş mikro denetleyici kartı. Oldukça popüler ve çok çeşitli uygulamaları mevcut. Bu program ise o karta kod yazmaya ve derleyip yüklemeye yarıyor. Java tabanlı bir program olduğu için Linux\u0026rsquo;ta sorunsuz çalışıyor. Vlc player medya dosyaları oynatmada (her türlü video ve ses dosyası) Windows\u0026rsquo;ta olduğu gibi Ubuntu\u0026rsquo;da da yanımızda. 9.Programımız Ubuntu terminal programı. Linux tabanlı işletim sistemlerinde aslında çoğu iş terminalden yapılıyor. Ubuntuda bu biraz azaltılmış fakat yine de oldukça lazım olan bir program zaten dahili olarak bulunuyor. Bir çok işlem buradan yürütülüyor. Mesela aşağıdaki kodda ben ekran görüntüsünü almıştım. Ve son programımız, Eclipse. Bu program açık kaynak kodlu bir IDE. Bir çok programlama dilini destekliyor. En çok Java dilinde program geliştirmek için kullanılıyor. Oldukça kullanışlı ve güçlü bir yazılım geliştirme aracı son olarak, bunu da tavsiye ediyorum. Tekrar görüşmek üzeree\u0026hellip; Not: Bu arada geçen yazımda Flash belleğe ubuntu kurmaktan bahsetmiştim fakat o şekilde kurduktan sonra Türkçe klavye ayarlamasını manuel yapmak gerekiyor. Ben de bu eksik olmuş gibi hissettim.Anlatayım o zaman;\nİlk önce En yazan yere tıklayıp oradan \u0026ldquo;Text Entry\u0026rdquo; seçiyoruz. Daha sonra + tuşuna basıp kullandığımız klavyeyi \u0026ldquo;Add\u0026rdquo; tuşu ile ekliyoruz.\nYine aynı yere tıklayarak En ile Tr\u0026rsquo;yi değiştiriyoruz böylece klavye girişimiz Türkçe klavye olmuş oluyor.\nMasaüstümüzün son hali böyle oluyor. Güle güle kullanın.\n","permalink":"https://mozanunal.com/2014/12/linuxta-kullanabileceginiz-10-yararl/","summary":"\u003cp\u003eHerkese Merhabalar,\u003c/p\u003e\n\u003cp\u003eBugünkü yazımda Linuxta kullanabileceğiniz bir kaç yararlı programdan bahsetmek\nistiyorum. Bu programlar windows kullanıcılarının aşina olduğu, güzel alternatif\nprogramlar. Ben de kullandığım bu programları sizinle paylaşmak istedim. Yani\nöyle Linux\u0026rsquo;taki en iyi 10 program bunlar, hepsi sıfır hatalı diye iddalı bir\nbaşlıkla çıkmıyorum kaşınıza :D. Neyse programlara geçelim.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eİlk program Ubuntu Software Center. Bu program üzerinden Ubuntu\u0026rsquo;da çalışabilen\nbir çok programa ulaşabiliyorsunuz ve onları indirip kurabiliyorsunuz. Güzel\nşekilde kategorize edilmiş ve eklenti seçeneklerini seçme özelliği eklenmiş\ngerçekten hoş ve işleri kolaylaştıran bir program.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://4.bp.blogspot.com/-Bm-g47lRV64/VH5qesXPW5I/AAAAAAAAFhU/K_bf45ZAXaM/s1600/Screenshot%2Bfrom%2B2014-12-03%2B01%3A33%3A30.png\"\u003e\u003c/p\u003e","title":"[TR] Linuxta Kullanabileceğiniz 10 Yararlı Program"},{"content":"Merhabalar,\nBugün size flash belleğe ubuntu kurmaktan bahsedeceğim. Open source seven insanlar için Linux her zaman en çekici gelen işletim sistemi olmuştur. Fakat program desteği, driver sorunları derken linux tek işletim sistemi olarak kullanmak oldukça zor bir olay haline geliyor. İşte bunun için çok güzel çözümler var. Bunlardan bir tanesi aynı hard disk üzerine ikinci bir işletim sistemi kurmak. Bu çözüm bana daha zor ve karışık geliyor, benim tercih ettiğim ise bir flash belleğe Ubuntu kurup gerekli zamanlarda bilgisayarı onun üzerinden boot ederek Linuxun özgür dünyasına dalmak. Evet anlatıma geçersem aslında çok basit olduğunu göreceksiniz.\nGerekenler\nUniversal USB Installer Programı (indirmek için tıklayınız.) Ubuntu ISO Dosyası(indirmek için tıklayınız.) Flash bellek en az 2 GB Universal Usb Installer programı kurulum gerektirmiyor ve neredeyse tüm Linux dağıtımlarını destekliyor diğer dağıtımları da deneyebilirsiniz. Belleğinizi takıp ve gerekli dosyaları indirdikten sonra programı çalıştırabilirsiniz. Şöyle bir pencere sizi karşılayacak;\nAşağıdakine benzer şekilde doldurabilirsiniz. 1. Boşluğa istediğiniz linux dağıtımı 2. Boşluğa ISO dosyasını gösteriyoruz. 3. Boşluğa ise üzerinde linux kurmak istediğiniz flash belleği seçiyorsunuz. Bu adımda dikkatli olmanız şiddetle tavsiye olunur. 4. Olarak da depolama boyutunu flash diskinizin boyutu-2 GB seçebilirsiniz. Formata basarsanız daha iyi olur ama içindeki dosyalarınız gider\nAz kaldı bitiyor sabredin :) Eveet artık Linux\u0026rsquo;unuzu açabilirsiniz. Bilgisayarınızı yeniden başlatın ve anakart ayarlarınıza girip boot device olarak flash belleğinizi seçebilirsiniz. Artık yanında taşıyabileceğiniz ve bu ayarı yapabileceğiniz her yerde kullanabileceğiniz bir bilgisayarınız var. Güle güle kullanın\u0026hellip;\nNot: Beğendiniz mi o zaman Linux\u0026rsquo;ta kullanabileceğiniz 10 güzel program yazımı buradan ziyaret edin.\n","permalink":"https://mozanunal.com/2014/12/flash-bellege-ubuntu-kurmak/","summary":"\u003cp\u003e\u003cstrong\u003eMerhabalar,\u003c/strong\u003e\u003cbr\u003e\nBugün size flash belleğe ubuntu kurmaktan bahsedeceğim. Open source seven\ninsanlar için Linux her zaman en çekici gelen işletim sistemi olmuştur. Fakat\nprogram desteği, driver sorunları derken linux tek işletim sistemi olarak\nkullanmak oldukça zor bir olay haline geliyor. İşte bunun için çok güzel\nçözümler var. Bunlardan bir tanesi aynı hard disk üzerine ikinci bir işletim\nsistemi kurmak. Bu çözüm bana daha zor ve karışık geliyor, benim tercih ettiğim\nise bir flash belleğe Ubuntu kurup gerekli zamanlarda bilgisayarı onun üzerinden\nboot ederek Linuxun özgür dünyasına dalmak. Evet anlatıma geçersem aslında çok\nbasit olduğunu göreceksiniz.\u003c/p\u003e","title":"[TR] Flash Belleğe Ubuntu Kurmak"},{"content":"Herkese Merhabalar!\nBugün size uzun süredir üzerinden uğraştığım bir projeden bahsetmek istiyorum. Projenin amacı kamera ile bir yoldan geçen araç sayını saymak. Ben de bunu okulumun önündeki caddeden çektiğim videoda gerçekleştirdim. İleriki aşamalarda insan sayma uygulaması da geliştirmek istiyorum. Araç uygulaması da hız belirleyecek şekilde veya araç büyüklüğüne, markasına göre sınıflandırma yapacak şekilde geliştirilebilir. Proje Emgucv kütüphanesinin Video Survilance modulü kullanılarak yapılmıştır. Tekrar görüşmek dileğiyle\u0026hellip;\n","permalink":"https://mozanunal.com/2014/11/kamera-ile-arac-says-takibi/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBugün size uzun süredir üzerinden uğraştığım bir projeden bahsetmek istiyorum.\nProjenin amacı kamera ile bir yoldan geçen araç sayını saymak. Ben de bunu\nokulumun önündeki caddeden çektiğim videoda gerçekleştirdim. İleriki aşamalarda\ninsan sayma uygulaması da geliştirmek istiyorum. Araç uygulaması da hız\nbelirleyecek şekilde veya araç büyüklüğüne, markasına göre sınıflandırma yapacak\nşekilde geliştirilebilir. Proje Emgucv kütüphanesinin Video Survilance modulü\nkullanılarak yapılmıştır. Tekrar görüşmek dileğiyle\u0026hellip;\u003c/p\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube-nocookie.com/embed/N8HpOoq8yYk?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e","title":"[TR] Kamera ile Araç Sayısı Takibi"},{"content":"Herkese Merhabalar!\nProcessing dili son yıllarda Arduino ile popülerleşmeye başlayan görsel programlama dilidir. Hızlı prototipleme için geliştirilmiştir Arduinoya görsel arayüz hazırlama için sıklıkla kullanılmaktadır. Processing Windows, Linux, Android, Mac her platformda çalışmaktadır. Kendi program geliştirme arayüzü bulunmaktadır. Bu programlama diliyle kolay bir şekilde 2D, 3D görsel uygulamalar yapılabilir.\nBen bugünkü yazımda nasıl Android telefonda Android için nasıl Processing diliyle görsel uygulama yapılacağını anlatacağım. Öncelikle Google Playden uygulama geliştirmek için gerekli IDE\u0026rsquo;yi(geliştirme ortamını) indiriyoruz. Bir çok çeşit geliştirme ortamı var fakat ben APDE uygulamasını tercih ettim. Bu uygulama ile processing kodu yazıp onu derleyip telefon üzerinde deneyebiliyoruz.\nAPDE programını Android telefonumuza indirip kuruyoruz.\nProgram kurulunca açıp sağ üst köşedeki butondan \u0026ldquo;new sketch\u0026rdquo; seçebilirsiniz. Yeni bir sketch açtıktan sonra aşağıdaki fonksiyonları yazabilirsiniz. Bu fonksiyonlar Processing dilinin temel fonksiyonları ve her sketchte var olur. Ayarla alakalı kodlar \u0026ldquo;setup\u0026rdquo; kısmına, her zaman dönecek kodlar ise \u0026ldquo;draw\u0026rdquo; kısmına yazılır.\nİlk uygulamamızı yazmaya hazırız. İlk önce setup kısmında pencere büyüklüğümüzü ayarladık. Draw kısmına ise sürekli dönecek kodu yazıyoruz. Bu kodda dokunduğumuz yere bir elips çizmesini istemiş oluyoruz. Çalıştırma tuşuna basıyoruz. Programımızı bir .apk dosyası haline getirip telefonumuza yükleyecek.\nİlk programımızdan görüntüler.\nProcessing ile 3 boyutlu uygulama yapmak da mümkün, aşağıda bir küp çizmek için gerekli kodu görebilirsiniz. Ayrıca camera değişkenlerini mouseX ve mouseY değerlerine atayarak dokunmatik ekrana dokunma ile küpü görüş açısı değiştirilir.\nDaha karmaşık şekilleri çizmek için ise vertex ile çizim gibi yöntemler kullanılır. Processing dili Opengl destekli olduğu için çoğu opengl fonksiyonu kullanılabilir. Oldukça güçlü olan bu kütüphane ile sayısız ve karmaşık bir çok görsel uygulama yapılabilir.\n","permalink":"https://mozanunal.com/2014/11/processing-ile-android-telefonda/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://4.bp.blogspot.com/-mWaFbWIHvPk/VF7g4rYgSxI/AAAAAAAAFHw/vbMO-hISTB4/s720/primitives3D.png\"\u003e\u003c/p\u003e\n\u003cp\u003eProcessing dili son yıllarda Arduino ile popülerleşmeye başlayan görsel\nprogramlama dilidir. Hızlı prototipleme için geliştirilmiştir Arduinoya görsel\narayüz hazırlama için sıklıkla kullanılmaktadır. Processing Windows, Linux,\nAndroid, Mac her platformda çalışmaktadır. Kendi program geliştirme arayüzü\nbulunmaktadır. Bu programlama diliyle kolay bir şekilde 2D, 3D görsel\nuygulamalar yapılabilir.\u003c/p\u003e\n\u003cp\u003eBen bugünkü yazımda nasıl Android telefonda Android için nasıl Processing\ndiliyle görsel uygulama yapılacağını anlatacağım. Öncelikle Google Playden\nuygulama geliştirmek için gerekli IDE\u0026rsquo;yi(geliştirme ortamını) indiriyoruz. Bir\nçok çeşit geliştirme ortamı var fakat ben APDE uygulamasını tercih ettim. Bu\nuygulama ile processing kodu yazıp onu derleyip telefon üzerinde\ndeneyebiliyoruz.\u003c/p\u003e","title":"[TR] Processing ile Android Telefonda Uygulama Geliştirme"},{"content":"Herkese Merhabalar!\nBu yazımda size hava araçlarının en temel elektronik ekipmanı olan IMU modullerinden bahsetmek istiyorum. IMU modullerinin hayati önem taşımasının sebebi, modüllerin yönelim açılarını hesaplamak için kullanılmasıdır. En büyük yolcu uçağından, roketten en küçük bir quadrokoptere kadar tüm hava araçları stabil ve sağlıklı bir uçuş için bu modullerden birine sahip olmalıdırlar.\nIMU ingilizcedeki \u0026ldquo;Inertial Mesurament Unit\u0026rdquo; kelime grubunun kısaltılmış halidir. IMU ile bir cismin uzaydaki 3 boyutlu yönelimi bulunabilir. 3 boyutlu yönelimi anlatmanın en kolay yolu Euler Açılarını kullanmaktır. Havacılık sektöründe sıklıkla Euler açılarının özelleşmiş bir versiyonu olan \u0026ldquo;Yaw, Pitch, Roll\u0026rdquo; açıları kullanılmaktadır.\nBir nesnenin uzaydaki yönelimini bulmak için 3 temel sensör kullanılır. Bunlar ivmeölçer, gyro ve magnometredir. Bu üç sensörün bir arada kullanılmasının nedeni şudur: İvme ölçer ile Pitch ve Roll açısı tespit edilebilir fakat hareket anında gürültü oluşur ve doğru bilgi elde edilemez, Gyro ise 3 eksendeki açısal hızları verir. Eğer ilk açı bilinmiyorsa sadece gyro ile şu anki açılar hesaplanamaz, sadece açısal hız üzerinden açısal açı değişimi hesaplanabilir. Gyronun ikinci kötü özelliği ise \u0026ldquo;Drift\u0026rdquo; özelliğidir. Gyro sabit durun bir cisimde bile küçük de olsa açısal hızlar hesaplar. Bu nedenle sadece Gyroya bağlı sistemlerde hesaplanan açılar yavaş yavaş kayar. Bunu engellemek için bazı filtreler kullanılır. Bu filtrelerin amacı Gyro üzerinden verileri alıp ivme ölçer üzerinden bu verileri düzeltmektir. Böylece drift engellenmiş olur ve sadece ivmeölçere bağlı olunmadığı için hareket halindeki gürültü sonuçlardan kurtulunmuş olur. Fakat ivmeölçer sadece pitch ve roll açılarını hesaplayabildiği için yaw eksenine referans olamaz. Yaw eksenine referans olması için kullanılan modül magnometredir. Bu sayede değişik algoritmalar ve filtreler kullanılarak gyro üzerinden hesaplanan açısal değişimler, pitch ve roll eksenlerinde ivmeölçer, yaw ekseninde ise magnometre tarafından düzeltilerek yönelim açılarının hesaplanması sağlanır.\nYaw, Pitch, Roll açıları yani Euler açıları bazı durumlarda 3 boyutlu yönelimi açıklamada yetersiz kalır. Özetlemek gerekirse rotasyonlar sonucu eğer eksenler üst üste gelirse özgürlük derecesi kaybı yaşanır. Rotasyon da 2 boyutlu uzaya sıkışmak zorunda kalır. Bu duruma Gimbal Lock denir. Gimbal Lock kavramının açıklandığı şu videoyu izleyebilirsiniz.\nİşte bu gimbal lock sorunu ortadan kaldırmak için 3 boyutlu yönelimi göstermek için yeni yöntemler bulunmuştur. Bunlardan başlıcaları \u0026ldquo;Quaternion \u0026quot; ve \u0026quot; Direction Cosine Matrix\u0026rdquo; yöntemleridir. Artık yönelimi göstermek için 3 açı yerine \u0026ldquo;Quaternion\u0026quot;da 4 değişkenli bir vektör ve \u0026ldquo;Direction Cosine Matrix\u0026quot;te 3x3\u0026rsquo;lük bir matris ve çok daha karışık algoritmalar kullanılır. IMU sensörlerin beraber çalışması için kullanılan bazı algoritmaları aşağıda kısa bilgilerle birlikte yazacağım.\nComplementary Filter: Sabit bir ağırlıklı ortalama oranıyla gyro verileri ile referans verilerin ortalaması alınması yöntemidir. En basit algoritmadır. Genelde hobi amaçlı ve işin mantığını kavrama amaçlı uygulamalarda kullanılır.\nKalman Filter: Karmaşık bir algoritması vardır değişken ağırlıklı ortalama oranıyla hesaplama yapar, bu oranı hesaplamak için çok farklı yöntemler kullanabilir.\nMahony Madwick Filter: 3 sensörden alınan verilerle quaternion hesaplamak için kullanılan filtredir.\nDirection Cosine Matrix: Basitçe yönelim vektörü ile 3 koordinat ekseni arasındaki açıların kosinüslerinden oluşan matristir.\nBen de bu anlattıklarımı somutlaştırmak adına İmu açılarının 3 boyutlu görsellenmesi üzerine bir proje yaptım. Bu projede ne yazık ki Imu değerlerini kendim hesaplamadım FreeIMU kütüphanesini kullandım. Görselleme Gimbal Lock sorunundan açınmak için Quaternion kullanılarak yapıldı. Sensör olarak MPU6050 sensörünü kullandım. İçinde 3 eksen gyro ve 3 eksen ivme ölçer bulundurmakta. 3 boyutlu görselleme için processing programa dilinde yazılan bir uygulamayı kullandım.\nProjenin kaynak kodunu buradan indirebilirsiniz.\n","permalink":"https://mozanunal.com/2014/11/imu-aclarnn-3-boyutlu-olarak/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBu yazımda size hava araçlarının en temel elektronik ekipmanı olan IMU\nmodullerinden bahsetmek istiyorum. IMU modullerinin hayati önem taşımasının\nsebebi, modüllerin yönelim açılarını hesaplamak için kullanılmasıdır. En büyük\nyolcu uçağından, roketten en küçük bir quadrokoptere kadar tüm hava araçları\nstabil ve sağlıklı bir uçuş için bu modullerden birine sahip olmalıdırlar.\u003c/p\u003e\n\u003cp\u003eIMU ingilizcedeki \u0026ldquo;Inertial Mesurament Unit\u0026rdquo; kelime grubunun kısaltılmış\nhalidir. IMU ile bir cismin uzaydaki 3 boyutlu yönelimi bulunabilir. 3 boyutlu\nyönelimi anlatmanın  en kolay yolu Euler Açılarını kullanmaktır. Havacılık\nsektöründe sıklıkla Euler açılarının özelleşmiş bir versiyonu olan \u0026ldquo;Yaw, Pitch,\nRoll\u0026rdquo; açıları kullanılmaktadır.\u003c/p\u003e","title":"[TR] IMU Açılarının 3 Boyutlu Olarak Görsellenmesi"},{"content":"Herkese Merhabalar!\nBugünkü yazımda Arduino ile Joystick Kontrol projemden bahsetmek istiyorum. Bu projede, 2 eksenli bir joystick ile 2 eksenli bir gimbalı kontrol ettim. Kontrolcü olarak Arduino Nano kullandım. Bütün Arduino çeşitleri kullanılabilir Nanoyu küçük olduğu ve usb üzerinden kolay programlanabildiği için tercih ettim.\nBreadboard üzerine basit bir devre kurdum. Arduinonun standart servo kütüphanesini kullanarak kodu yazdım. Joystickten veri almak için Arduinonun analaog giriş pinlerini kullandım. Analog girişler 1 veya 0 dan farklı değerler okumak için kullanılır. Mesela 10 bitlik bir analog girişten 0-1024 arası değerler okunabilir. Aşağıda bağlantılar ve kaynak kodunu paylaşıyorum. Tekrar görüşmek üzere.\nBağlantılar\nArduino nano güç için usb üzerinden bilgisayara bağlıservolar;\nkırmızı kablo\u0026gt; Arduino 5V siyah kablo\u0026gt; GND sarı kablo\u0026gt; Dijital pin 8 ve 9 Joystick modulün; GND\u0026gt; Arduino GND 5V\u0026gt; Arduino 5V X Axis\u0026gt; Analog pin 4 Y Axis\u0026gt; Analog pin 5 Programın arduino kodu:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 #define X_AXIS A4 #define Y_AXIS A5 #include \u0026lt;Servo.h\u0026gt; int Xvalue; int Yvalue; Servo myservo1; double pos1 = 90; Servo myservo2; double pos2 = 90; void setup() { delay(5); myservo1.attach(9); myservo2.attach(8); Serial.begin(9600); } void loop() { Xvalue = analogRead (X_AXIS); Serial.print (Xvalue ); Yvalue = analogRead (Y_AXIS); Serial.print (Yvalue); if(Xvalue\u0026lt;200) { if(pos1\u0026lt;150) { pos1=pos1+2; myservo1.write(pos1); delay(15); } } else if(Xvalue\u0026gt;800) { if(pos1\u0026gt;150) { pos1=pos1-2; myservo1.write(pos1); delay(15); } } if(Yvalue\u0026gt;800) { if(pos2\u0026gt;20) { pos2=pos2-2; myservo2.write(pos2); delay(15); } } else if(Yvalue\u0026lt;200) { if(pos2\u0026lt;160) { pos2=pos2+2; myservo2.write(pos2); delay(15); } } } ","permalink":"https://mozanunal.com/2014/10/arduino-joystick-kontrol/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003cbr\u003e\nBugünkü yazımda Arduino ile Joystick Kontrol projemden bahsetmek istiyorum. Bu\nprojede, 2 eksenli bir joystick ile 2 eksenli bir gimbalı kontrol ettim.\nKontrolcü olarak Arduino Nano kullandım. Bütün Arduino çeşitleri kullanılabilir\nNanoyu küçük olduğu ve usb üzerinden kolay programlanabildiği için tercih ettim.\u003c/p\u003e\n\u003cp\u003eBreadboard üzerine basit bir devre kurdum. Arduinonun standart servo\nkütüphanesini kullanarak kodu yazdım. Joystickten veri almak için Arduinonun\nanalaog giriş pinlerini kullandım. Analog girişler 1 veya 0 dan farklı değerler\nokumak için kullanılır. Mesela 10 bitlik bir analog girişten 0-1024 arası\ndeğerler okunabilir. Aşağıda bağlantılar ve kaynak kodunu paylaşıyorum. Tekrar\ngörüşmek üzere.\u003c/p\u003e","title":"[TR] Arduino Joystick Kontrol"},{"content":"Herkese Merhabalar!\nBugün size bilgisayardan gimbal kontrolü projemden bahsedeceğim. Bu projedeki amacım C# ile yazdığım bir arayüzde gimbali kontrol etmek. Gimbal ve bilgisayar arasında haberleşmeyi sağlaması ve servoları kontrol etmesi için bir arduino yerleştirdim. C# arayüzünün görevi, tıkladığım butonlara göre arduinoya \u0026ldquo;serial port\u0026rdquo; üzerinden gönderilecek karakteri değiştirmesidir.\nArduino da serial porttan aldığı karaktere göre servoları yönetir.\nBilgisayardan Gimbal Kontrolü\nArayüz programını C# kodlarının bu proje için örnek kısımlar aşağıdaki gibidir.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 private void timer1_Tick(object sender, EventArgs e) { serialPort1.Write(label1.Text); } private void connect_Click(object sender, EventArgs e) { timer1.Enabled=true; try { serialPort1.Open(); } catch (Exception hata) { MessageBox.Show(“Hata:” + hata.Message); } } private void button5_Click(object sender, EventArgs e) { label1.Text = “O”; } private void button1_MouseUp(object sender, MouseEventArgs e) { label1.Text = “O”; } private void button3_MouseUp(object sender, MouseEventArgs e) { label1.Text = “O”; } private void button4_MouseUp(object sender, MouseEventArgs e) { label1.Text = “O”; } private void button2_MouseUp(object sender, MouseEventArgs e) { label1.Text = “O”; } private void button1_MouseDown(object sender, MouseEventArgs e) { label1.Text = “A”; } private void button3_MouseDown(object sender, MouseEventArgs e) { label1.Text = “B”; } private void button4_MouseDown(object sender, MouseEventArgs e) { label1.Text = “C”; } private void button2_MouseDown(object sender, MouseEventArgs e) { label1.Text = “D”; } ","permalink":"https://mozanunal.com/2014/10/bilgisayardan-gimbal-kontrolu/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003cbr\u003e\nBugün size bilgisayardan gimbal kontrolü projemden bahsedeceğim. Bu projedeki\namacım C# ile yazdığım bir arayüzde gimbali kontrol etmek. Gimbal ve bilgisayar\narasında haberleşmeyi sağlaması ve servoları kontrol etmesi için bir arduino\nyerleştirdim. C# arayüzünün görevi, tıkladığım butonlara göre arduinoya \u0026ldquo;serial\nport\u0026rdquo; üzerinden gönderilecek karakteri değiştirmesidir.\u003cbr\u003e\nArduino da serial porttan aldığı karaktere göre servoları yönetir.\u003c/p\u003e\n\u003cp\u003eBilgisayardan Gimbal Kontrolü\u003c/p\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube-nocookie.com/embed/Z61XZI12bS0?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003cp\u003eArayüz programını C# kodlarının bu proje için örnek kısımlar aşağıdaki gibidir.\u003c/p\u003e","title":"[TR] Bilgisayardan Gimbal Kontrolü"},{"content":"Herkese Merhabalar!\nBu projemin amacı MPU6050 ile hesaplanan pitch ve roll açıları ile 2 eksenli bir gimbalı kontrol etmek. MPU6050 açılarını hesaplamak için FreeIMU kütüphanesini kullandım. Buradan indirebilirsiniz. Aldığım açılar belli bir değerden büyükse servoların açılarını kademeli olarak azalttım veya artırdım.Bu sayede gimbal, MPU6050yi eğdiğim yönde dönmüş oldu. Projemin tanıtım videosunu aşağıdan izleyebilirsiniz.\nArkadaşlar projemin Arduino kodunu da paylaşıyorum.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 #include \u0026lt;I2Cdev.h\u0026gt; #include \u0026lt;MPU60X0.h\u0026gt; #include \u0026lt;EEPROM.h\u0026gt; //#define DEBUG #include “DebugUtils.h” #include “CommunicationUtils.h” #include “FreeIMU.h” #include \u0026lt;Wire.h\u0026gt; #include \u0026lt;SPI.h\u0026gt; #include \u0026lt;Servo.h\u0026gt; int raw_values[9]; Servo myservo1; int pos1 = 90; Servo myservo2; int pos2 = 90; float ypr[3]; // yaw pitch roll float val[9]; // Set the FreeIMU object FreeIMU my3IMU = FreeIMU(); void setup() { Serial.begin(115200); Wire.begin(); myservo1.attach(9); myservo2.attach(8); delay(5); my3IMU.init(); // the parameter enable or disable fast mode delay(5); } void loop(){ my3IMU.getYawPitchRoll(ypr); Serial.print(“Yaw: “); Serial.print(ypr[0]); Serial.print(“ Pitch: “); Serial.print(ypr[1]); Serial.print(“ Roll: “); Serial.print(ypr[2]); Serial.println(“”); if(ypr[1]\u0026gt;20) { if(pos1\u0026lt;150) { pos1=pos1+2; myservo1.write(pos1); delay(15); } } else if(ypr[1]\u0026lt;-20) { if(pos1\u0026gt;30) { pos1=pos1-2; myservo1.write(pos1); delay(15); } } if(ypr[2]\u0026gt;20) { if(pos2\u0026gt;30) { pos2=pos2-2; myservo2.write(pos2); delay(15); } } if(ypr[2]\u0026lt;-20) { if(pos2\u0026lt;150) { pos2=pos2+2; myservo2.write(pos2); delay(15); } } delay(15); } ","permalink":"https://mozanunal.com/2014/10/imu-ile-kamera-gimbal-kontrolu/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003cbr\u003e\n Bu projemin amacı MPU6050 ile hesaplanan pitch ve roll açıları ile 2 eksenli\nbir gimbalı kontrol etmek. MPU6050 açılarını hesaplamak için FreeIMU\nkütüphanesini kullandım.\n\u003ca href=\"https://www.varesano.net/projects/hardware/FreeIMU\"\u003eBuradan indirebilirsiniz\u003c/a\u003e.\nAldığım açılar belli bir değerden büyükse servoların açılarını kademeli olarak\nazalttım veya artırdım.Bu sayede gimbal, MPU6050yi eğdiğim yönde dönmüş oldu.\nProjemin tanıtım videosunu aşağıdan izleyebilirsiniz.\u003c/p\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube-nocookie.com/embed/MQi57R7bO8M?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003cp\u003eArkadaşlar projemin Arduino kodunu da paylaşıyorum.\u003c/p\u003e","title":"[TR] IMU ile Kamera Gimbalı Kontrolü"},{"content":"Herkese Merhabalar!\nBu yazımda Kamera ile Fare Kontrolü projemden bahsetmek istiyorum. Bu proje aslında bir görüntü işleme projesidir. Eli filtrelerle tespit edip fare gibi kullanmak amaçlanmıştır. El açılınca tıklama sağlanır, tıklama olayı çok hassas değil maalesef arka arkaya çok tıklama yapabiliyor. Biraz daha uzaktan kontrol edilirse gezinme olayı da daha hassas olabilir.\nProgram C# dilinde Emgucv kütüphanesiyle yazılmıştır. Algoritmasına gelecek olursak, Hsv ve Ycbcr renk uzaylarında \u0026ldquo;skin detection\u0026rdquo; algoritmaları uygulanmıştır. Bu sayede el \u0026ldquo;counter\u0026rdquo; olarak tespit edilmiştir. Merkezi kullanılarak farenin gitmesi\ngereken koordinantlar belirlenmiştir. \u0026ldquo;convexity defects\u0026rdquo; methodu kullanılarak da parmak sayısı belirlenmiştir. 5. parmakta pek hassas olarak çalışamamasına rağmen diğer parmakları rahat bir şekilde sayılmasını sağlamaktadır.\nKamera ile fare kontrolü Parmak Sayıcı Convexity Defects Method ","permalink":"https://mozanunal.com/2014/10/kamera-ile-fare-kontrolu/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBu yazımda Kamera ile Fare Kontrolü projemden bahsetmek istiyorum. Bu proje\naslında bir görüntü işleme projesidir. Eli filtrelerle tespit edip fare gibi\nkullanmak amaçlanmıştır. El açılınca tıklama sağlanır, tıklama olayı çok hassas\ndeğil maalesef arka arkaya çok tıklama yapabiliyor. Biraz daha uzaktan kontrol\nedilirse gezinme olayı da daha hassas olabilir.\u003c/p\u003e\n\u003cp\u003eProgram C# dilinde Emgucv kütüphanesiyle yazılmıştır. Algoritmasına gelecek\nolursak, Hsv ve Ycbcr renk uzaylarında \u0026ldquo;skin detection\u0026rdquo; algoritmaları\nuygulanmıştır. Bu sayede el \u0026ldquo;counter\u0026rdquo; olarak tespit edilmiştir. Merkezi\nkullanılarak farenin gitmesi\u003cbr\u003e\ngereken koordinantlar belirlenmiştir. \u0026ldquo;convexity defects\u0026rdquo; methodu kullanılarak\nda parmak sayısı belirlenmiştir. 5. parmakta pek hassas olarak çalışamamasına\nrağmen diğer parmakları rahat bir şekilde sayılmasını sağlamaktadır.\u003c/p\u003e","title":"[TR] Kamera ile Fare Kontrolü"},{"content":"Herkese Merhabalar!\nProjemin ismi karanlıkta çalışan gece lambası, transistörü teorik olarak öğrendikten sonra bunu uygulamaya geçirmek istedim ve bu devreyi tasarladım. 1 adet transistör, 1 adet ldr, 1 adet led ve bir kaç tane direnç kullandım. LDR ışığa göre direnci değiskenlik gösteren bir devre elemanıdır. Karanlıkta direnci artarken, aydınlıkta direnci azalmaktadır. Aydınlıktan karanlığa geçişte direnci artar ve uçları arasındaki gerilim artar bu sayede transistör aktif olur ve ledin yanmasını sağlar. Devre şeması ve tanıtım videosu aşağıdadır. Tekrar görüşmek üzere\u0026hellip;\\\n","permalink":"https://mozanunal.com/2014/10/karanlkta-yanan-gece-lambas/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eProjemin ismi karanlıkta çalışan gece lambası, transistörü teorik olarak\nöğrendikten sonra bunu uygulamaya geçirmek istedim ve bu devreyi tasarladım. 1\nadet transistör, 1 adet ldr, 1 adet led ve bir kaç tane direnç kullandım. LDR\nışığa göre direnci değiskenlik gösteren bir devre elemanıdır. Karanlıkta direnci\nartarken, aydınlıkta direnci azalmaktadır. Aydınlıktan karanlığa geçişte direnci\nartar ve uçları arasındaki gerilim artar bu sayede transistör aktif olur ve\nledin yanmasını sağlar. Devre şeması ve tanıtım videosu aşağıdadır. Tekrar\ngörüşmek üzere\u0026hellip;\\\u003c/p\u003e","title":"[TR] Karanlıkta Yanan Gece Lambası"},{"content":"Herkese Merhabalar!\nBu yazımda size 555 entegresini tanıtmak istiyorum. Başlamadan önce şunu da belirtmek isterim 555 entegresi benim en çok sempati duyduğum entegrelerden biridir. Bunun nedeni ise 8 bacaklı, çok basit ve küçük bir entegre olmasına rağmen çok yararlı ve kullanım alanı çok geniş bir entegre olmasıdır. İnternette 555 entegresi ile yapılan bir çok proje\nbulabilirsiniz.(örneğin ==\u0026gt; https://www.instructables.com/id/47-projects-to-do-with-a-555/ ). Bu video da benim 555 entegresi hakkında tanıtım videom.\nTeknik detaylarına gelirsek, 555 entegresi aslında tek işlevi kare dalga üretmek olan bir timer devresidir. 555 entegre devresi pin bağlantıları şu şekildedir;\nGround: Toprak ayağı Trigger: Bu bacak monostable uygulamalarında tetikleme ayağı olarak kullanılır. Alttaki karşılaştırıcının – girişine bağlanmış olan bu ayakta 1/3 Vcc altında bir gerilim olunca flip-flop un set bacağı lojik 1 olur ve dolayısıyla flip-flop un Q çıkışı lojik 1 olur. Output: Çıkış ayağı Reset: Bu ayak lojik 0 olunca devre reset yapar ve Q çıkışı lojik 0 olur. Reset ayağı diğer pinlere bağlı değildir. Control: 2/3 Vcc gerilim alan noktaya bağlanmış olan bu ayaktaki gerilim değiştirilerek arzu edilirse zamanlama periyodu değiştirilebilir. Normalde küçük bir kapasite ile toprak hattına bağlanır. Threshold: 2/3 Vcc üzerinde gerilim olduğunda flip-flop reset atar. Discharge: npn transistörün kolektör ayağına bağlanmıştır. Transistör iletimde olunca (beyz gerilimi pozitif olunca) bu ayak toprak hattına bağlanır. Vcc: +4.5V ile +16V arasında bir gerilim verilir. 555 entegresi Monostable ve Astable olmak üzere iki faklı çalışma ve bağlantı moduna sahiptir.\n","permalink":"https://mozanunal.com/2014/10/555-entegresi-tantm/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003cbr\u003e\nBu yazımda size 555 entegresini tanıtmak istiyorum. Başlamadan önce şunu da\nbelirtmek isterim 555 entegresi benim en çok sempati duyduğum entegrelerden\nbiridir. Bunun nedeni ise 8 bacaklı, çok basit ve küçük bir entegre olmasına\nrağmen çok yararlı ve kullanım alanı çok geniş bir entegre olmasıdır. İnternette\n555 entegresi ile yapılan bir çok proje\u003cbr\u003e\nbulabilirsiniz.(örneğin ==\u0026gt;\n\u003ca href=\"https://www.instructables.com/id/47-projects-to-do-with-a-555/\"\u003ehttps://www.instructables.com/id/47-projects-to-do-with-a-555/\u003c/a\u003e\n). Bu video da benim 555 entegresi hakkında tanıtım videom.\u003c/p\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube-nocookie.com/embed/OpG5PGl0PE4?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003cp\u003eTeknik detaylarına gelirsek, 555 entegresi aslında tek işlevi kare dalga üretmek\nolan bir timer devresidir. 555 entegre devresi pin bağlantıları şu şekildedir;\u003c/p\u003e","title":"[TR] 555 Entegresi Tanıtım"},{"content":"Herkese Merhabalar!\nBu yazımda size, daha önceden yapıp (lise yıllarımda), bloğa koymak icin tekrar tamir ettiğim bir projemden bahsetmek istiyorum. Projenin ismi \u0026ldquo;Alkış ile lamba kontrolü\u0026rdquo; amacı ise alkış gibi yüksek bir sesle bir röle kontrol etmek. Bu projede, röleye toplam 12 led bağlayıp aydınlatma sağlanmıştır. Devrenin teknik detaylarına gelirsek temel mantığı şöyle;\nmikrofondan ses sinyali alınır. alınan ses opamp devrelerle yükseltilir. yükseltilen sinyaller 4011 entegresinde işlenerek yüksek ses geldiğinde çıkış sağlanır. sağlanan çıkışa bağlı olan transistör kontrol edilir. Yüksek ses gelirse transistör aktifleşir ve rölenin çalışmasını sağlar. Projenin tanıtım videosu ve devresinin çizimi aşağıdadır. Tekrar görüşmek üzere\u0026hellip;\n** Malzeme Listesi**\nMikrofon 2,2 k direnç 10 k trimpot 2,2 k direnç 4011 entegresi 1 m direnç 220 nf kapasitör 2,7 k direnç 1 m direnç 220 nf kapasitör BC237 transistör BC237 transistör 4.7 V zener diyot 100 u kapasitör 1,5 k direnç 2,2 k direnç 1N4148 diyot 12 V röle ","permalink":"https://mozanunal.com/2014/10/alks-ile-lamba-kontrolu/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003cbr\u003e\nBu yazımda size, daha önceden yapıp (lise yıllarımda), bloğa koymak icin tekrar\ntamir ettiğim bir projemden bahsetmek istiyorum. Projenin ismi \u0026ldquo;Alkış ile lamba\nkontrolü\u0026rdquo; amacı ise alkış gibi yüksek bir sesle bir röle kontrol etmek. Bu\nprojede, röleye toplam 12 led bağlayıp aydınlatma sağlanmıştır. Devrenin teknik\ndetaylarına gelirsek temel mantığı şöyle;\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003emikrofondan ses sinyali alınır.\u003c/li\u003e\n\u003cli\u003ealınan ses opamp devrelerle yükseltilir.\u003c/li\u003e\n\u003cli\u003eyükseltilen sinyaller 4011 entegresinde işlenerek yüksek ses geldiğinde çıkış\nsağlanır.\u003c/li\u003e\n\u003cli\u003esağlanan çıkışa bağlı olan transistör kontrol edilir. Yüksek ses gelirse\ntransistör aktifleşir ve rölenin çalışmasını sağlar.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eProjenin tanıtım videosu ve devresinin çizimi aşağıdadır. Tekrar görüşmek\nüzere\u0026hellip;\u003c/p\u003e","title":"[TR] Alkış ile Lamba Kontrolü"},{"content":"Herkese Merhabalar!\nBu yazımda sizlere EmguCv kütüphanesi ile yazdığım görüntü işleme uygulaması hakkında bilgi vermek istiyorum. Uygulamada ortamdan farklı bir renkte olan nesneyi rengine göre filtre edip onu gerçek zamanlı olarak takip etme amaçlanmıştır. Geliştirme ortamı olarak Microsoft Visual Studio, dil olarak C# programlama dili kullanılmıştır.\nProgramın genel algoritmasına gelirsek, şöyle özetleyebiliriz;\nGörüntü kameradan RGB formatında alınıp başka bir renkli resim görüntüleme yöntemi olan HSV formatına dönüştürülmüştür. HSV filtresi için uygun değerler test edilip bulunmuştur ve renk filtesi uygunlanmıştır. Renk filtresinden kalan gürültüler erode ve dilate morfolojik operatörleriyle azaltılmıştır. Counter Analysis ile görüntü \u0026ldquo;counter\u0026quot;lara ayrılmıştır. Sadece \u0026ldquo;counter\u0026rdquo; alanı belli bir değerden büyük olan \u0026ldquo;counter\u0026quot;lar dikkat alınmıştır. Bu sayede son kalan gürültüler de engelenmiştir. Projemin tanıtım videosuna aşağıdan ulaşabilirsiniz. Kodlar videoda gösterilmektedir. Tekrar görüşmek üzere\u0026hellip;\n","permalink":"https://mozanunal.com/2014/09/gercek-zamanl-obje-takibiemgucv-ile/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBu yazımda sizlere EmguCv kütüphanesi ile yazdığım görüntü işleme uygulaması\nhakkında bilgi vermek istiyorum. Uygulamada ortamdan farklı bir renkte olan\nnesneyi rengine göre filtre edip onu gerçek zamanlı olarak takip etme\namaçlanmıştır. Geliştirme ortamı olarak Microsoft Visual Studio, dil olarak C#\nprogramlama dili kullanılmıştır.\u003cbr\u003e\nProgramın genel algoritmasına gelirsek, şöyle özetleyebiliriz;\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eGörüntü kameradan RGB formatında alınıp başka bir renkli resim görüntüleme\nyöntemi olan HSV formatına dönüştürülmüştür.\u003c/li\u003e\n\u003cli\u003eHSV filtresi için uygun değerler test edilip bulunmuştur ve renk filtesi\nuygunlanmıştır.\u003c/li\u003e\n\u003cli\u003eRenk filtresinden kalan gürültüler erode ve dilate morfolojik operatörleriyle\nazaltılmıştır.\u003c/li\u003e\n\u003cli\u003eCounter Analysis ile görüntü \u0026ldquo;counter\u0026quot;lara ayrılmıştır. Sadece \u0026ldquo;counter\u0026rdquo;\nalanı belli bir değerden büyük olan \u0026ldquo;counter\u0026quot;lar dikkat alınmıştır. Bu sayede\nson kalan gürültüler de engelenmiştir.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eProjemin tanıtım videosuna aşağıdan ulaşabilirsiniz. Kodlar videoda\ngösterilmektedir. Tekrar görüşmek üzere\u0026hellip;\u003c/p\u003e","title":"[TR] Gerçek Zamanlı Obje Takibi(EmguCv ile)"},{"content":"İlk oyun denememi görsel programlayla çalışan Game Maker ile yaptım. Android oyunu olarak başladım fakat lisans satın almak gerektiğini öğrenince bilgisayar oyunu olarak kaldı. Bu benim ilk oyunumdur. İsmi \u0026ldquo;First Flight\u0026rdquo; ilk defa uçan bir kuşun başına gelenlerden oluşuyor (uçaklar, füzeler, kartallar). Ona yardım edenler de var tabi ki Angry Birds :D. Umarım beğenirsiniz. Tekrar görüşmek üzere\u0026hellip;\nOyunumu buradan indirebilirsiniz\n","permalink":"https://mozanunal.com/2014/05/oyunfirst-flight/","summary":"\u003cp\u003eİlk oyun denememi görsel programlayla çalışan Game Maker ile yaptım. Android\noyunu olarak başladım fakat lisans satın almak gerektiğini öğrenince bilgisayar\noyunu olarak kaldı. Bu benim ilk oyunumdur. İsmi \u0026ldquo;First Flight\u0026rdquo; ilk defa uçan\nbir kuşun başına gelenlerden oluşuyor (uçaklar, füzeler, kartallar). Ona yardım\nedenler de var tabi ki Angry Birds :D. Umarım beğenirsiniz. Tekrar görüşmek\nüzere\u0026hellip;\u003cbr\u003e\n\u003ca href=\"https://docs.google.com/file/d/0B5j__Lyt9ozbOFBqa0JEQjI4NjA/edit\"\u003eOyunumu buradan indirebilirsiniz\u003c/a\u003e\u003c/p\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube-nocookie.com/embed/PL8fSl5TgSU?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e","title":"[TR] Oyun (First Flight)"},{"content":"Herkese Merhabalar!\nProgramın kaynak koduna buradan ulaşabilirsiniz.\nİkinci yazımda C# ile gerçek zamanlı grafik çizdirme uygulamasından bahsedeceğim. Bu uygulamada C# programlama dili ve Microsoft Visual Studio 2010 kullanılmıştır. C# ile grafik çizmemize olanak sağlayan zed graph kütüphanesinden yararlanılmıştır.Bu kütüphaneyi buradan indirebilirsiniz. Sistemin genel algoritmasına bakarsak şöyle çalışır; seri porttan veri okunur, veri aralardaki virgüllere göre parse edilip labellera aktarılır, Eklenen \u0026ldquo;Timer\u0026rdquo; öğesi ile timerın her periyodunda zaman belirten labela geçen zaman kadar eklenir böylece kaçıncı saniye olduğu tutulur, aynı zamanda timerın her bir periyodunda x değerleri zaman, y değerleri data noktaları olmak üzere grafiğe bir nokta eklenir. Şimdi çalışma şeklini daha ayrıntılı bir şekilde inceleyelim.\nMikrodenetleyici-bilgisayar iletişimi projelerinde olmazsa olmazlardan biri Seri porttan veri okumaktır. Bu sayede mikrodenetleyici ile iletişim kurabiliriz ve veri alışverişinde bulunabiliriz. Aynı zamanda bilgisayar kontrollü robotikte de komut vermek için kullanılır. C# üzerinden serial port programı yazma işlemi oldukça kolaylaştırılmıştır. Seri port öğesi eklenir ve ayarları yapılır. Buradaki ayarlar veri transfer hızı hangi Com Portun okunacağının ayarı v.b. \u0026ldquo;Save to text\u0026rdquo; özelliği de gelen veriyi saklayıp sonra tekrar inceleme imkanı sunar.Asıl konumuz bu olmadığı için çok ayrıntıya girmiyorum zaten kolayca örnekleri bulunabilir.\nİkinci kısım seri porttan alınan verinin uygun şekilde parçalandığı ve labellara aktarıldığı bölümdür. Bunun için \u0026ldquo;Display Text\u0026rdquo; isimli bir fonksiyon yazılmıştır. Bu fonksiyon ile gelen verinin her satırının şekli\n1 $,data1,data2,data3 olarak belirlenmiştir. Fonksiyonun algoritması şu şekildedir; gelen verinin ilk harfi \u0026ldquo;$\u0026rdquo; değilse veriyi işlemez, eğer ilk harfi oysa virgül sayısına bakar(Stringin içinden belli bir karakteri arama fonksiyonu kullanılmıştır.), eğer o da 3\u0026rsquo;e eşit ise gelen veriyi virgüllere göre parçalar ve ilk kısım hariç(\u0026quot;$\u0026quot;) kalan veriyi, tek tek 3 ayrı labela aktarır böylece gelen data1, data2, data3 ayrı labellara aktarılmış olur.\nGrafik çizdirme kısmına geçmeden önce grafiği çizen timerı açan ve kapatan 2 butondan bahsedeyim. Bunlar sayesinde grafik çizdirme başlatılır ve durdurulur. Yani butonların tıklama \u0026ldquo;event\u0026quot;lerinde sadece timer1.enable=true; ve timer1.enable=false kodu vardır.(Tabi ayrı ayrı birinde true olan diğerinde false olan )\nResimde altta eklediğimiz SeriPort ve timer1 öğesini görebilirsiniz. \u0026ldquo;FileDiaglog\u0026rdquo; öğeleri ise text dosyasına kaydetmek için ve bir text dostasını seri porttan yollamak için kullanılır.\nilk önce grafiğin ayarlarından başlayalım. Grafiğe bir çizim alanı yanı \u0026ldquo;pane\u0026rdquo; ekleyelim. Çizdiğimiz her şeyi hangi \u0026ldquo;pane\u0026quot;e çizdiğimizi belirtmek zorundayız. Eksenlere isim koymamız ve daha bir sürü ayar yapmamız mümkün ama ben karışıklık yaratmamak adına sade bir grafik tercih ettim. ZedGraph kütüphanesi yapabileceğiniz diğer ayarlar ile çok farklı grafikler çizdirme imkanı sunar. Grafiğin altını doldurma, nokta grafiği, sütun ve daire grafiği gibi çeşit ve renk opsiyonları mevcuttur. Bu çeşitlerin bazılarına buradan ulaşabilirsiniz.\nGrafik ayarlarında önemli bir yerlerden biri de \u0026ldquo;Point pair list\u0026quot;in ve \u0026ldquo;Line item\u0026quot;ın belirlenmesidir. Çizilecek her eğri için birer tane bunlardan belirlenmelidir. \u0026ldquo;RolingPointPairList\u0026rdquo; seçilmesinin sebebi ise \u0026ldquo;rolling\u0026rdquo; olduğunda en fazla seçilen kadar(burada en fazla 40 nokta çifti) noktanın hafızada saklaması böylece bir süre sonra biriken noktaların bilgisayarda yavaşlama meydana getirmesinin engellenmesidir. Belli aralıklarla zaten grafik üstüne sağ tıklanarak resim olarak kaydetme opsiyonu da mevcuttur.\nGelelim grafiği çizdirme kısmına. İlk önce grafiğe bir \u0026ldquo;Timer\u0026rdquo; öğesi eklenir ve periyodu 1000 ms(1 saniye) olarak belirlenir. Bu tamamen opsiyoneldir ne kadarlık zaman aralıklarında grafiğimize nokta eklenmesi istendiğine bağlıdır.İlk 3 satırdaki kodlar ile bir labelda şu anki saniyenin tutulması sağlanır(Zaman bizim x koordinatımız olduğu için anlık olarak kulanılması gereklidir). Sonraki kısımlar ise grafiğe nokta eklenmesi algoritmasıdır. Gelen verileri yukarıda parçalayıp labellara aktarmıştık burda ise o labellar ve zaman labelı kullanılarak nokta çifleri elde edilir. Nokta çiftleri, nokta listelerine aktarılır sonra bunlar birleştirilerek eğri çizilir. myCurveOne = myPane.AddCurve(null, listPointsOne, Color.Blue, SymbolType.Circle) bu satır ile eğrinin hangi \u0026ldquo;pane\u0026quot;e çizileceği, rengi, noktaların gösteren sembol (yuvarlak,yıldız,kare), eğrinin altının dolu-boş olacağı belirlenir. En alt kısımda grafik yenilerek yeni eğrinin çizilmesi graifğin gördüğümüz yerinin eğrimize paralel olarak uygun şekilde yer değiştirmesi sağlanır. Böylece Bilgisayara hiç değmeden grafiğin takibi otomatik olarak yapılmış olur.\nAşağıda programımızın son hali bulunmaktadır. En kısa zamanda videosunu eklemeye çalışacağım. Görselleme, telemetri projelerinde ve bilgisayarla kontrol projelerinde en önemli noktalardan biridir(ya da pid, sensor test ederken). Programımız da bu ihtiyaca yönelik yazılmıştır. Arduino ve ya pic ile (ya da seri porttan haberleşebilen tüm işlemciler) rahatlıkla çalışabilecek bir uygulamadır. C# ile yapılan gerçek zamanlı (real time) uygulama eksikliğinden bu konuyu yapma ihtiyacı hissettim. Ben bu konuyu araştırırken bu uygulamayı gerçek zamanlı yapan ve sonra nasıl yapıldığını anlatan bir kaynak bulamamıştım.Umarım bu bilgiler işinize yarar. Paylaşımlarınızda kaynak belirtirseniz çok iyi olur :). Tekrar görüşmek üzere\u0026hellip;\nNot: Sonradan programın derlenmiş halini de paylaştım indirmek isterseniz buradaki yazıma gitmeniz yeterli olacaktır.\n","permalink":"https://mozanunal.com/2014/05/c-gercek-zamanl-grafik-cizme-program/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003cbr\u003e\n\u003ca href=\"https://github.com/mozanunal/serialPortGrapher\"\u003eProgramın kaynak koduna buradan ulaşabilirsiniz.\u003c/a\u003e\u003cbr\u003e\nİkinci yazımda C# ile gerçek zamanlı grafik çizdirme uygulamasından\nbahsedeceğim. Bu uygulamada C# programlama dili ve Microsoft Visual Studio 2010\nkullanılmıştır. C# ile grafik çizmemize olanak sağlayan zed graph\nkütüphanesinden\nyararlanılmıştır.\u003ca href=\"https://zedgraph.sourceforge.net/index.html\"\u003eBu kütüphaneyi buradan indirebilirsiniz\u003c/a\u003e.\nSistemin genel algoritmasına bakarsak şöyle çalışır; seri porttan veri okunur,\nveri aralardaki virgüllere göre parse edilip labellera aktarılır, Eklenen\n\u0026ldquo;Timer\u0026rdquo; öğesi ile timerın her periyodunda zaman belirten labela geçen zaman\nkadar eklenir böylece kaçıncı saniye olduğu tutulur, aynı zamanda timerın her\nbir periyodunda x değerleri zaman, y değerleri data noktaları olmak üzere\ngrafiğe bir nokta eklenir. Şimdi çalışma şeklini daha ayrıntılı bir şekilde\ninceleyelim.\u003c/p\u003e","title":"[TR] C# Gerçek Zamanlı Grafik Çizme Programı"},{"content":"Herkese Merhabalar!\nYaptığım projeleri arşivleyebilmek ve bunlardan herkesin yararlanabilmesi için blog açmaya karar verdim. Blogumda size C# üzerinden arayüz yapımı, bilgisayar mikroişlemci iletişimi, arduino uygulamaları, pic uygulamaları ve basit sensörlü elektronik alanında projeleri fotoğraflarıyla ve işin teorisini de anlatarak paylaşmayı planlıyorum. Aynı zamanda az da olsa Android programlamadan(robotik uygulamalar için gerekli olan kısımdan) ve hobi olarak yaptığım oyunları da buradan sizinle paylaşmayı planlıyorum. Elektroniğe merak salmış arkadaşlarımın elimden geldiğince(ben de yolun çok başındayım) en iyi şekilde bilgilendirmek dileğim :). Daha önce üniversitemde uzun mesafe takip sistemleri üzerine çalışmalar yaptım. Gps, IMU, ve daha bir sürü sensörden aldığımız verileri, yer istasyonuna iletmek ve arayüz programıyla bunların görsellenmesiydi görevim. Şimdi ise insansız hava araçları ve görüntü işleme üzerine çalışmaktayım. Aynı zamanda hobi olarak pic ve arduino devreleri, çeşitli devreler üretmeye, yapmaya devam ediyorum. Tekrar görüşmek üzere\u0026hellip;\n","permalink":"https://mozanunal.com/2014/05/ilk-yayn/","summary":"\u003cp\u003e\u003cstrong\u003eHerkese Merhabalar!\u003c/strong\u003e\u003cbr\u003e\n    Yaptığım projeleri arşivleyebilmek ve bunlardan herkesin yararlanabilmesi\niçin blog açmaya karar verdim. Blogumda size C# üzerinden arayüz yapımı,\nbilgisayar mikroişlemci iletişimi, arduino uygulamaları, pic uygulamaları ve\nbasit sensörlü elektronik alanında projeleri fotoğraflarıyla ve işin teorisini\nde anlatarak paylaşmayı planlıyorum. Aynı zamanda az da olsa Android\nprogramlamadan(robotik uygulamalar için gerekli olan kısımdan) ve hobi olarak\nyaptığım oyunları da buradan sizinle paylaşmayı planlıyorum. Elektroniğe merak\nsalmış arkadaşlarımın elimden geldiğince(ben de yolun çok başındayım) en iyi\nşekilde bilgilendirmek dileğim :).  Daha önce üniversitemde uzun mesafe takip\nsistemleri üzerine çalışmalar yaptım. Gps, IMU, ve daha bir sürü sensörden\naldığımız verileri, yer istasyonuna iletmek ve arayüz programıyla bunların\ngörsellenmesiydi görevim. Şimdi ise insansız hava araçları ve görüntü işleme\nüzerine çalışmaktayım. Aynı zamanda hobi olarak pic ve arduino devreleri,\nçeşitli devreler üretmeye, yapmaya devam ediyorum. Tekrar görüşmek üzere\u0026hellip;\u003c/p\u003e","title":"[TR] İlk Yayın"},{"content":"Hello there!\nI\u0026rsquo;m M.Ozan Unal, and I specialize in big data, data engineering, and ML engineering. Feel free to reach out with any questions, ideas to discuss, or collaboration opportunities. You can contact me via email at mehmetozanunal@gmail.com. If you prefer video conferencing you can book meetings via emails by proposing available time slots. Let\u0026rsquo;s connect and explore the exciting world of data and software engineering together! I look forward to hearing from you.\nContact Information:\nEmail Github Google Scholar ","permalink":"https://mozanunal.com/contact/","summary":"\u003cp\u003eHello there!\u003c/p\u003e\n\u003cp\u003eI\u0026rsquo;m M.Ozan Unal, and I specialize in big data, data engineering, and ML\nengineering. Feel free to reach out with any questions, ideas to discuss, or\ncollaboration opportunities. You can contact me via email at\n\u003ca href=\"mailto:mehmetozanunal@gmail.com\"\u003emehmetozanunal@gmail.com\u003c/a\u003e. If you prefer video\nconferencing you can book meetings via emails by proposing available time slots.\nLet\u0026rsquo;s connect and explore the exciting world of data and software engineering\ntogether! I look forward to hearing from you.\u003c/p\u003e","title":""}]