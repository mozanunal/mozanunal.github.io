<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Drone on mozanunal.com</title>
    <link>https://mozanunal.com/categories/drone/</link>
    <description>Recent content in Drone on mozanunal.com</description>
    <image>
      <title>mozanunal.com</title>
      <url>https://mozanunal.com/images/papermod-cover.png</url>
      <link>https://mozanunal.com/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.147.5</generator>
    <language>en</language>
    <copyright>mozanunal</copyright>
    <lastBuildDate>Tue, 07 Feb 2017 23:55:00 +0000</lastBuildDate>
    <atom:link href="https://mozanunal.com/categories/drone/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[TR] Multikopterler için otopilot yapmak</title>
      <link>https://mozanunal.com/2017/02/multikopterler-icin-otopilot-yapmak/</link>
      <pubDate>Tue, 07 Feb 2017 23:55:00 +0000</pubDate>
      <guid>https://mozanunal.com/2017/02/multikopterler-icin-otopilot-yapmak/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Merhaba arkadaşlar,&lt;/strong&gt;&lt;br&gt;
      Bugünkü yazımda geçen senelerde üzerinde uzun zaman harcadığım fakat tamamlayamadığım bir konu olan otopilot yapmak üzerine edindiğim tecrübeleri anlatmak istiyorum. Yazıya başlamadan önce bu çalışmaların tamamını beraber yaptığım &lt;strong&gt;Bahadır Gökçeaslan&lt;/strong&gt; teşekkür etmeyi bir borç bilirim.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;SimplePilotlogoPNG.png&#34; loading=&#34;lazy&#34; src=&#34;https://github.com/mozanunal/SimplePilot/blob/master/LOGO/SimplePilotlogoPNG.png?raw=true&#34;&gt;&lt;/p&gt;
&lt;p&gt;Evet otopilot aslında benim anlatacağım bölüme kıyasla biraz fazla geniş bir kavram oldu. Zira malesef proje uçuş kontrolcüsü aşamalarında kaldı. Bir soru ile başlayalım. Bir uçuş kontrolcüsü nedir? Bir uçuş kontrolcüsü temel olarak havada uçan bir aracın yere göre açılarının istenilen şekilde olmasını sağlayan sensör ve hareketli mekanizmalar bütünüdür. Aslında yere göre açılarla sınırlamak çok mantıklı değil. Bir hava aracının yükseliğinin sabit olması veya istenilen hızda istenilen konumda kalmasını sağlamak da bunun işidir. Fakat bu projede, bir Quadcopter uçuş kontrolcüsü olarak tasarlanmış olan bu yapıda amaç quadcopterin yere göre açılarını kumandadan gelen girdilere göre kontrol etmekti.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[TR] Pixhawk Otopilot ve Özellikleri</title>
      <link>https://mozanunal.com/2016/09/pixhawk-otopilot-ve-ozellikleri/</link>
      <pubDate>Thu, 01 Sep 2016 14:26:00 +0000</pubDate>
      <guid>https://mozanunal.com/2016/09/pixhawk-otopilot-ve-ozellikleri/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Herkese Merhabalar,&lt;/strong&gt;&lt;br&gt;
        Uzun bir aradan sonra tekrar bir yazı hazırladım. Aslında bu yazıya çok önceden başlamıştım fakat devamını getirmemiştim şimdi tamamlayabildim ancak :). Evet bu yazımda Pixhawk isimli otopilottan bahsetmek istiyorum. Pixhawk açık kaynak kodlu Stm32 tabanlı yazılım tabanı olarak da ArduPilota dayanan bir otopilot modülü. Burada bir yorumda bulunmam gerekirse, açık kaynaklı otopilotlar arasında en başarılısı bana göre. Bu teorimi kanıtlamak için de hemen özelliklerine geçmek istiyorum.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://4.bp.blogspot.com/-p4zpkVZrQWU/V8faC6OGbjI/AAAAAAAAc_U/rx-zCY8cZksKXnRpi2GC8lY-b-aB_MA_ACLcB/s640/pic-prod-pixhawk1.jpg&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ana işlemcisi 32 bit Arm Cortex M4 tabanlı ST Microelectronic&amp;rsquo;in bir ürünü( STM32F427 Cortex M4 core with FPU).  Bu işlemci &amp;ldquo;NuttX Real Time Operating System&amp;rdquo; ile kullanılıyor. &lt;/p&gt;</description>
    </item>
    <item>
      <title>[TR] İTÜNOM Takımı</title>
      <link>https://mozanunal.com/2016/01/itunom-takm/</link>
      <pubDate>Wed, 27 Jan 2016 01:01:00 +0000</pubDate>
      <guid>https://mozanunal.com/2016/01/itunom-takm/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Herkese Merhabalar,&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2014 yılının Nisan ayında arkadaşlarımla beraber İstanbul Teknik Üniversitesi bünyesinde İTÜNOM Otonom Hava Araçları Takımını kurduk. 2 Senedir aktif olarak çalışmalarımıza devam ediyoruz. Amerikanın Maryland Eyaletinde düzenlenmekte olan Student Unmanned Air System yarışmasına 2015 yılında katıldık 2016 yılında da katılmak için hazırlanıyoruz.&lt;/p&gt;
&lt;p&gt;Takımımızda şu an 10 kişiyiz. 3 adet uçak, 2 adet uzay, 2 adet elektronik, 2 adet bilgisayar, 1 adet kontrol mühendisliğinden üyemiz var. Özellikle multidisipliner bir takım olmayı tercih ettik. Bu sayede her üyemizin farklı bir uzmanlığı var ve kolayca farklı sistemleri tasarlayıp bir araya getirebiliyoruz.&lt;br&gt;
Takımımızın Sitesi: &lt;a href=&#34;https://www.itunom.com/&#34;&gt;https://www.itunom.com/&lt;/a&gt;&lt;br&gt;
Facebook Sayfası: &lt;a href=&#34;https://www.facebook.com/itunom&#34;&gt;https://www.facebook.com/itunom&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[TR] Multikopterler için PID kontrol</title>
      <link>https://mozanunal.com/2015/07/multikopterler-icin-pid-kontrol/</link>
      <pubDate>Wed, 29 Jul 2015 15:44:00 +0000</pubDate>
      <guid>https://mozanunal.com/2015/07/multikopterler-icin-pid-kontrol/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Herkese Merhabalar,&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bu yazımda PID kontrol algoritmalarından bahsetmek istiyorum. Bu yazıyı yazmamın 2 sebebi var. PID algoritmaları hakkında bir çok yazı okudum fakat coğu akademik ve karmaşık yazılar. Benim amacım anlaşılırlığı ve ayrıntıyı dengeli bir şekilde maximum değerlerinde kullanmak. İkincisi ise bu algoritmanın özel olarak multikopterlerde kullanımını basit bir şekilde açıklayan bir yazıya rastlamadım. Bu yüzden bu yazıyı yazmaya karar verdim.&lt;/p&gt;
&lt;p&gt;Bir otopilotun en temel 2 bileşeni hava aracının yönelimini tespit eden IMU sensörü ve PID algoritmasıdır. IMU sensörü içinde bir kaç sensör barındırır ve amacı hava aracının 3 boyutlu uzaydaki yönelimini bulmaktır. IMU konusundan &lt;a href=&#34;https://mozanunal.com/2014/11/imu-aclarnn-3-boyutlu-olarak/&#34;&gt;bu yazımda bahsetmiştim&lt;/a&gt;. PID algoritmasının görevi ise temel olarak şöyledir: Yönelimi (3 eksendeki yere göre açılar) sensörler üzerinden alır, istenen açıları da kullanıcıdan alır. Bu ikisi arasındaki farkı en düşük seviyeye düşürmeyi amaçlar. İşte PID algoritmasının görevi bu farkı minimuma indirmek için gerekli motor hız değerlerini hesaplamaktır.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[TR] Arduino Gimbal Kontrol Kartı</title>
      <link>https://mozanunal.com/2015/07/arduino-gimbal-kontrol-kart/</link>
      <pubDate>Sat, 04 Jul 2015 03:30:00 +0000</pubDate>
      <guid>https://mozanunal.com/2015/07/arduino-gimbal-kontrol-kart/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Herkese Merhabalar,&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Daha önce kolay bulunabilecek malzemelerden nasıl gimbal yapılabileceğinden bahsetmiştim (&lt;a href=&#34;https://mozanunal.com/2015/06/2-eksenli-servo-gimbal-yapm/&#34;&gt;O yazıya buradan ulaşabiliriniz&lt;/a&gt;). Kontrol kartını sonra anlatacağım demiştim. Veee bu yazımda arduino ve MPU6050 sensörü kullanarak nasıl bir gimbal kontrol kartı yapabileceğimizden bahsedeceğim. Bu kart sayesinde gimbalin yere göre açısını kontrol edebileceğiz. Yere göre açısının sabit kalmasını da kontrol kartı üzerindeki IMU sensörü ile sağlayacağız(&lt;a href=&#34;https://mozanunal.com/2014/11/imu-aclarnn-3-boyutlu-olarak/&#34;&gt;Ayrıntılı bilgi için tıklayınız&lt;/a&gt;). Kontrol kartı saniyede 100 değer okuyup servo PWM değerlerini ona göre güncelliyor. Bu sayede oldukça yüksek çözünürlüklü her türlü seviyede kullanılabilecek bir kontrol kartı yapmış oluyoruz. Ayrıca başa koyduğum ayar parametreleri sayesinde her boyutta ve çeşitte servo gimbale kolayca uyumlu hale getirilebilir. Kontrol kartının tanıtım videosu aşağıdadır.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[TR] 2 Eksenli Servo Gimbal Yapımı</title>
      <link>https://mozanunal.com/2015/06/2-eksenli-servo-gimbal-yapm/</link>
      <pubDate>Sat, 06 Jun 2015 04:36:00 +0000</pubDate>
      <guid>https://mozanunal.com/2015/06/2-eksenli-servo-gimbal-yapm/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Herkese Merhabalar,&lt;/strong&gt;&lt;br&gt;
Bu yazımda her yerde temin edilebilecek ve maliyetsiz malzemelerle nasıl mini servo gimbal yapılacağını anlatacağım. Bu arada en baştan belirteyim kontrol kartı ve açı stabilizasyonu için daha sonra bir yazı hazırlayacağım.&lt;/p&gt;
&lt;p&gt;Proje içi kullandığım malzemeler 2 adet servo, Arduino Nano, mini kamera, yoğurt kabı, ve ataç. Gimbalin yapım aşamaları resimlerde sırasıyla anlatılmıştır. Özetlemek gerekirse;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Yoğurt kabından bir köşe 2 kenarıyla beraber çıkarılır.&lt;/li&gt;
&lt;li&gt;Servolardan bir tanesi için oyuk açılır ve servo oraya vidalanır.&lt;/li&gt;
&lt;li&gt;Bu servonun koluna ataç vidalanır.&lt;/li&gt;
&lt;li&gt;Ataç 90 derece büküldükten sonra diğer servo biraz da bant yardımıyla sabitlenir.&lt;/li&gt;
&lt;li&gt;Burada dikkat etmemiz gereken servoların dönme eksenlerinin kameranın ağırlık merkezinden geçmesidir. Bu sayede servolara binen yükük minimuma düşer.&lt;/li&gt;
&lt;li&gt;Kamera için yapılan kap vida yardımıyla 2. servonun koluna sabitlenir.&lt;/li&gt;
&lt;li&gt;Ve son neredeyse hiç maliyetli 2 eksen gimbal yapmış olduk. Biraz titreşim problemi olacaktır diye tahmin ediyorum. Daha az esnek malzemeler kullanılarak bu sorun aşılabilir. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://3.bp.blogspot.com/-7reOfYet5uw/VXIBX-SRikI/AAAAAAAALK4/q6v1h2KQXWw/s320/IMG_20150605_163841.jpg&#34;&gt;](&lt;a href=&#34;https://3.bp.blogspot.com/-7reOfYet5uw/VXIBX-SRikI/AAAAAAAALK4/q6v1h2KQXWw/s1600/IMG_20150605_163841.jpg&#34;&gt;https://3.bp.blogspot.com/-7reOfYet5uw/VXIBX-SRikI/AAAAAAAALK4/q6v1h2KQXWw/s1600/IMG_20150605_163841.jpg&lt;/a&gt;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>[TR] IMU Açılarının 3 Boyutlu Olarak Görsellenmesi</title>
      <link>https://mozanunal.com/2014/11/imu-aclarnn-3-boyutlu-olarak/</link>
      <pubDate>Fri, 07 Nov 2014 14:15:00 +0000</pubDate>
      <guid>https://mozanunal.com/2014/11/imu-aclarnn-3-boyutlu-olarak/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Herkese Merhabalar!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bu yazımda size hava araçlarının en temel elektronik ekipmanı olan IMU modullerinden bahsetmek istiyorum. IMU modullerinin hayati önem taşımasının sebebi, modüllerin yönelim açılarını hesaplamak için kullanılmasıdır. En büyük yolcu uçağından, roketten en küçük bir quadrokoptere kadar tüm hava araçları stabil ve sağlıklı bir uçuş için bu modullerden birine sahip olmalıdırlar.&lt;/p&gt;
&lt;p&gt;IMU ingilizcedeki &amp;ldquo;Inertial Mesurament Unit&amp;rdquo; kelime grubunun kısaltılmış halidir. IMU ile bir cismin uzaydaki 3 boyutlu yönelimi bulunabilir. 3 boyutlu yönelimi anlatmanın  en kolay yolu Euler Açılarını kullanmaktır. Havacılık sektöründe sıklıkla Euler açılarının özelleşmiş bir versiyonu olan &amp;ldquo;Yaw, Pitch, Roll&amp;rdquo; açıları kullanılmaktadır.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[TR] IMU ile Kamera Gimbalı Kontrolü</title>
      <link>https://mozanunal.com/2014/10/imu-ile-kamera-gimbal-kontrolu/</link>
      <pubDate>Sat, 18 Oct 2014 18:22:00 +0000</pubDate>
      <guid>https://mozanunal.com/2014/10/imu-ile-kamera-gimbal-kontrolu/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Herkese Merhabalar!&lt;/strong&gt;&lt;br&gt;
 Bu projemin amacı MPU6050 ile hesaplanan pitch ve roll açıları ile 2 eksenli bir gimbalı kontrol etmek. MPU6050 açılarını hesaplamak için FreeIMU kütüphanesini kullandım. &lt;a href=&#34;https://www.varesano.net/projects/hardware/FreeIMU&#34;&gt;Buradan indirebilirsiniz&lt;/a&gt;. Aldığım açılar belli bir değerden büyükse servoların açılarını kademeli olarak azalttım veya artırdım.Bu sayede gimbal, MPU6050yi eğdiğim yönde dönmüş oldu. Projemin tanıtım videosunu aşağıdan izleyebilirsiniz.&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/MQi57R7bO8M?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;p&gt;Arkadaşlar projemin Arduino kodunu da paylaşıyorum.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
