<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Coding on M.Ozan Unal</title><link>https://mozanunal.com/categories/coding/</link><description>Recent content in Coding on M.Ozan Unal</description><generator>Hugo</generator><language>en</language><copyright>Copyright © 2014–2024</copyright><lastBuildDate>Tue, 12 Oct 2021 08:14:07 +0000</lastBuildDate><atom:link href="https://mozanunal.com/categories/coding/index.xml" rel="self" type="application/rss+xml"/><item><title>Wallpaper Automation Tool: WPCTL</title><link>https://mozanunal.com/2021/10/wpctl-1/</link><pubDate>Tue, 12 Oct 2021 08:14:07 +0000</pubDate><guid>https://mozanunal.com/2021/10/wpctl-1/</guid><description>&lt;p>Hey,&lt;/p>
&lt;p>Today I will come up with a very minimalistic wallpaper automation tool &lt;a href="https://github.com/mozanunal/wpctl">&lt;strong>WPCTL&lt;/strong>&lt;/a>. I spend most of my time on the computer. There are not too many options to have fun with while working on the computer. Interesting and colorful photos are one of the favorite entertainment sources for my daily routine. Therefore, I really like auto wallpaper changer programs which surprises me with different photos. I decided to use one of these programs. However, none of them is fulfiled my requirements. I want a wallpaper changer which should be like:&lt;/p></description></item><item><title>Rambling On Randomness</title><link>https://mozanunal.com/2020/06/randomness/</link><pubDate>Fri, 12 Jun 2020 02:41:00 +0000</pubDate><guid>https://mozanunal.com/2020/06/randomness/</guid><description>&lt;h1 id="what-is-randomness">What is randomness&lt;/h1>
&lt;p>According to the Oxford Dictionary, &lt;em>&amp;ldquo;the randomness is the apparent lack of pattern or predictability in events&amp;rdquo;&lt;/em>. Randomness implies &amp;ldquo;Unpredictability&amp;rdquo;.
To practically illustrated it: if a sequence of numbers is given and you have no way to predict what the next number in the sequence will be - then the sequence is random.
A single number cannot ever be random. 13…ok…not random.
But: 1, 3, 5, 7, 9, 11, 13 …the ‘13’ doesn’t seem very random because you could have predicted it with almost complete certainty.&lt;/p></description></item><item><title>Harmonica Note Converter</title><link>https://mozanunal.com/2020/05/harmonica-note-conv/</link><pubDate>Thu, 07 May 2020 23:44:00 +0000</pubDate><guid>https://mozanunal.com/2020/05/harmonica-note-conv/</guid><description>&lt;p>&lt;strong>Harmonica Note Converter&lt;/strong> aims to create a python library to convert notes or tabs for different kind of harmonicas.
It is based on &lt;a href="https://github.com/gciruelos/musthe">musthe&lt;/a>.&lt;/p>
&lt;p>&lt;a href="https://github.com/mozanunal/harmonica-note-converter">https://github.com/mozanunal/harmonica-note-converter&lt;/a>&lt;/p>
&lt;h2 id="story">Story&lt;/h2>
&lt;p>Some of you know that I am an ameteur harmonica player and I love harmonicas. I usually play diatonic harmonicas but last time I have bought a chromatic harmonica, which has quite different tone and it is hard to find music notes for it.&lt;/p>
&lt;p>I am not the best at playing instruments. However, I am good at coding and music theory. That&amp;rsquo;s why I decide to develop a tool to convert music notes for any instrument to notes for my harmonicas. I also create an modular structure to define new instruments.&lt;/p></description></item><item><title>Hash Code 2020</title><link>https://mozanunal.com/2020/03/hash-code-2020/</link><pubDate>Tue, 31 Mar 2020 23:00:12 +0000</pubDate><guid>https://mozanunal.com/2020/03/hash-code-2020/</guid><description>&lt;p>&lt;strong>Hello Everyone,&lt;/strong>&lt;/p>
&lt;p>I want to share our solution for Google Hash Code 2020. It is the code repo of team titanium-white for Google Hash Code 2020 Online Qualification Round. We have writen our code in Python.&lt;/p>
&lt;p>&lt;a href="https://github.com/mozanunal/hashcode2020">Code can be reached from here&lt;/a>&lt;/p>
&lt;h2 id="code">Code&lt;/h2>
&lt;p>Basically, the problem class is the backbone of the system.&lt;/p>
&lt;ul>
&lt;li>It handles the inputs and outputs with functions &lt;code>__init__&lt;/code> and &lt;code>dump&lt;/code>.&lt;/li>
&lt;li>It read the input files and creates objects according to that. I think the one of the thing we did well is this &lt;code>__init__&lt;/code> function.
It create all the objects like books, libraries even if book2score dictionary.&lt;/li>
&lt;li>It also handles the solving opeartion. It iterate trough the days and get max predicted score from every library available. When the libraries calculating the max pred scores, they get the current state as input. Therefore their predictionsa are more accurate. After the library is selected the state is updated such as day, already scanned books and state of the selected library.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># main.py&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> library &lt;span style="color:#ff79c6">import&lt;/span> Library, Book
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">import&lt;/span> numpy &lt;span style="color:#ff79c6">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">class&lt;/span> &lt;span style="color:#50fa7b">Problem&lt;/span>(&lt;span style="color:#8be9fd;font-style:italic">object&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">def&lt;/span> __init__(self, filename):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd;font-style:italic">print&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;file--&amp;#39;&lt;/span>, filename)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">open&lt;/span>(filename)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#ff79c6">=&lt;/span> f&lt;span style="color:#ff79c6">.&lt;/span>readline()&lt;span style="color:#ff79c6">.&lt;/span>split(&lt;span style="color:#f1fa8c">&amp;#39; &amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#ff79c6">.&lt;/span>filename &lt;span style="color:#ff79c6">=&lt;/span> filename
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#ff79c6">.&lt;/span>nBooks, self&lt;span style="color:#ff79c6">.&lt;/span>nLibs, self&lt;span style="color:#ff79c6">.&lt;/span>nDays &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">int&lt;/span>(l[&lt;span style="color:#bd93f9">0&lt;/span>]), &lt;span style="color:#8be9fd;font-style:italic">int&lt;/span>(l[&lt;span style="color:#bd93f9">1&lt;/span>]), &lt;span style="color:#8be9fd;font-style:italic">int&lt;/span>(l[&lt;span style="color:#bd93f9">2&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#ff79c6">.&lt;/span>books &lt;span style="color:#ff79c6">=&lt;/span> [ Book(i,&lt;span style="color:#8be9fd;font-style:italic">int&lt;/span>(score)) &lt;span style="color:#ff79c6">for&lt;/span> i, score &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">enumerate&lt;/span>(f&lt;span style="color:#ff79c6">.&lt;/span>readline()&lt;span style="color:#ff79c6">.&lt;/span>split(&lt;span style="color:#f1fa8c">&amp;#39; &amp;#39;&lt;/span>))]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sumb &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">for&lt;/span> b &lt;span style="color:#ff79c6">in&lt;/span> self&lt;span style="color:#ff79c6">.&lt;/span>books:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sumb &lt;span style="color:#ff79c6">+=&lt;/span> b&lt;span style="color:#ff79c6">.&lt;/span>score
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd;font-style:italic">print&lt;/span>( sumb&lt;span style="color:#ff79c6">/&lt;/span>&lt;span style="color:#bd93f9">1000000&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#ff79c6">.&lt;/span>book2Score &lt;span style="color:#ff79c6">=&lt;/span> {book&lt;span style="color:#ff79c6">.&lt;/span>id: &lt;span style="color:#8be9fd;font-style:italic">int&lt;/span>(book&lt;span style="color:#ff79c6">.&lt;/span>score) &lt;span style="color:#ff79c6">for&lt;/span> book &lt;span style="color:#ff79c6">in&lt;/span> self&lt;span style="color:#ff79c6">.&lt;/span>books}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#ff79c6">.&lt;/span>libs &lt;span style="color:#ff79c6">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">for&lt;/span> libId &lt;span style="color:#ff79c6">in&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">range&lt;/span>(self&lt;span style="color:#ff79c6">.&lt;/span>nLibs):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#ff79c6">=&lt;/span> [&lt;span style="color:#8be9fd;font-style:italic">int&lt;/span>(i) &lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> f&lt;span style="color:#ff79c6">.&lt;/span>readline()&lt;span style="color:#ff79c6">.&lt;/span>split(&lt;span style="color:#f1fa8c">&amp;#39; &amp;#39;&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nBooks, nSign, nScan &lt;span style="color:#ff79c6">=&lt;/span> l[&lt;span style="color:#bd93f9">0&lt;/span>], l[&lt;span style="color:#bd93f9">1&lt;/span>], l[&lt;span style="color:#bd93f9">2&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> books &lt;span style="color:#ff79c6">=&lt;/span> [ Book(&lt;span style="color:#8be9fd;font-style:italic">int&lt;/span>(i), &lt;span style="color:#8be9fd;font-style:italic">int&lt;/span>(self&lt;span style="color:#ff79c6">.&lt;/span>book2Score[&lt;span style="color:#8be9fd;font-style:italic">int&lt;/span>(i)])) &lt;span style="color:#ff79c6">for&lt;/span> i &lt;span style="color:#ff79c6">in&lt;/span> f&lt;span style="color:#ff79c6">.&lt;/span>readline()&lt;span style="color:#ff79c6">.&lt;/span>split(&lt;span style="color:#f1fa8c">&amp;#39; &amp;#39;&lt;/span>) ] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lib &lt;span style="color:#ff79c6">=&lt;/span> Library(libId, nBooks, nSign, nScan, books)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#ff79c6">.&lt;/span>libs&lt;span style="color:#ff79c6">.&lt;/span>append(lib) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#ff79c6">.&lt;/span>pri()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">solve&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> solution &lt;span style="color:#ff79c6">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> readBookSet &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">set&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">while&lt;/span> t &lt;span style="color:#ff79c6">&amp;lt;&lt;/span> self&lt;span style="color:#ff79c6">.&lt;/span>nDays:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd;font-style:italic">print&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;-----&amp;#39;&lt;/span>, t)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scoreList &lt;span style="color:#ff79c6">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> readBookList &lt;span style="color:#ff79c6">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">for&lt;/span> lib &lt;span style="color:#ff79c6">in&lt;/span> self&lt;span style="color:#ff79c6">.&lt;/span>libs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">if&lt;/span> lib&lt;span style="color:#ff79c6">.&lt;/span>registered &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#ff79c6">False&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> score, curBookList &lt;span style="color:#ff79c6">=&lt;/span> lib&lt;span style="color:#ff79c6">.&lt;/span>predMaxScore(self&lt;span style="color:#ff79c6">.&lt;/span>nDays &lt;span style="color:#ff79c6">-&lt;/span> t, readBookSet)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scoreList&lt;span style="color:#ff79c6">.&lt;/span>append( score )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> readBookList&lt;span style="color:#ff79c6">.&lt;/span>append( curBookList )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scoreList&lt;span style="color:#ff79c6">.&lt;/span>append(&lt;span style="color:#bd93f9">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> readBookList&lt;span style="color:#ff79c6">.&lt;/span>append( [ ] )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">if&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">len&lt;/span>(scoreList) &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">if&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">max&lt;/span>(scoreList) &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> libIndex &lt;span style="color:#ff79c6">=&lt;/span> scoreList&lt;span style="color:#ff79c6">.&lt;/span>index(&lt;span style="color:#8be9fd;font-style:italic">max&lt;/span>(scoreList))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#ff79c6">.&lt;/span>libs[libIndex]&lt;span style="color:#ff79c6">.&lt;/span>registeredDay &lt;span style="color:#ff79c6">=&lt;/span> t
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#ff79c6">.&lt;/span>libs[libIndex]&lt;span style="color:#ff79c6">.&lt;/span>registered &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#ff79c6">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#ff79c6">.&lt;/span>libs[libIndex]&lt;span style="color:#ff79c6">.&lt;/span>solBooks &lt;span style="color:#ff79c6">=&lt;/span> readBookList[libIndex]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> readBookSet &lt;span style="color:#ff79c6">=&lt;/span> readBookSet&lt;span style="color:#ff79c6">.&lt;/span>union(readBookList[libIndex])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> solution&lt;span style="color:#ff79c6">.&lt;/span>append(self&lt;span style="color:#ff79c6">.&lt;/span>libs[libIndex])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#ff79c6">+=&lt;/span> self&lt;span style="color:#ff79c6">.&lt;/span>libs[libIndex]&lt;span style="color:#ff79c6">.&lt;/span>nSign
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd;font-style:italic">print&lt;/span>([(lib&lt;span style="color:#ff79c6">.&lt;/span>id, lib&lt;span style="color:#ff79c6">.&lt;/span>nSign, lib&lt;span style="color:#ff79c6">.&lt;/span>registeredDay) &lt;span style="color:#ff79c6">for&lt;/span> lib &lt;span style="color:#ff79c6">in&lt;/span> solution])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> solution
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">dump&lt;/span>(self, solution):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">open&lt;/span>(self&lt;span style="color:#ff79c6">.&lt;/span>filename&lt;span style="color:#ff79c6">.&lt;/span>replace(&lt;span style="color:#f1fa8c">&amp;#39;data/&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;out/&amp;#39;&lt;/span>), &lt;span style="color:#f1fa8c">&amp;#39;w+&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#ff79c6">.&lt;/span>write(&lt;span style="color:#f1fa8c">&amp;#39;&lt;/span>&lt;span style="color:#f1fa8c">{}&lt;/span>&lt;span style="color:#f1fa8c">\n&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;&lt;/span>&lt;span style="color:#ff79c6">.&lt;/span>format(&lt;span style="color:#8be9fd;font-style:italic">len&lt;/span>(solution)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">for&lt;/span> lib &lt;span style="color:#ff79c6">in&lt;/span> solution:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> books &lt;span style="color:#ff79c6">=&lt;/span> lib&lt;span style="color:#ff79c6">.&lt;/span>solBooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#ff79c6">.&lt;/span>write(&lt;span style="color:#f1fa8c">&amp;#39;&lt;/span>&lt;span style="color:#f1fa8c">{}&lt;/span>&lt;span style="color:#f1fa8c"> &lt;/span>&lt;span style="color:#f1fa8c">{}&lt;/span>&lt;span style="color:#f1fa8c">\n&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;&lt;/span>&lt;span style="color:#ff79c6">.&lt;/span>format(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lib&lt;span style="color:#ff79c6">.&lt;/span>id, &lt;span style="color:#8be9fd;font-style:italic">len&lt;/span>(books)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">for&lt;/span> book &lt;span style="color:#ff79c6">in&lt;/span> books:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s&lt;span style="color:#ff79c6">+=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">str&lt;/span>(book) &lt;span style="color:#ff79c6">+&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39; &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s&lt;span style="color:#ff79c6">+=&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;&lt;/span>&lt;span style="color:#f1fa8c">\n&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#ff79c6">.&lt;/span>write(s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#ff79c6">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">def&lt;/span> &lt;span style="color:#50fa7b">pri&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd;font-style:italic">print&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;------&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd;font-style:italic">print&lt;/span>(self&lt;span style="color:#ff79c6">.&lt;/span>nBooks, self&lt;span style="color:#ff79c6">.&lt;/span>nLibs, self&lt;span style="color:#ff79c6">.&lt;/span>nDays)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">#print(self.libs)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd;font-style:italic">print&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;------&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">if&lt;/span> __name__ &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;__main__&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p &lt;span style="color:#ff79c6">=&lt;/span> Problem(&lt;span style="color:#f1fa8c">&amp;#39;data/a.txt&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> solution &lt;span style="color:#ff79c6">=&lt;/span> p&lt;span style="color:#ff79c6">.&lt;/span>solve()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p&lt;span style="color:#ff79c6">.&lt;/span>dump(solution)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The Second critical class is &lt;code>Library&lt;/code> class. The vital function in our implementation is predMaxScore. We are doing calculating this with
&lt;code>total book score / (sign day*sign day)&lt;/code>. Because, during our experiments, we saw that the sign days length is quite important especially for some datasets. Total book score is simply if in that day the library is chosen, how much of the books can be scanned until the end of total days. Of course these books are selecting according to their scores and they should be not scanned before.&lt;/p></description></item><item><title>Coolest C Trick</title><link>https://mozanunal.com/2020/03/coolest-c-trick/</link><pubDate>Mon, 30 Mar 2020 23:45:00 +0000</pubDate><guid>https://mozanunal.com/2020/03/coolest-c-trick/</guid><description>&lt;p>Hello Everyone,&lt;/p>
&lt;p>Just a quick post here&amp;hellip;&lt;/p>
&lt;p>Today I have seen a code snippet which makes me quite happy.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">#include&lt;/span> &lt;span style="color:#ff79c6">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#ff79c6">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">&lt;/span>&lt;span style="color:#8be9fd">int&lt;/span> &lt;span style="color:#50fa7b">main&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8be9fd">int&lt;/span> x &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">while&lt;/span> (x &lt;span style="color:#ff79c6">--&amp;gt;&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span>) &lt;span style="color:#6272a4">// x goes to 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#f1fa8c">&amp;#34;%d &amp;#34;&lt;/span>, x);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The the output of this is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>9 8 7 6 5 4 3 2 1 0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It was a little suprising for me at first sight.
I thought that what the hell is &lt;code>--&amp;gt;&lt;/code> operator.
After then I understand that it is actually &lt;code>x--&lt;/code> and &lt;code>&amp;gt;&lt;/code>. X compared with 0 (cheked if it is bigger than 0) and then it is decremented by 1.
Therefore, this loop can be decoded to this:&lt;/p></description></item><item><title>Show Images Directly on Terminal: img2sh</title><link>https://mozanunal.com/2019/11/img2sh/</link><pubDate>Sun, 03 Nov 2019 10:48:19 +0000</pubDate><guid>https://mozanunal.com/2019/11/img2sh/</guid><description>&lt;h1 id="img2sh">Img2sh&lt;/h1>
&lt;p>Hello there,&lt;/p>
&lt;p>&lt;em>In this post, I want to tell a brief story of how I have created a tool named img2sh. It is also my first python package which is published over PyPI. In this very post, I will try to answer questions like:
How is it developed?
What are the challenges?
How should a package created and deployed over PyPI?
Let&amp;rsquo;s continue!&lt;/em>&lt;/p>
&lt;p>Img2sh is a tool to show images directly on the terminal. For colored images, 256 xterm color support is required. This script basically resizes the image with anti-aliasing and quantized its colors to xterm color pallette. &lt;a href="https://github.com/mozanunal/img2sh">Github repository of the project can be reached from here&lt;/a>&lt;/p></description></item><item><title>Yolo on Google Colab</title><link>https://mozanunal.com/2019/08/yolocolabdemo/</link><pubDate>Tue, 13 Aug 2019 00:09:50 +0000</pubDate><guid>https://mozanunal.com/2019/08/yolocolabdemo/</guid><description>&lt;h1 id="run-yolo-v3-on-colab-for-imagesvideos">Run YOLO V3 on Colab for images/videos&lt;/h1>
&lt;p>Hello there,
Today, we will be discussing how we can use the Darknet project on Google Colab platform. For those who are not familiar with these terms:&lt;/p>
&lt;p>&lt;img src="https://mozanunal.com/images/yoloroad.gif" alt="YOLO in action!">&lt;/p>
&lt;ul>
&lt;li>The Darknet project is an open-source project written in C, which is a framework to develop deep neural networks.&lt;/li>
&lt;li>Yolo V3 is an object detection algorithm. It is one of the state of the art solution when &lt;strong>accuracy/processing power needed&lt;/strong> metric is considered.&lt;/li>
&lt;li>Google Cola is a cloud-based data science workspace similar to the jupyter notebook. Each Collabrotary session is equipped with a virtual machine running 13 GB of ram and either a CPU, GPU, or TPU processor. In most case, all the required packages are already installed on these machines and you can quite easily start development using Google Collaboratory. It saves us from installing process and it provides us &lt;strong>easy to accessible GPU&amp;rsquo;s&lt;/strong> which is also &lt;strong>free&lt;/strong> under some constraints.&lt;/li>
&lt;/ul>
&lt;p>Have a look Ted Talk by Joseph Redmon the developer of the darknet project. The talk is about Darknet and YOLO projects which titled as “How computers learn to recognize objects instantly” . Darknet project aims to create a new neural network framework which is completely focused on simplicity and performance. The thing which I like about is its clarity and performance. All the code is written in C, to define a deep learning network you should only create a config file which defines the layers. By this way, it does not lose its performance capabilities also it provides us easy to use interface for development with this library.&lt;/p></description></item><item><title>Playing DOTA on Raspberry Pi using Steam Link</title><link>https://mozanunal.com/2019/02/steam-link-on-rpi/</link><pubDate>Fri, 01 Feb 2019 00:45:01 +0000</pubDate><guid>https://mozanunal.com/2019/02/steam-link-on-rpi/</guid><description>&lt;p>&lt;strong>Hello,&lt;/strong>
Steam Link is software which provides support to Steam to stream screen view of the games to devices which is on same local area network. In this setup, there are 2 devices. First one is the device to run the Steam and the games which act as a server. The second one is the one which runs Steam Link and acts as a client to this server. By using this technology you can play games directly on a device which is connected to the same router. The connection is also 2 way. Thus, control devices such as keyboard, mouse and game controllers can be connected directly to the client device.&lt;/p></description></item><item><title>[TR] Android Terminal Emülatörü: Termux</title><link>https://mozanunal.com/2018/07/termux/</link><pubDate>Mon, 30 Jul 2018 20:04:35 +0000</pubDate><guid>https://mozanunal.com/2018/07/termux/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar,&lt;/strong>&lt;/p>
&lt;p>Benim gibi sıklıkla linuxla uğraşan bir insansanız işinize çok fazla yarıyabilecek bir araçtan bahsedeceğim. Bu Androidte çalışan terminal emülatörü &lt;strong>Termux&lt;/strong>. Termux linux kullanmaya alışık olduğumuz araçları androidde de kullanabilmemizi sağlayan bir android app aslında. Direk play store üzerinden &lt;a href="https://play.google.com/store/apps/details?id=com.termux&amp;amp;hl=en">bu link &lt;/a> üzerinden yükleyebilirsiniz. Termux aynı zamanda açık kaynaklı bir proje github hesabına &lt;a href="https://github.com/termux">buradan&lt;/a> ulaşabilirsiniz. Burada android app ve bütün paketlerin kaynak kodu mevcut.&lt;/p>
&lt;p>&lt;img src="https://mozanunal.com/images/termux_ssh.jpg" alt="termux ssh bağlantısı">&lt;/p>
&lt;p>Özelliklerine gelecek olursak kendi paket yöneticilerini geliştirmişler. İsmi pkg bir sürü popüler paketi kurabilmeniz mümkün. Programa girdiğinizde direk bir bash terminal karşılıyor bizi. Burada standart bash komutlarının çoğu çalışıyor. Örneğin ls, pwd, cat, echo&amp;hellip;&lt;/p></description></item><item><title>[TR] Hackhathon Getir 2018</title><link>https://mozanunal.com/2018/04/getir-hackhathon/</link><pubDate>Mon, 16 Apr 2018 18:10:04 +0000</pubDate><guid>https://mozanunal.com/2018/04/getir-hackhathon/</guid><description>&lt;blockquote>
&lt;p>It is a project developed for BiTaksi Getir Hackathon 2018. Detailed information can be found from below.&lt;/p>
&lt;/blockquote>
&lt;h1 id="team-paketci">Team Paketci!&lt;/h1>
&lt;p>&lt;img src="https://mozanunal.com/images/1523149456799.jpg" alt="image">&lt;/p>
&lt;p>&lt;a href="https://hackhathon-getir-2018.herokuapp.com/">Check our app from here&lt;/a> which is deployed using heroku.&lt;/p>
&lt;p>&lt;a href="https://github.com/mozanunal/paketci-backend">Check github repo of app from here&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://github.com/mozanunal/paketci-backend/blob/master/doc/images/timeLine.PNG?raw=true" alt="Timeline of our little project!">&lt;/p>
&lt;p>Getir Hackhathon 2018
Team Members:
Sertan Sezgin Kutlu
Ertuğrul Çınar
Mehmet Ozan Ünal&lt;/p>
&lt;h1 id="paketci-app">Paketci App&lt;/h1>
&lt;p>Its a work on pack collection and delivery for courier and observer.&lt;/p>
&lt;h3 id="features">Features:&lt;/h3>
&lt;p>By Backend:
1.Assign routes for couries by relate most efficent path.
2.Update states of packets.
3.Update states of couriers.&lt;/p></description></item><item><title>[TR] Hash Code 2018</title><link>https://mozanunal.com/2018/04/hash-code-2018/</link><pubDate>Sun, 08 Apr 2018 00:45:01 +0000</pubDate><guid>https://mozanunal.com/2018/04/hash-code-2018/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar,&lt;/strong>
Hash Code Google tarafından dünya çapında düzenlenen bir algoritma yarışmasıdır. Bu yıl itibariyle son 3 tanesine ben de katılmış bulunuyorum. Hatta geçen sene yarışma hakkında bir yazı da yazmıştım. Bu geleneği bu yıl da devam ettirmeye karar verdım.&lt;/p>
&lt;p>Bu seneki yarışmada çok başarılı olamadık derece anlamında. Ama yarışmada çalışan, puan alabilen bir çözüm sunmak bile baya zor. O nedenle ben de çözümüzü birazcık açıklamak istiyorum. Aşağıdan direk github reposunu inceleyebilirsiniz.
&lt;a href="https://github.com/mozanunal/hashcode-2018-qualificationQuestion">Github Repo&lt;/a>&lt;/p></description></item><item><title>[TR] Hexo Blog Servisi Nedir</title><link>https://mozanunal.com/2017/07/hexo-blog-servisi-nedir/</link><pubDate>Thu, 27 Jul 2017 10:48:00 +0000</pubDate><guid>https://mozanunal.com/2017/07/hexo-blog-servisi-nedir/</guid><description>&lt;p>Herkese merhabalar,&lt;/p>
&lt;p>Beni takip ediyorsanız farketmişsinizdir çok yakın zamanda blogumu baştan sona değiştirdim. Bunu yapmamın sebebi önceden blogger kullanıyordum fakat bir süre sonra bazı özellikleri yetersiz gelmeye başladı. Daha çok özelleştirilebilir ve farklı eklentileri destekleyen bir blog yönetim aracına ihtiyacım olduğuna karar verdim ve araştırmaya koyuldum. Karşıma ilk çıkanlar en popüler olanlardı tabi ki fakat biraz daha ayrıntılı araştırınca hexo.io buldum. Kendisi şu anda kullandığım blog aracı. Temel olarak node.js tabanlı bir statik site generator. İnanılmaz bir eklenti ve tema desteği var. Benim için tercih sebebi yapan neydi diye sorarsanız 2 şeyi sayabilirim: Markdown desteği olması ve github pages üzerinden host edilebilmesi. Markdown yazılarınızı kolayca biçimlendirmenizi sağlayan bir servis. Kolaylığına öyle alıştım ki yazmam gereken herhangi bir yazıda onu arıyorum. Daha sonrasında kategori, yorum olaylarını desteklemesi ve arama motorları için kolayca rss feed, site map oluşturabilmem hoşuma giden diğer özellikler oldu.&lt;/p></description></item><item><title>[TR] Google Hash Code 2017</title><link>https://mozanunal.com/2017/07/google-hash-code-2017/</link><pubDate>Thu, 13 Jul 2017 02:51:00 +0000</pubDate><guid>https://mozanunal.com/2017/07/google-hash-code-2017/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar&lt;/strong>,&lt;/p>
&lt;p>Google bir kaç senedir tüm dünyada programlama ve algoritmalar üzerine bir yarışma düzenliyor. Bu yarışma kapsamında, yarışmanın katılımcılarına karmaşık algoritmik problemler veriliyor ve istenilen data kümeleri için yine verilen formatta sonuçlar oluşturacak algoritmalar yazılması gerekiyor. Son olarak bu sonuç dosyaları Google&amp;rsquo;ın sistemine yükleniyor ve skor hesaplanıyor. Yarışma 2 aşamadan oluşuyor 1. aşama online eleme. İkinci aşama ise ilk 30&amp;rsquo;a giren gruplar bir merkezde yarışıyor. Ben de yarışmaya 2016 ve 2017 yıllarında katıldım. Bu yazıda 2017 yılındaki online eleme sorusu ve pratik sorusu hakkında paylaşımlar yapmak istiyorum. Bu arada bu soruları 4 saat içerisinde çözememiz gerekiyor bu nedenle kodlar hızlı yazıldı hata içerebilir fakat her iki kod da google&amp;rsquo;ın sisteminde oldukça iyi puanlar alıyordu.&lt;/p></description></item><item><title>Artwork Sharing Platform with Augmented Reality</title><link>https://mozanunal.com/2017/04/art-sharing-platform-1521976119976/</link><pubDate>Sun, 16 Apr 2017 18:04:36 +0000</pubDate><guid>https://mozanunal.com/2017/04/art-sharing-platform-1521976119976/</guid><description>&lt;p>This is a project develop for Tech4Culture Hackhathon 2017.&lt;/p>
&lt;p>Project features:&lt;/p>
&lt;ul>
&lt;li>You can share artworks&lt;/li>
&lt;li>You can follow artist who you like&lt;/li>
&lt;li>You can explore and experience artworks with augmented reality&lt;/li>
&lt;li>You can follow art foundations for art and culture activities&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://mozanunal.com/images/1521977188211.png" alt="image">&lt;/p>
&lt;p>&lt;img src="https://mozanunal.com/images/1521977228493.png" alt="image">&lt;/p>


 
 &lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube-nocookie.com/embed/agt2mLnlgAk?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
 >&lt;/iframe>
 &lt;/div>

&lt;p>Future Improvements&lt;/p></description></item><item><title>[TR] Python için komple bir çözüm: Anaconda</title><link>https://mozanunal.com/2016/09/python-icin-komple-bir-cozum-anaconda/</link><pubDate>Mon, 12 Sep 2016 02:41:00 +0000</pubDate><guid>https://mozanunal.com/2016/09/python-icin-komple-bir-cozum-anaconda/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar,&lt;/strong>&lt;br>
Bugünkü yazımda en sevdiğim programlama dillerinden biri olan pyhtondan bahsetmek istiyorum. Python son yıllarda popüleritesini iyice arttıran, özellikle bilimsel araştırmalarda sıklıkla kullanılan bir programlama dilidir. Neredeyse her konu hakkında python kütüphanesi bulmak mümkün. Linux ortamı altında gerekli kütüphaneleri yüklemek ve projenizde bu paketleri referanslamak inanılmaz kolay. Ayrıca python programları derlenmiyor yorumlanarak çalıştırılıyor. Bu saydığım son 2 özellik pythonu kullanması kolay ve geliştirmesi hızlı hale getiriyor. Bu yazıda asıl gündeme getireceğim konu python üzerinden veri bilimi ile uğraşanların işlerini kolaylaştırmak için geliştirilmiş bir &amp;ldquo;Enterprise&amp;rdquo;. İsmi Anaconda.&lt;br>
Yüklediğiniz zaman veri işleme ve raporlama ile alakalı 100 paket doğrudan geliyor ayrıca 700 paket &amp;ldquo;conda&amp;rdquo; isimli paket yöneticisiyle kurulabiliyor. Aşağıdan linkine ulaşabilirsiniz&lt;br>
&lt;a href="https://www.continuum.io/downloads">https://www.continuum.io/downloads&lt;/a>&lt;/p></description></item><item><title>[TR] Açık Kaynak Yazılım Lisans Türleri ve Farkları</title><link>https://mozanunal.com/2016/09/ack-kaynak-yazlm-lisans-turleri-ve/</link><pubDate>Sun, 04 Sep 2016 20:16:00 +0000</pubDate><guid>https://mozanunal.com/2016/09/ack-kaynak-yazlm-lisans-turleri-ve/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar,&lt;/strong>&lt;br>
       Yazılım dünyasında son zamanlarda artan bir &amp;ldquo;Açık Kaynak&amp;rdquo; çılgınlığı var. Hobi amaçlı bu işi yapanlardan bu konuyla alakalı en büyük şirketlere ve kuruluşlara kadar bir çok kişi veya kuruluş yazılımlarını &amp;ldquo;açık kaynaklı&amp;rdquo; olarak yayıyor. Peki bu yazılımları kullanmak istediğimiz veya kendi yazılımımızı açık kaynaklı olarak dağıtmak istediğimizde sınırlarımız ve sorumluluklarımız neler? İşte bu noktada açık kaynaklı yazılımların lisansları devreye giriyor. Bazıları bir çok şeyi serbest bırakırken, bazıları ticari projelerde kullanılmasına izin vermiyor, bazıları ise yazılımın değiştirilmesine olanak tanımıyor. İşte bu farklar ve sorumlulukları bu yazımda özetlemeye çalıştım. Sırayla popüler açık kaynak yazılım lisanslarını tek tek inceleyeceğiz.&lt;/p></description></item><item><title>[TR] Web Tabanlı Programlar</title><link>https://mozanunal.com/2016/01/web-tabanl-programlar/</link><pubDate>Sat, 16 Jan 2016 03:45:00 +0000</pubDate><guid>https://mozanunal.com/2016/01/web-tabanl-programlar/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar,&lt;/strong>&lt;br>
Bugünkü yazımda web tabanlı programlardan bahsetmek istiyorum. Web teknolojilerinin gelişmesiyle beraber browser tabanlı oldukça yararlı ve kullanımı da bir o kadar kolay programlar ortaya çıkmaya başladı. Hatta bunun bir üst aşaması olarak ChromeOS browser tabanlı bir işletim sistemi bile var. Ayrıca bu tarz programların projelerine dosyalarına her bilgisayardan ulaşabilmek, kurulum yapmadan bir çok şeyi halletme gibi avantajları da var. Böyle olunca ben de bu şekilde çalışan yararlı programları bir yazı altında toplamak istedim. Bilmediğim daha bir sürü program olduğuna eminim eğer bana yollayabilirseniz onları da yazıya ekleyebilirim.&lt;/p></description></item><item><title>[TR] Droid Script</title><link>https://mozanunal.com/2015/08/droid-script/</link><pubDate>Mon, 17 Aug 2015 10:15:00 +0000</pubDate><guid>https://mozanunal.com/2015/08/droid-script/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar,&lt;/strong>&lt;br>
      Bugün size bir android uygulaması olan Droid Script uygulamasından bahsetmek istiyorum. &lt;a href="https://play.google.com/store/apps/details?id=com.smartphoneremote.androidscriptfree">Programa burayı tıklayarak ulaşabilirsiniz&lt;/a>. Bu uygulama bana göre en iyi android uygulamasıdır. Droid Script java script tabanlı Android uygulama geliştirme uygulamasıdır. Bu program sayesinde android üzerinde android için kolayca uygulama geliştirebilirsiniz. Bunu yapabileceğiniz farklı uygulamalar bulabilmeniz mümkün. Droid Script ayıran özellikler ise şöyle sıralayabiliriz:&lt;/p>
&lt;ul>
&lt;li>Çok gelişmiş program içi dokümantasyon (Programdan hiç çıkmadan dokümantasyon bölümünden bakarak uygulamalarınızı geliştirebilirsiniz )&lt;/li>
&lt;li>Telefon donanımına kolay ulaşım (Gps, kamera, sensörler, bluetooth)&lt;/li>
&lt;li>Çok geniş örnek uygulama havuzu (Aklınıza gelebilecek her şeyin örneği var ve yine program içinden ulaşabiliyorsunuz.)&lt;/li>
&lt;li>Jqplot Canvgauge gibi Java Script kütüphanelerini uygulamalarınızda gömülü olarak kullanabilirsiniz.( Gerçek zamanlı sensör grafikleri çizdirebilir, çeşitli Gauge ekleyebilirsiniz.)&lt;/li>
&lt;li>Google Speech Recognition ve Google Text to Speech desteği&lt;/li>
&lt;li>WebGL sayesinde yüksek performanslı yüksek görsellikte oyun tasarımı&lt;/li>
&lt;li>Veri tabanı oluşturabilirsiniz.&lt;/li>
&lt;li>Web browser ve TCP UDP gibi network programlama desteği.&lt;/li>
&lt;li>Eğer telefon üzerinden geliştirmek istemiyorsanız Wifi aracılığıyla bilgisayarınızdaki browser üzerinden doğrudan bilgisayarınızda programınızı geliştirip tek tuş ile telefonunuzda deneyebilirsiniz.&lt;/li>
&lt;/ul>
&lt;p>Kısacası, Android programlama asıl odaklandığınız nokta değilse fakat projelerinizde Android kullanmak istiyorsanız Droid Script tam aradığınız program. Fazla zaman ayırmadan istediğiniz uygulamayı geliştirmeniz mümkün.&lt;/p></description></item><item><title>[TR] Youtube Arka Plan Müzik Dinleyici</title><link>https://mozanunal.com/2015/06/youtube-arka-plan-muzik-dinleyici/</link><pubDate>Mon, 29 Jun 2015 03:09:00 +0000</pubDate><guid>https://mozanunal.com/2015/06/youtube-arka-plan-muzik-dinleyici/</guid><description>&lt;p>&lt;strong>Merhaba Arkadaşlar,&lt;/strong>&lt;br>
Bu yazımda kendi yazdığım bir Android uygulamasından bahsedeceğim. Telefonda youtube kullanmanın en sıkıntılı yanlarından biri video açıkken başka uygulamalara geçtiğimiz zaman videonun durdurulmasıdır. Bu uygulama sayesinde program arka plana alınsa bile video oynamaya devam eder ve sesini duyabilirsiniz.&lt;a href="https://drive.google.com/file/d/0B5j__Lyt9ozbQXExRTRnX1pSTW8/view?usp=sharing">Programı burdan indirebilirsiniz.&lt;/a>&lt;/p>
&lt;p>Not: Programı sadece 3 telefonda deneme şansı bulabildim. Belki başka telefonlarda çalışmayabilir şimdiden uyarmak isterim.&lt;/p>
&lt;p>For foreign visitors:&lt;br>
One of the biggest problem about Youtube is that stopping videos when youtube at back ground or screen off. Therefore i decided to develop an app for solving this problem.
&lt;a href="https://drive.google.com/file/d/0B5j__Lyt9ozbQXExRTRnX1pSTW8/view">You can download the app from here. &lt;/a>&lt;br>
Note: I can try the app only 3 android phone may be it does not work another android phones.&lt;/p></description></item><item><title>[TR] Android Phone IMU Visualizer</title><link>https://mozanunal.com/2015/05/android-phone-imu-visualizer/</link><pubDate>Mon, 18 May 2015 06:23:00 +0000</pubDate><guid>https://mozanunal.com/2015/05/android-phone-imu-visualizer/</guid><description>&lt;p>&lt;strong>Hi,&lt;/strong>&lt;/p>
&lt;p>I usually write my blog in Turkish but at this project i decided to write it in English. Because I cannot find any successful tutorial about this issue. I took e-mails or contacts from different countries about my projects if they are unusual so i am going to write some of my article in English.&lt;/p>
&lt;p>At this project, visualization of android device with IMU sensors will be explained.The orientation of an android device will be shown at PC. Android camera and PC communicate with each other with a WI- FI connection. I wrote 2 program for this project. First one is android app (&lt;a href="https://drive.google.com/file/d/0B5j__Lyt9ozbNG9SdVBOOVowTjg/view?usp=sharing">can download from here&lt;/a>). Second one is visualizer program for PC. At android app IMU angles of the&lt;br>
Android phone are sent to PC by using UDP network protocol. After you install the app write your PC&amp;rsquo;s IP to this program. Also you can change the using port.&lt;/p></description></item><item><title>[TR] Yeni Android Programım: Adres Defteri</title><link>https://mozanunal.com/2015/01/yeni-android-programm-adres-defteri/</link><pubDate>Thu, 08 Jan 2015 02:46:00 +0000</pubDate><guid>https://mozanunal.com/2015/01/yeni-android-programm-adres-defteri/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar!&lt;/strong>&lt;/p>
&lt;p>Bu yazımda yaptığım Android programı sizlerle paylaşmak istiyorum. Programımın adı Adres Defteri, Size gerekli olan adresleri kolayca kaydetmenize daha sonra navigasyon için kullanmanızı veya başkalarıyla paylaşmanızı sağlayan ve bunu çok kolaylaştıran bir program. &lt;a href="https://drive.google.com/file/d/0B5j__Lyt9ozbdElDaVBKWmlKY1k/view?usp=sharing">Adres Defteri Programımını buradan indirebilirsiniz.&lt;/a>H
Programın kullanımını aşağıdan öğrenebilirsiniz.&lt;/p>
&lt;p>Gps bağlanınca GPS: yazan yerde bulunduğunuz yerin koordinantları çıkar.&lt;/p>
&lt;p>&lt;img src="https://2.bp.blogspot.com/-QXEe-6LkU14/VK29Nfmx__I/AAAAAAAAGak/xogtu16x_og/s720/Screenshot_2015-01-07-14-06-02.png" alt="">&lt;/p>
&lt;p>Daha sonra adresin ismi yazılır ve kaydet butonuna basılır.&lt;/p>
&lt;p>&lt;img src="https://1.bp.blogspot.com/-P4DNz4UUnUU/VK29NYQk5pI/AAAAAAAAGag/TgviIDhFYZ0/s720/Screenshot_2015-01-07-14-06-30.png" alt="">&lt;/p>
&lt;p>Kaydınız başarılı ise böyle bir mesaj alırsınız.&lt;/p></description></item><item><title>[TR] Serial Port Grapher</title><link>https://mozanunal.com/2014/12/serial-port-grapher/</link><pubDate>Tue, 23 Dec 2014 02:59:00 +0000</pubDate><guid>https://mozanunal.com/2014/12/serial-port-grapher/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar,&lt;/strong>&lt;br>
İlk yazılarımdan birinde seri port üzerinden grafik çizen bir programın C#&amp;rsquo;ta nasıl yazılabileceğini anlatmıştım(&lt;a href="https://mozanunal.com/2014/05/c-gercek-zamanl-grafik-cizme-program/">Buradan ulaşabilirsiniz&lt;/a>.) Bu yazımda ise programın derlenmiş ve setup haline getirilmiş halini paylaşıyorum. Fark ettim ki bir sürü insan böyle bir programa ihtiyaç duyuyormuş. Bu program sayesinde Arduinonuzdan(başka işlemciler veya boardlar da olabilir.) veya herhangi bir serial port cihazından gönderdiğiniz &amp;ldquo;string&amp;rdquo; formattındaki verilerin gerçek zamanlı  olarak grafiğini çizdirebilirsiniz. Tek dikkat etmeniz gereken gelen verinin&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>$,data1,data2,data3, 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>şeklinde olmasıdır aksi takdirde program gelen veriyi dikkate almaz. Programla alakalı iyi, kötü görüşlerinizi veya sorunları, bugları bana yollayabilirsiniz.&lt;br>
&lt;a href="https://drive.google.com/file/d/0B5j__Lyt9ozbU3JELTV3MWpqWFk/view?usp=sharing">Programı buradan indirebiliriniz&lt;/a>&lt;/p></description></item><item><title>[TR] Linuxta Kullanabileceğiniz 10 Yararlı Program</title><link>https://mozanunal.com/2014/12/linuxta-kullanabileceginiz-10-yararl/</link><pubDate>Wed, 03 Dec 2014 06:30:00 +0000</pubDate><guid>https://mozanunal.com/2014/12/linuxta-kullanabileceginiz-10-yararl/</guid><description>&lt;p>Herkese Merhabalar,&lt;/p>
&lt;p>Bugünkü yazımda Linuxta kullanabileceğiniz bir kaç yararlı programdan bahsetmek istiyorum. Bu programlar windows kullanıcılarının aşina olduğu, güzel alternatif programlar. Ben de kullandığım bu programları sizinle paylaşmak istedim. Yani öyle Linux&amp;rsquo;taki en iyi 10 program bunlar, hepsi sıfır hatalı diye iddalı bir başlıkla çıkmıyorum kaşınıza :D. Neyse programlara geçelim.&lt;/p>
&lt;ul>
&lt;li>İlk program Ubuntu Software Center. Bu program üzerinden Ubuntu&amp;rsquo;da çalışabilen bir çok programa ulaşabiliyorsunuz ve onları indirip kurabiliyorsunuz. Güzel şekilde kategorize edilmiş ve eklenti seçeneklerini seçme özelliği eklenmiş gerçekten hoş ve işleri kolaylaştıran bir program.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://4.bp.blogspot.com/-Bm-g47lRV64/VH5qesXPW5I/AAAAAAAAFhU/K_bf45ZAXaM/s1600/Screenshot%2Bfrom%2B2014-12-03%2B01%3A33%3A30.png" alt="">&lt;/p></description></item><item><title>[TR] Flash Belleğe Ubuntu Kurmak</title><link>https://mozanunal.com/2014/12/flash-bellege-ubuntu-kurmak/</link><pubDate>Wed, 03 Dec 2014 03:28:00 +0000</pubDate><guid>https://mozanunal.com/2014/12/flash-bellege-ubuntu-kurmak/</guid><description>&lt;p>&lt;strong>Merhabalar,&lt;/strong>&lt;br>
Bugün size flash belleğe ubuntu kurmaktan bahsedeceğim. Open source seven insanlar için Linux her zaman en çekici gelen işletim sistemi olmuştur. Fakat program desteği, driver sorunları derken linux tek işletim sistemi olarak kullanmak oldukça zor bir olay haline geliyor. İşte bunun için çok güzel çözümler var. Bunlardan bir tanesi aynı hard disk üzerine ikinci bir işletim sistemi kurmak. Bu çözüm bana daha zor ve karışık geliyor, benim tercih ettiğim ise bir flash belleğe Ubuntu kurup gerekli zamanlarda bilgisayarı onun üzerinden boot ederek Linuxun özgür dünyasına dalmak. Evet anlatıma geçersem aslında çok basit olduğunu göreceksiniz.&lt;/p></description></item><item><title>[TR] Processing ile Android Telefonda Uygulama Geliştirme</title><link>https://mozanunal.com/2014/11/processing-ile-android-telefonda/</link><pubDate>Sun, 09 Nov 2014 06:27:00 +0000</pubDate><guid>https://mozanunal.com/2014/11/processing-ile-android-telefonda/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar!&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://4.bp.blogspot.com/-mWaFbWIHvPk/VF7g4rYgSxI/AAAAAAAAFHw/vbMO-hISTB4/s720/primitives3D.png" alt="">&lt;/p>
&lt;p>Processing dili son yıllarda Arduino ile popülerleşmeye başlayan görsel programlama dilidir. Hızlı prototipleme için geliştirilmiştir Arduinoya görsel arayüz hazırlama için sıklıkla kullanılmaktadır. Processing Windows, Linux, Android, Mac her platformda çalışmaktadır. Kendi program geliştirme arayüzü bulunmaktadır. Bu programlama diliyle kolay bir şekilde 2D, 3D görsel uygulamalar yapılabilir.&lt;/p>
&lt;p>Ben bugünkü yazımda nasıl Android telefonda Android için nasıl Processing diliyle görsel uygulama yapılacağını anlatacağım. Öncelikle Google Playden uygulama geliştirmek için gerekli IDE&amp;rsquo;yi(geliştirme ortamını) indiriyoruz. Bir çok çeşit geliştirme ortamı var fakat ben APDE uygulamasını tercih ettim. Bu uygulama ile processing kodu yazıp onu derleyip telefon üzerinde deneyebiliyoruz.&lt;/p></description></item><item><title>[TR] Oyun (First Flight)</title><link>https://mozanunal.com/2014/05/oyunfirst-flight/</link><pubDate>Tue, 27 May 2014 06:42:00 +0000</pubDate><guid>https://mozanunal.com/2014/05/oyunfirst-flight/</guid><description>&lt;p>İlk oyun denememi görsel programlayla çalışan Game Maker ile yaptım. Android oyunu olarak başladım fakat lisans satın almak gerektiğini öğrenince bilgisayar oyunu olarak kaldı. Bu benim ilk oyunumdur. İsmi &amp;ldquo;First Flight&amp;rdquo; ilk defa uçan bir kuşun başına gelenlerden oluşuyor (uçaklar, füzeler, kartallar). Ona yardım edenler de var tabi ki Angry Birds :D. Umarım beğenirsiniz. Tekrar görüşmek üzere&amp;hellip;&lt;br>
 &lt;a href="https://docs.google.com/file/d/0B5j__Lyt9ozbOFBqa0JEQjI4NjA/edit">Oyunumu buradan indirebilirsiniz&lt;/a>&lt;/p>


 
 &lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube-nocookie.com/embed/PL8fSl5TgSU?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
 >&lt;/iframe>
 &lt;/div></description></item><item><title>[TR] C# Gerçek Zamanlı Grafik Çizme Programı</title><link>https://mozanunal.com/2014/05/c-gercek-zamanl-grafik-cizme-program/</link><pubDate>Tue, 27 May 2014 05:17:00 +0000</pubDate><guid>https://mozanunal.com/2014/05/c-gercek-zamanl-grafik-cizme-program/</guid><description>&lt;p>&lt;strong>Herkese Merhabalar!&lt;/strong>&lt;br>
&lt;a href="https://github.com/mozanunal/serialPortGrapher">Programın kaynak koduna buradan ulaşabilirsiniz.&lt;/a>&lt;br>
İkinci yazımda C# ile gerçek zamanlı grafik çizdirme uygulamasından bahsedeceğim. Bu uygulamada C# programlama dili ve Microsoft Visual Studio 2010 kullanılmıştır. C# ile grafik çizmemize olanak sağlayan zed graph kütüphanesinden yararlanılmıştır.&lt;a href="https://zedgraph.sourceforge.net/index.html">Bu kütüphaneyi buradan indirebilirsiniz&lt;/a>. Sistemin genel algoritmasına bakarsak şöyle çalışır; seri porttan veri okunur, veri aralardaki virgüllere göre parse edilip labellera aktarılır, Eklenen &amp;ldquo;Timer&amp;rdquo; öğesi ile timerın her periyodunda zaman belirten labela geçen zaman kadar eklenir böylece kaçıncı saniye olduğu tutulur, aynı zamanda timerın her bir periyodunda x değerleri zaman, y değerleri data noktaları olmak üzere grafiğe bir nokta eklenir. Şimdi çalışma şeklini daha ayrıntılı bir şekilde inceleyelim.&lt;/p></description></item></channel></rss>